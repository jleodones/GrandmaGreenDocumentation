{
  "api/Global.EInventoryClass.html": {
    "href": "api/Global.EInventoryClass.html",
    "title": "Enum EInventoryClass",
    "keywords": "Enum EInventoryClass Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum EInventoryClass Fields Name Description Decor Plants Seeds Tools"
  },
  "api/Global.GameLoadingScreen.html": {
    "href": "api/Global.GameLoadingScreen.html",
    "title": "Class GameLoadingScreen",
    "keywords": "Class GameLoadingScreen Inheritance Object GameLoadingScreen Namespace : Global Assembly : cs.temp.dll.dll Syntax public class GameLoadingScreen : MonoBehaviour Fields canvas Declaration public Canvas canvas Field Value Type Description Canvas Methods LoadingEnd(SCENES) Declaration protected virtual void LoadingEnd(SCENES scene) Parameters Type Name Description SCENES scene LoadingStart(SCENES) Declaration protected virtual void LoadingStart(SCENES scene) Parameters Type Name Description SCENES scene"
  },
  "api/Global.html": {
    "href": "api/Global.html",
    "title": "Namespace Global",
    "keywords": "Namespace Global Classes GameLoadingScreen InventoryData InventoryListController InventoryListEntryController MainView SetCameraBounds TileManager TileStore ToolsMenu ToolsMenuController ToolTest ToolType Structs TileData Enums EInventoryClass"
  },
  "api/Global.InventoryData.html": {
    "href": "api/Global.InventoryData.html",
    "title": "Class InventoryData",
    "keywords": "Class InventoryData Inheritance Object InventoryData Namespace : Global Assembly : cs.temp.dll.dll Syntax public class InventoryData : ScriptableObject Fields m_Class Declaration public EInventoryClass m_Class Field Value Type Description EInventoryClass m_InventoryItemName Declaration public string m_InventoryItemName Field Value Type Description String m_ItemImage Declaration public Sprite m_ItemImage Field Value Type Description Sprite"
  },
  "api/Global.InventoryListController.html": {
    "href": "api/Global.InventoryListController.html",
    "title": "Class InventoryListController",
    "keywords": "Class InventoryListController Inheritance Object InventoryListController Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class InventoryListController Methods InitializeInventoryList(VisualElement, VisualTreeAsset) Declaration public void InitializeInventoryList(VisualElement root, VisualTreeAsset listElementTemplate) Parameters Type Name Description VisualElement root VisualTreeAsset listElementTemplate"
  },
  "api/Global.InventoryListEntryController.html": {
    "href": "api/Global.InventoryListEntryController.html",
    "title": "Class InventoryListEntryController",
    "keywords": "Class InventoryListEntryController Inheritance Object InventoryListEntryController Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class InventoryListEntryController Methods SetInventoryData(InventoryData) Declaration public void SetInventoryData(InventoryData inventoryData) Parameters Type Name Description InventoryData inventoryData SetVisualElement(VisualElement) Declaration public void SetVisualElement(VisualElement visualElement) Parameters Type Name Description VisualElement visualElement"
  },
  "api/Global.MainView.html": {
    "href": "api/Global.MainView.html",
    "title": "Class MainView",
    "keywords": "Class MainView Inheritance Object MainView Namespace : Global Assembly : cs.temp.dll.dll Syntax public class MainView : MonoBehaviour"
  },
  "api/Global.SetCameraBounds.html": {
    "href": "api/Global.SetCameraBounds.html",
    "title": "Class SetCameraBounds",
    "keywords": "Class SetCameraBounds Inheritance Object SetCameraBounds Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SetCameraBounds : MonoBehaviour Fields cameraVolume Declaration public Transform cameraVolume Field Value Type Description Transform vCam Declaration public CinemachineVirtualCamera vCam Field Value Type Description CinemachineVirtualCamera Methods CalculateBounds() Declaration public void CalculateBounds()"
  },
  "api/Global.TileData.html": {
    "href": "api/Global.TileData.html",
    "title": "Struct TileData",
    "keywords": "Struct TileData Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : Global Assembly : cs.temp.dll.dll Syntax [Serializable] public struct TileData Fields occupied Declaration public bool occupied Field Value Type Description Boolean pathable Declaration public bool pathable Field Value Type Description Boolean plantable Declaration public bool plantable Field Value Type Description Boolean plottable Declaration public bool plottable Field Value Type Description Boolean tile Declaration public TileBase tile Field Value Type Description TileBase"
  },
  "api/Global.TileManager.html": {
    "href": "api/Global.TileManager.html",
    "title": "Class TileManager",
    "keywords": "Class TileManager Inheritance Object TileManager Namespace : Global Assembly : cs.temp.dll.dll Syntax public class TileManager : MonoBehaviour"
  },
  "api/Global.TileStore.html": {
    "href": "api/Global.TileStore.html",
    "title": "Class TileStore",
    "keywords": "Class TileStore Inheritance Object TileStore Namespace : Global Assembly : cs.temp.dll.dll Syntax public class TileStore : ScriptableObject Fields tileDataSet Declaration public List<TileData> tileDataSet Field Value Type Description List < TileData > Properties Item[Int32] Declaration public TileData this[int i] { get; set; } Parameters Type Name Description Int32 i Property Value Type Description TileData Item[TileBase] Declaration public TileData this[TileBase tile] { get; } Parameters Type Name Description TileBase tile Property Value Type Description TileData"
  },
  "api/Global.ToolsMenu.html": {
    "href": "api/Global.ToolsMenu.html",
    "title": "Class ToolsMenu",
    "keywords": "Class ToolsMenu Inheritance Object ToolsMenu Namespace : Global Assembly : cs.temp.dll.dll Syntax public class ToolsMenu : MonoBehaviour Fields toolData Declaration public PlayerToolData toolData Field Value Type Description PlayerToolData zoom Declaration public CameraZoom zoom Field Value Type Description CameraZoom"
  },
  "api/Global.ToolsMenuController.html": {
    "href": "api/Global.ToolsMenuController.html",
    "title": "Class ToolsMenuController",
    "keywords": "Class ToolsMenuController Inheritance Object ToolsMenuController Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Global Assembly : cs.temp.dll.dll Syntax [Serializable] public class ToolsMenuController Constructors ToolsMenuController(VisualElement) Declaration public ToolsMenuController(VisualElement root) Parameters Type Name Description VisualElement root Fields panel Declaration public IPanel panel Field Value Type Description IPanel toolData Declaration public PlayerToolData toolData Field Value Type Description PlayerToolData zoom Declaration public CameraZoom zoom Field Value Type Description CameraZoom Methods HideToolsMenu() Declaration public void HideToolsMenu() RegisterToolCallbacks() Declaration public void RegisterToolCallbacks() ShowToolsMenu() Declaration public void ShowToolsMenu()"
  },
  "api/Global.ToolTest.html": {
    "href": "api/Global.ToolTest.html",
    "title": "Class ToolTest",
    "keywords": "Class ToolTest Inheritance Object ToolTest Namespace : Global Assembly : cs.temp.dll.dll Syntax public class ToolTest : MonoBehaviour Methods SetTools(String) Declaration public void SetTools(string name) Parameters Type Name Description String name"
  },
  "api/Global.ToolType.html": {
    "href": "api/Global.ToolType.html",
    "title": "Class ToolType",
    "keywords": "Class ToolType Inheritance Object ToolType Namespace : Global Assembly : cs.temp.dll.dll Syntax public class ToolType : ScriptableObject Fields toolName Declaration public string toolName Field Value Type Description String toolRange Declaration public int toolRange Field Value Type Description Int32 upgradeLevel Declaration public int upgradeLevel Field Value Type Description Int32"
  },
  "api/GrandmaGreen.AreaController.html": {
    "href": "api/GrandmaGreen.AreaController.html",
    "title": "Class AreaController",
    "keywords": "Class AreaController Inheritance Object AreaController GardenAreaController Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class AreaController : MonoBehaviour Fields areaBounds Declaration public Collider areaBounds Field Value Type Description Collider areaServicer Declaration public AreaServices areaServicer Field Value Type Description AreaServices pathfinder Declaration public Pathfinder pathfinder Field Value Type Description Pathfinder playerController Declaration public EntityController playerController Field Value Type Description EntityController tilemap Declaration public Tilemap tilemap Field Value Type Description Tilemap Properties areaIndex Declaration public int areaIndex { get; protected set; } Property Value Type Description Int32 lastDraggedPosition Declaration public Vector3 lastDraggedPosition { get; protected set; } Property Value Type Description Vector3 lastSelectedCell Declaration public Vector3Int lastSelectedCell { get; protected set; } Property Value Type Description Vector3Int lastSelectedPosition Declaration public Vector3 lastSelectedPosition { get; protected set; } Property Value Type Description Vector3 lastSelectedTile Declaration public TileBase lastSelectedTile { get; protected set; } Property Value Type Description TileBase Methods Activate() Declaration public virtual void Activate() AreaDragged(Vector3) Declaration public virtual void AreaDragged(Vector3 worldPoint) Parameters Type Name Description Vector3 worldPoint AreaSelection(Vector3) Declaration public virtual void AreaSelection(Vector3 worldPoint) Parameters Type Name Description Vector3 worldPoint Awake() Declaration public virtual void Awake() BakeNavGrid() Declaration public void BakeNavGrid() Deactivate() Declaration public virtual void Deactivate() ParseTilemap() Declaration public void ParseTilemap() Events onActivation Declaration public event Action onActivation Event Type Type Description Action onDeactivation Declaration public event Action onDeactivation Event Type Type Description Action onTilemapSelection Declaration public event Action<Vector3Int> onTilemapSelection Event Type Type Description Action < Vector3Int >"
  },
  "api/GrandmaGreen.AreaServices.html": {
    "href": "api/GrandmaGreen.AreaServices.html",
    "title": "Class AreaServices",
    "keywords": "Class AreaServices Inheritance Object AreaServices Implements IPathfinderServicer IServicer < Pathfinder > Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class AreaServices : ScriptableObject, IPathfinderServicer, IServicer<Pathfinder> Properties ActiveArea Declaration public AreaController ActiveArea { get; } Property Value Type Description AreaController Methods ActivateAreaController(Int32) Activates an area controller and sets it to the current active area Deactivates the previous active area Declaration public void ActivateAreaController(int areaIndex) Parameters Type Name Description Int32 areaIndex DeactivateAreaController(Int32) Deactivates the currently active area Declaration public void DeactivateAreaController(int areaIndex) Parameters Type Name Description Int32 areaIndex DeregisterService(Pathfinder) Placeholder method for registering a sample service Declaration public virtual void DeregisterService(Pathfinder pathfinder) Parameters Type Name Description Pathfinder pathfinder DesregisterAreaController(AreaController) Deactivate an area controller Declaration public void DesregisterAreaController(AreaController areaController) Parameters Type Name Description AreaController areaController RegisterAreaController(AreaController) Active an area controller Declaration public void RegisterAreaController(AreaController areaController) Parameters Type Name Description AreaController areaController RegisterService(Pathfinder) Placeholder method for registering a sample service Declaration public virtual void RegisterService(Pathfinder pathfinder) Parameters Type Name Description Pathfinder pathfinder StartServices() Declaration public virtual void StartServices() StopServices() Stops the various gardening systems Declaration public virtual void StopServices() Implements IPathfinderServicer IServicer<T>"
  },
  "api/GrandmaGreen.Audio.AudioSystemBehavior.html": {
    "href": "api/GrandmaGreen.Audio.AudioSystemBehavior.html",
    "title": "Class AudioSystemBehavior",
    "keywords": "Class AudioSystemBehavior Inheritance Object AudioSystemBehavior Namespace : GrandmaGreen.Audio Assembly : cs.temp.dll.dll Syntax public class AudioSystemBehavior : PlayableBehaviour Fields soundContainer Declaration public ASoundContainer soundContainer Field Value Type Description ASoundContainer Methods ProcessFrame(Playable, FrameData, Object) Declaration public override void ProcessFrame(Playable playable, FrameData info, object playerData) Parameters Type Name Description Playable playable FrameData info Object playerData"
  },
  "api/GrandmaGreen.Audio.AudioSystemClip.html": {
    "href": "api/GrandmaGreen.Audio.AudioSystemClip.html",
    "title": "Class AudioSystemClip",
    "keywords": "Class AudioSystemClip Inheritance Object AudioSystemClip Implements ITimelineClipAsset Namespace : GrandmaGreen.Audio Assembly : cs.temp.dll.dll Syntax [Serializable] public class AudioSystemClip : PlayableAsset Fields SoundContainer Declaration public ASoundContainer SoundContainer Field Value Type Description ASoundContainer Properties clipCaps Declaration public ClipCaps clipCaps { get; } Property Value Type Description ClipCaps duration Declaration public override double duration { get; } Property Value Type Description Double Methods CreatePlayable(PlayableGraph, GameObject) Declaration public override Playable CreatePlayable(PlayableGraph graph, GameObject owner) Parameters Type Name Description PlayableGraph graph GameObject owner Returns Type Description Playable Implements ITimelineClipAsset"
  },
  "api/GrandmaGreen.Audio.AudioSystemMixerBehavior.html": {
    "href": "api/GrandmaGreen.Audio.AudioSystemMixerBehavior.html",
    "title": "Class AudioSystemMixerBehavior",
    "keywords": "Class AudioSystemMixerBehavior Inheritance Object AudioSystemMixerBehavior Namespace : GrandmaGreen.Audio Assembly : cs.temp.dll.dll Syntax public class AudioSystemMixerBehavior : PlayableBehaviour Methods ProcessFrame(Playable, FrameData, Object) Declaration public override void ProcessFrame(Playable playable, FrameData info, object playerData) Parameters Type Name Description Playable playable FrameData info Object playerData"
  },
  "api/GrandmaGreen.Audio.AudioSystemTrack.html": {
    "href": "api/GrandmaGreen.Audio.AudioSystemTrack.html",
    "title": "Class AudioSystemTrack",
    "keywords": "Class AudioSystemTrack Inheritance Object AudioSystemTrack Namespace : GrandmaGreen.Audio Assembly : cs.temp.dll.dll Syntax public class AudioSystemTrack : TrackAsset Methods CreateTrackMixer(PlayableGraph, GameObject, Int32) Declaration public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount) Parameters Type Name Description PlayableGraph graph GameObject go Int32 inputCount Returns Type Description Playable"
  },
  "api/GrandmaGreen.Audio.html": {
    "href": "api/GrandmaGreen.Audio.html",
    "title": "Namespace GrandmaGreen.Audio",
    "keywords": "Namespace GrandmaGreen.Audio Classes AudioSystemBehavior AudioSystemClip AudioSystemMixerBehavior AudioSystemTrack"
  },
  "api/GrandmaGreen.CameraZoom.html": {
    "href": "api/GrandmaGreen.CameraZoom.html",
    "title": "Class CameraZoom",
    "keywords": "Class CameraZoom Inheritance Object CameraZoom Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class CameraZoom : MonoBehaviour Methods ZoomCameraRequest(Single, Single) Declaration public void ZoomCameraRequest(float zoom, float time) Parameters Type Name Description Single zoom Single time"
  },
  "api/GrandmaGreen.CatchUIInput.html": {
    "href": "api/GrandmaGreen.CatchUIInput.html",
    "title": "Class CatchUIInput",
    "keywords": "Class CatchUIInput Inheritance Object CatchUIInput Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class CatchUIInput : MonoBehaviour Fields document Declaration public UIDocument document Field Value Type Description UIDocument onWorldPointerEvent Declaration public UnityEvent onWorldPointerEvent Field Value Type Description UnityEvent"
  },
  "api/GrandmaGreen.Collections.CharacterId.html": {
    "href": "api/GrandmaGreen.Collections.CharacterId.html",
    "title": "Enum CharacterId",
    "keywords": "Enum CharacterId Namespace : GrandmaGreen.Collections Assembly : cs.temp.dll.dll Syntax public enum CharacterId : ushort Fields Name Description AppleGolem CottonGolem CrocusGolem DecorShopkeeper GardeningShopkeeper Grandma PumpkinGolem RadishGolem TulipGolem"
  },
  "api/GrandmaGreen.Collections.CharacterProperties.html": {
    "href": "api/GrandmaGreen.Collections.CharacterProperties.html",
    "title": "Struct CharacterProperties",
    "keywords": "Struct CharacterProperties Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : GrandmaGreen.Collections Assembly : cs.temp.dll.dll Syntax public struct CharacterProperties Fields description Declaration public string description Field Value Type Description String name Declaration public string name Field Value Type Description String spritePaths Declaration public List<string> spritePaths Field Value Type Description List < String >"
  },
  "api/GrandmaGreen.Collections.CollectionsSO.html": {
    "href": "api/GrandmaGreen.Collections.CollectionsSO.html",
    "title": "Class CollectionsSO",
    "keywords": "Class CollectionsSO Inheritance Object CollectionsSO Namespace : GrandmaGreen.Collections Assembly : cs.temp.dll.dll Syntax public class CollectionsSO : ScriptableObject Fields CharacterLookup Declaration public Dictionary<CharacterId, CharacterProperties> CharacterLookup Field Value Type Description Dictionary < CharacterId , CharacterProperties > ItemLookup Declaration public Dictionary<Enum, ItemProperties> ItemLookup Field Value Type Description Dictionary < Enum , ItemProperties > PlantLookup Declaration public Dictionary<PlantId, PlantProperties> PlantLookup Field Value Type Description Dictionary < PlantId , PlantProperties > SpriteCache Declaration public Dictionary<string, Sprite> SpriteCache Field Value Type Description Dictionary < String , Sprite > Methods DEBUGLoadPlantProperties() Declaration public void DEBUGLoadPlantProperties() GetItem(Enum) Get any item by its id Declaration public ItemProperties GetItem(Enum id) Parameters Type Name Description Enum id Returns Type Description ItemProperties GetPlant(PlantId) Get any plant by its id Declaration public PlantProperties GetPlant(PlantId id) Parameters Type Name Description PlantId id Returns Type Description PlantProperties GetPrefab(String) Declaration public GameObject GetPrefab(string prefab) Parameters Type Name Description String prefab Returns Type Description GameObject GetSprite(String) Retrieve a sprite by its sprite path (which is just its filename) Declaration public Sprite GetSprite(string spritePath) Parameters Type Name Description String spritePath Returns Type Description Sprite Plant2Golem(PlantId) Declaration public CharacterId Plant2Golem(PlantId id) Parameters Type Name Description PlantId id Returns Type Description CharacterId PlantToSeed(PlantId) Declaration public SeedId PlantToSeed(PlantId id) Parameters Type Name Description PlantId id Returns Type Description SeedId SeedToPlant(SeedId) Declaration public PlantId SeedToPlant(SeedId id) Parameters Type Name Description SeedId id Returns Type Description PlantId"
  },
  "api/GrandmaGreen.Collections.Decor.html": {
    "href": "api/GrandmaGreen.Collections.Decor.html",
    "title": "Struct Decor",
    "keywords": "Struct Decor Implements IInventoryItem Inherited Members ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : GrandmaGreen.Collections Assembly : cs.temp.dll.dll Syntax public struct Decor : IInventoryItem Constructors Decor(UInt16, String, Int32) Declaration public Decor(ushort id, string name, int num) Parameters Type Name Description UInt16 id String name Int32 num Fields quantity Declaration public int quantity Field Value Type Description Int32 Properties itemID Declaration public ushort itemID { readonly get; set; } Property Value Type Description UInt16 itemName Declaration public string itemName { readonly get; set; } Property Value Type Description String itemType Declaration public ItemType itemType { readonly get; set; } Property Value Type Description ItemType Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) GetQuantityToString() Declaration public string GetQuantityToString() Returns Type Description String Implements IInventoryItem"
  },
  "api/GrandmaGreen.Collections.DecorationId.html": {
    "href": "api/GrandmaGreen.Collections.DecorationId.html",
    "title": "Enum DecorationId",
    "keywords": "Enum DecorationId Namespace : GrandmaGreen.Collections Assembly : cs.temp.dll.dll Syntax public enum DecorationId : ushort Fields Name Description AcornExterior AppleGolemMemento ArtNouveauSculture01 ArtNouveauSculture02 ArtNouveauSculture03 Bicycle BirdBath BoxwoodBush CampingLantern ClaudeMonetPainting Clover CobblestonePath CommonPoppy CottonGolemMemento CrocusGolemMemento Dandelion DirtPath EuropeanCastleExterior FairyMagicExterior FancyFountain FancyIronFence FancyPond FarmFence FieldstoneFence Flamingo FlowerTable FlowerWagon ForgetMeNot FrenchCountryUrn FrenchProvincialExterior FrogSculpture GardenGnomeBasic GardenGnomeGold GardenGnomeSexy GardeniaBush GrecianRuin HarvestBasket Hemlock HistoricalEnglishExterior HydrangeaBush IronBench IronChair IronLampPost IronTable IvyCoveredBrickFence JackOLantern JapaneseGardenLantern JohnSingerSargentPainting KoiPond Leafpile MagicFountain MailboxBasic MailboxCabin MailboxCottagecore MailboxFairy MailboxGoth MailboxOriental MailboxPastel MapleTree ModernExterior MushroomLamp MushroomStool NaturalPond OakTree OleanderBush PalmTree PastelExterior PicnicSpread PineTree PNWCabinExterior PoplarTree PottedPlant01 PottedPlant02 PottedPlant03 PumpkinGolemMemento RadishGolemMemento RockingChair Scarecrow SimpleFountain SimpleHangingLampPost SimpleWoodenBench SimpleWoodenChair SimpleWoodenFence SimpleWoodenTable StoneBench StumpTree Sundial Swingset TilePath Torch TraditionalJapaneseExterior TulipGolemMemento Umbrella Waterpump Well WhitePicketFence WildDaisies WillowTree WitchyGothExterior WoodPath"
  },
  "api/GrandmaGreen.Collections.html": {
    "href": "api/GrandmaGreen.Collections.html",
    "title": "Namespace GrandmaGreen.Collections",
    "keywords": "Namespace GrandmaGreen.Collections Classes CollectionsSO Structs CharacterProperties Decor Item Temporary struct for an item in the Collections SO ItemProperties ItemSpriteList An item sprite contains the item's id and the sprite(s) associated with. Plant PlantProperties Seed Tool Interfaces IInventoryItem Enums CharacterId DecorationId ItemType itemTypes PlantId SeedId ToolId"
  },
  "api/GrandmaGreen.Collections.IInventoryItem.html": {
    "href": "api/GrandmaGreen.Collections.IInventoryItem.html",
    "title": "Interface IInventoryItem",
    "keywords": "Interface IInventoryItem Namespace : GrandmaGreen.Collections Assembly : cs.temp.dll.dll Syntax public interface IInventoryItem Properties itemID Declaration ushort itemID { get; set; } Property Value Type Description UInt16 itemName Declaration string itemName { get; set; } Property Value Type Description String itemType Declaration ItemType itemType { get; set; } Property Value Type Description ItemType Methods GetQuantityToString() Declaration string GetQuantityToString() Returns Type Description String"
  },
  "api/GrandmaGreen.Collections.Item.html": {
    "href": "api/GrandmaGreen.Collections.Item.html",
    "title": "Struct Item",
    "keywords": "Struct Item Temporary struct for an item in the Collections SO Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : GrandmaGreen.Collections Assembly : cs.temp.dll.dll Syntax public struct Item Fields description Declaration public string description Field Value Type Description String id Declaration public int id Field Value Type Description Int32 itemType Declaration public itemTypes itemType Field Value Type Description itemTypes name Declaration public string name Field Value Type Description String tag Declaration public string tag Field Value Type Description String"
  },
  "api/GrandmaGreen.Collections.ItemProperties.html": {
    "href": "api/GrandmaGreen.Collections.ItemProperties.html",
    "title": "Struct ItemProperties",
    "keywords": "Struct ItemProperties Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : GrandmaGreen.Collections Assembly : cs.temp.dll.dll Syntax public struct ItemProperties Fields description Declaration public string description Field Value Type Description String name Declaration public string name Field Value Type Description String spritePath Declaration public string spritePath Field Value Type Description String tag Declaration public string tag Field Value Type Description String"
  },
  "api/GrandmaGreen.Collections.ItemSpriteList.html": {
    "href": "api/GrandmaGreen.Collections.ItemSpriteList.html",
    "title": "Struct ItemSpriteList",
    "keywords": "Struct ItemSpriteList An item sprite contains the item's id and the sprite(s) associated with. Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : GrandmaGreen.Collections Assembly : cs.temp.dll.dll Syntax public struct ItemSpriteList Fields id Declaration public int id Field Value Type Description Int32 sprites Declaration public List<Sprite> sprites Field Value Type Description List < Sprite >"
  },
  "api/GrandmaGreen.Collections.ItemType.html": {
    "href": "api/GrandmaGreen.Collections.ItemType.html",
    "title": "Enum ItemType",
    "keywords": "Enum ItemType Namespace : GrandmaGreen.Collections Assembly : cs.temp.dll.dll Syntax public enum ItemType Fields Name Description Decor Plant Seed Tool"
  },
  "api/GrandmaGreen.Collections.itemTypes.html": {
    "href": "api/GrandmaGreen.Collections.itemTypes.html",
    "title": "Enum itemTypes",
    "keywords": "Enum itemTypes Namespace : GrandmaGreen.Collections Assembly : cs.temp.dll.dll Syntax public enum itemTypes Fields Name Description Character Decor Plant Seed Tool"
  },
  "api/GrandmaGreen.Collections.Plant.html": {
    "href": "api/GrandmaGreen.Collections.Plant.html",
    "title": "Struct Plant",
    "keywords": "Struct Plant Implements IInventoryItem Inherited Members ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : GrandmaGreen.Collections Assembly : cs.temp.dll.dll Syntax public struct Plant : IInventoryItem Constructors Plant(UInt16, String, Int32, List<Genotype>) Declaration public Plant(ushort id, string name, int num, List<Genotype> plantGenotypes) Parameters Type Name Description UInt16 id String name Int32 num List < Genotype > plantGenotypes Fields genotypes Declaration public List<Genotype> genotypes Field Value Type Description List < Genotype > Properties itemID Declaration public ushort itemID { readonly get; set; } Property Value Type Description UInt16 itemName Declaration public string itemName { readonly get; set; } Property Value Type Description String itemType Declaration public ItemType itemType { readonly get; set; } Property Value Type Description ItemType quantity Declaration public readonly int quantity { get; } Property Value Type Description Int32 Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) GetQuantityToString() Declaration public string GetQuantityToString() Returns Type Description String Implements IInventoryItem"
  },
  "api/GrandmaGreen.Collections.PlantId.html": {
    "href": "api/GrandmaGreen.Collections.PlantId.html",
    "title": "Enum PlantId",
    "keywords": "Enum PlantId Namespace : GrandmaGreen.Collections Assembly : cs.temp.dll.dll Syntax public enum PlantId : ushort Fields Name Description Apple Blueberry CallaLily Cherry Corn Crocus Cucumber Dahlia Hyacinth Pansy Peach Pear Pepper Plum Pumpkin Radish Rose SweetPotato Tomato Tulip Watermelon"
  },
  "api/GrandmaGreen.Collections.PlantProperties.html": {
    "href": "api/GrandmaGreen.Collections.PlantProperties.html",
    "title": "Struct PlantProperties",
    "keywords": "Struct PlantProperties Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : GrandmaGreen.Collections Assembly : cs.temp.dll.dll Syntax public struct PlantProperties Fields description Declaration public string description Field Value Type Description String growthStages Declaration public int growthStages Field Value Type Description Int32 growthTime Declaration public int growthTime Field Value Type Description Int32 name Declaration public string name Field Value Type Description String spritePaths Declaration public List<string> spritePaths Field Value Type Description List < String > waterPerStage Declaration public int waterPerStage Field Value Type Description Int32"
  },
  "api/GrandmaGreen.Collections.Seed.html": {
    "href": "api/GrandmaGreen.Collections.Seed.html",
    "title": "Struct Seed",
    "keywords": "Struct Seed Implements IInventoryItem Inherited Members ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : GrandmaGreen.Collections Assembly : cs.temp.dll.dll Syntax public struct Seed : IInventoryItem Constructors Seed(UInt16, String, List<Genotype>) Declaration public Seed(ushort id, string name, List<Genotype> plantGenotypes) Parameters Type Name Description UInt16 id String name List < Genotype > plantGenotypes Fields genotypes Declaration public List<Genotype> genotypes Field Value Type Description List < Genotype > Properties itemID Declaration public ushort itemID { readonly get; set; } Property Value Type Description UInt16 itemName Declaration public string itemName { readonly get; set; } Property Value Type Description String itemType Declaration public ItemType itemType { readonly get; set; } Property Value Type Description ItemType quantity Declaration public readonly int quantity { get; } Property Value Type Description Int32 Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) GetQuantityToString() Declaration public string GetQuantityToString() Returns Type Description String Implements IInventoryItem"
  },
  "api/GrandmaGreen.Collections.SeedId.html": {
    "href": "api/GrandmaGreen.Collections.SeedId.html",
    "title": "Enum SeedId",
    "keywords": "Enum SeedId Namespace : GrandmaGreen.Collections Assembly : cs.temp.dll.dll Syntax public enum SeedId : ushort Fields Name Description Apple Blueberry CallaLily Cherry Corn Crocus Cucumber Dahlia Hyacinth Pansy Peach Pear Pepper Plum Pumpkin Radish Rose SweetPotato Tomato Tulip Watermelon"
  },
  "api/GrandmaGreen.Collections.Tool.html": {
    "href": "api/GrandmaGreen.Collections.Tool.html",
    "title": "Struct Tool",
    "keywords": "Struct Tool Implements IInventoryItem Inherited Members ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : GrandmaGreen.Collections Assembly : cs.temp.dll.dll Syntax public struct Tool : IInventoryItem Constructors Tool(UInt16, String, Int32) Declaration public Tool(ushort id, string name, int num) Parameters Type Name Description UInt16 id String name Int32 num Fields quantity Declaration public int quantity Field Value Type Description Int32 Properties itemID Declaration public ushort itemID { readonly get; set; } Property Value Type Description UInt16 itemName Declaration public string itemName { readonly get; set; } Property Value Type Description String itemType Declaration public ItemType itemType { readonly get; set; } Property Value Type Description ItemType Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) GetQuantityToString() Declaration public string GetQuantityToString() Returns Type Description String Implements IInventoryItem"
  },
  "api/GrandmaGreen.Collections.ToolId.html": {
    "href": "api/GrandmaGreen.Collections.ToolId.html",
    "title": "Enum ToolId",
    "keywords": "Enum ToolId Namespace : GrandmaGreen.Collections Assembly : cs.temp.dll.dll Syntax public enum ToolId : ushort Fields Name Description Fertilizer SeedPacket Trowel UpgradedTrowel UpgradedWateringCan WateringCan"
  },
  "api/GrandmaGreen.CommonSFX.html": {
    "href": "api/GrandmaGreen.CommonSFX.html",
    "title": "Class CommonSFX",
    "keywords": "Class CommonSFX Inheritance Object CommonSFX Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class CommonSFX : ScriptableObject Methods PlaySFX(ASoundContainer) Declaration public void PlaySFX(ASoundContainer sound) Parameters Type Name Description ASoundContainer sound"
  },
  "api/GrandmaGreen.DemoUIScript.html": {
    "href": "api/GrandmaGreen.DemoUIScript.html",
    "title": "Class DemoUIScript",
    "keywords": "Class DemoUIScript Inheritance Object DemoUIScript Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class DemoUIScript : MonoBehaviour Methods OpenUI() Declaration public void OpenUI()"
  },
  "api/GrandmaGreen.Dialogue.CustomLineView.html": {
    "href": "api/GrandmaGreen.Dialogue.CustomLineView.html",
    "title": "Class CustomLineView",
    "keywords": "Class CustomLineView Inheritance Object CustomLineView Namespace : GrandmaGreen.Dialogue Assembly : cs.temp.dll.dll Syntax public class CustomLineView : DialogueViewBase Fields autoAdvance Defines whether the dialogue text should auto advance. Declaration public bool autoAdvance Field Value Type Description Boolean dialogueSFX The dialogueSFX for the golem that is currently speaking. Declaration public ListContainer dialogueSFX Field Value Type Description ListContainer dialogueUI The UI document it uses to display text. Declaration public UIDocument dialogueUI Field Value Type Description UIDocument onCharacterTyped Action that occurs when character is typed. Declaration public Action<int> onCharacterTyped Field Value Type Description Action < Int32 > typewriterEffectSpeed The number of characters per second that should appear during the typewriter effect. Declaration public float typewriterEffectSpeed Field Value Type Description Single useTypewriterEffect Used to determine if the dialogue should use the typewriter effect. Declaration public bool useTypewriterEffect Field Value Type Description Boolean Methods DismissLine(Action) Called by the DialogueRunner to signal that the view should dismiss its current line from display, and clean up. Declaration public override void DismissLine(Action onDismissalComplete) Parameters Type Name Description Action onDismissalComplete EndDialogueNode() Hide the dialogue bubble upon node end. Declaration public void EndDialogueNode() InterruptLine(LocalizedLine, Action) Called by the DialogueRunner to signal that a line has been interrupted, and that the Dialogue View should finish presenting its line as quickly as possible. Declaration public override void InterruptLine(LocalizedLine dialogueLine, Action onInterruptLineFinished) Parameters Type Name Description LocalizedLine dialogueLine Action onInterruptLineFinished OnContinueTriggered(ClickEvent) Declaration public void OnContinueTriggered(ClickEvent clickEvent) Parameters Type Name Description ClickEvent clickEvent RunLine(LocalizedLine, Action) Called by the DialogueRunner to signal that a line should be displayed to the user. Declaration public override void RunLine(LocalizedLine dialogueLine, Action onDialogueLineFinished) Parameters Type Name Description LocalizedLine dialogueLine Action onDialogueLineFinished StartDialogueNode() Display the dialogue bubble upon node start. Declaration public void StartDialogueNode() UserRequestedViewAdvancement() Declaration public override void UserRequestedViewAdvancement()"
  },
  "api/GrandmaGreen.Dialogue.Dialogueable.html": {
    "href": "api/GrandmaGreen.Dialogue.Dialogueable.html",
    "title": "Class Dialogueable",
    "keywords": "Class Dialogueable Inheritance Object Dialogueable Namespace : GrandmaGreen.Dialogue Assembly : cs.temp.dll.dll Syntax public class Dialogueable : MonoBehaviour Fields dialogueSFX This golem's sound SFX, used for speech. Declaration public ListContainer dialogueSFX Field Value Type Description ListContainer idleDialogueCount Number of idle dialogue nodes that this golem has. Declaration public int idleDialogueCount Field Value Type Description Int32 interactionEventScript Called to end dialogue and reset golem behavior. Declaration public InteractionEvent interactionEventScript Field Value Type Description InteractionEvent onFinishDialogue Declaration public UnityAction<string> onFinishDialogue Field Value Type Description UnityAction < String > yarnProject This golem's yarn project, containing its dialogue. Declaration public YarnProject yarnProject Field Value Type Description YarnProject Methods TriggerDialogue() Triggers dialogue, sending the yarn project to the dialogue runner. Tells it which node to start on, which is determined randomly for normal dialogue events. Declaration public void TriggerDialogue()"
  },
  "api/GrandmaGreen.Dialogue.Effects.CoroutineInterruptToken.html": {
    "href": "api/GrandmaGreen.Dialogue.Effects.CoroutineInterruptToken.html",
    "title": "Class Effects.CoroutineInterruptToken",
    "keywords": "Class Effects.CoroutineInterruptToken An object that can be used to signal to a coroutine that it should terminate early. Inheritance Object Effects.CoroutineInterruptToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : GrandmaGreen.Dialogue Assembly : cs.temp.dll.dll Syntax public class CoroutineInterruptToken Remarks While coroutines can be stopped by calling or , this has the side effect of also stopping any coroutine that was waiting for the now-stopped coroutine to finish. Instances of this class may be passed as a parameter to a coroutine that they can periodically poll to see if they should terminate earlier than planned. To use this class, create an instance of it, and pass it as a parameter to your coroutine. In the coroutine, call Start() to mark that the coroutine is running. During the coroutine's execution, periodically check the WasInterrupted property to determine if the coroutine should exit. If it is true , the coroutine should exit (via the yield break statement.) At the normal exit of your coroutine, call the Complete() method to mark that the coroutine is no longer running. To make a coroutine stop, call the Interrupt() method. You can also use the CanInterrupt property to determine if the token is in a state in which it can stop (that is, a coroutine that's using it is currently running.) Properties CanInterrupt Declaration public bool CanInterrupt { get; } Property Value Type Description Boolean WasInterrupted Declaration public bool WasInterrupted { get; } Property Value Type Description Boolean Methods Complete() Declaration public void Complete() Interrupt() Declaration public void Interrupt() Start() Declaration public void Start()"
  },
  "api/GrandmaGreen.Dialogue.Effects.html": {
    "href": "api/GrandmaGreen.Dialogue.Effects.html",
    "title": "Class Effects",
    "keywords": "Class Effects Contains coroutine methods that apply visual effects. This class is used by to handle animating the presentation of lines. Inheritance Object Effects Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : GrandmaGreen.Dialogue Assembly : cs.temp.dll.dll Syntax public static class Effects Methods Typewriter(Label, LocalizedLine, Single, Action<Int32>, Effects.CoroutineInterruptToken) A coroutine that gradually reveals the text in a object over time. Declaration public static IEnumerator Typewriter(Label displayText, LocalizedLine finalText, float lettersPerSecond, Action<int> onCharacterTyped, Effects.CoroutineInterruptToken stopToken = null) Parameters Type Name Description Label displayText LocalizedLine finalText Single lettersPerSecond The number of letters that should be revealed per second. Action < Int32 > onCharacterTyped An that should be called for each character that was revealed. Effects.CoroutineInterruptToken stopToken A Effects.CoroutineInterruptToken that can be used to interrupt the coroutine. Returns Type Description IEnumerator Remarks This method works by adjusting the value of the text parameter's property. This means that word wrapping will not change half-way through the presentation of a word. Depending on the value of lettersPerSecond , onCharacterTyped may be called multiple times per frame. Due to an internal implementation detail of TextMeshProUGUI, this method will always take at least one frame to execute, regardless of the length of the text parameter's text."
  },
  "api/GrandmaGreen.Dialogue.html": {
    "href": "api/GrandmaGreen.Dialogue.html",
    "title": "Namespace GrandmaGreen.Dialogue",
    "keywords": "Namespace GrandmaGreen.Dialogue Classes CustomLineView Dialogueable Effects Contains coroutine methods that apply visual effects. This class is used by to handle animating the presentation of lines. Effects.CoroutineInterruptToken An object that can be used to signal to a coroutine that it should terminate early."
  },
  "api/GrandmaGreen.DialogueController.html": {
    "href": "api/GrandmaGreen.DialogueController.html",
    "title": "Class DialogueController",
    "keywords": "Class DialogueController Inheritance Object DialogueController Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class DialogueController : MonoBehaviour Fields TransformToFollow Declaration public Transform TransformToFollow Field Value Type Description Transform Methods SetPosition() Declaration public void SetPosition()"
  },
  "api/GrandmaGreen.Entities.EntityBehavior.html": {
    "href": "api/GrandmaGreen.Entities.EntityBehavior.html",
    "title": "Class EntityBehavior",
    "keywords": "Class EntityBehavior Inheritance Object EntityBehavior EntityBehaviorSet FollowPointerBehavior WanderBehavior Namespace : GrandmaGreen.Entities Assembly : cs.temp.dll.dll Syntax public abstract class EntityBehavior : ScriptableObject Properties prerequisites Declaration public EntityPermissions prerequisites { get; protected set; } Property Value Type Description EntityPermissions Methods PerformInstance(EntityController) Declaration public abstract IEnumerator PerformInstance(EntityController controller) Parameters Type Name Description EntityController controller Returns Type Description IEnumerator"
  },
  "api/GrandmaGreen.Entities.EntityBehaviorSet.html": {
    "href": "api/GrandmaGreen.Entities.EntityBehaviorSet.html",
    "title": "Class EntityBehaviorSet",
    "keywords": "Class EntityBehaviorSet Inheritance Object EntityBehavior EntityBehaviorSet Inherited Members EntityBehavior.prerequisites Namespace : GrandmaGreen.Entities Assembly : cs.temp.dll.dll Syntax public class EntityBehaviorSet : EntityBehavior Fields Behaviours Declaration public List<EntityBehavior> Behaviours Field Value Type Description List < EntityBehavior > Methods PerformInstance(EntityController) Declaration public override IEnumerator PerformInstance(EntityController controller) Parameters Type Name Description EntityController controller Returns Type Description IEnumerator Overrides EntityBehavior.PerformInstance(EntityController)"
  },
  "api/GrandmaGreen.Entities.EntityBehaviorSetting.html": {
    "href": "api/GrandmaGreen.Entities.EntityBehaviorSetting.html",
    "title": "Struct EntityBehaviorSetting",
    "keywords": "Struct EntityBehaviorSetting Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : GrandmaGreen.Entities Assembly : cs.temp.dll.dll Syntax public struct EntityBehaviorSetting"
  },
  "api/GrandmaGreen.Entities.EntityController.html": {
    "href": "api/GrandmaGreen.Entities.EntityController.html",
    "title": "Class EntityController",
    "keywords": "Class EntityController Inheritance Object EntityController PlayerController Namespace : GrandmaGreen.Entities Assembly : cs.temp.dll.dll Syntax public class EntityController : ScriptableObject Fields actionRange Declaration public float actionRange Field Value Type Description Single active Declaration public bool active Field Value Type Description Boolean behaviorRoutine Declaration public Coroutine behaviorRoutine Field Value Type Description Coroutine currentArea Declaration public AreaController currentArea Field Value Type Description AreaController currentBehavior Declaration public EntityBehavior currentBehavior Field Value Type Description EntityBehavior entity Declaration public GameEntity entity Field Value Type Description GameEntity permissions Declaration public EntityPermissions permissions Field Value Type Description EntityPermissions Properties stateMachine Declaration public StateMachine<EntityState> stateMachine { get; } Property Value Type Description StateMachine < EntityState > Methods CancelDestination() Declaration public virtual void CancelDestination() ExcecuteEntityActions() Declaration public virtual void ExcecuteEntityActions() FindRandomDestination(Int32) Declaration public virtual float3 FindRandomDestination(int range) Parameters Type Name Description Int32 range Returns Type Description float3 PauseBehaviour() Declaration public virtual void PauseBehaviour() PauseController() Declaration public virtual void PauseController() QueueEntityAction(Action<EntityController>) Declaration public virtual void QueueEntityAction(Action<EntityController> action) Parameters Type Name Description Action < EntityController > action RegisterEntity(GameEntity) Declaration public virtual void RegisterEntity(GameEntity entity) Parameters Type Name Description GameEntity entity ResumeBehaviour() Declaration public virtual void ResumeBehaviour() SetBehavior(EntityBehavior) Declaration public virtual void SetBehavior(EntityBehavior behavior) Parameters Type Name Description EntityBehavior behavior SetDestination(Vector3) Declaration public virtual void SetDestination(Vector3 worldPos) Parameters Type Name Description Vector3 worldPos StartController() Declaration public virtual void StartController()"
  },
  "api/GrandmaGreen.Entities.EntityPermissions.html": {
    "href": "api/GrandmaGreen.Entities.EntityPermissions.html",
    "title": "Enum EntityPermissions",
    "keywords": "Enum EntityPermissions Namespace : GrandmaGreen.Entities Assembly : cs.temp.dll.dll Syntax [Flags] public enum EntityPermissions Fields Name Description Gardener Interactable None Pathfinder Speaker"
  },
  "api/GrandmaGreen.Entities.EntityState.html": {
    "href": "api/GrandmaGreen.Entities.EntityState.html",
    "title": "Enum EntityState",
    "keywords": "Enum EntityState Namespace : GrandmaGreen.Entities Assembly : cs.temp.dll.dll Syntax public enum EntityState Fields Name Description Idle MovingTo PerformingAction"
  },
  "api/GrandmaGreen.Entities.FollowPointerBehavior.html": {
    "href": "api/GrandmaGreen.Entities.FollowPointerBehavior.html",
    "title": "Class FollowPointerBehavior",
    "keywords": "Class FollowPointerBehavior Inheritance Object EntityBehavior FollowPointerBehavior Inherited Members EntityBehavior.prerequisites Namespace : GrandmaGreen.Entities Assembly : cs.temp.dll.dll Syntax public class FollowPointerBehavior : EntityBehavior Methods PerformInstance(EntityController) Declaration public override IEnumerator PerformInstance(EntityController controller) Parameters Type Name Description EntityController controller Returns Type Description IEnumerator Overrides EntityBehavior.PerformInstance(EntityController) SetPointerLocation(Vector3) Declaration public void SetPointerLocation(Vector3 position) Parameters Type Name Description Vector3 position"
  },
  "api/GrandmaGreen.Entities.GameEntity.html": {
    "href": "api/GrandmaGreen.Entities.GameEntity.html",
    "title": "Class GameEntity",
    "keywords": "Class GameEntity Core Game Entity Behavior Serves as the customer for various GG services (pathfinding, gardening, dialogue) Has no decision making logic, instead it is handled by its corresponding Entity Controller Inheritance Object GameEntity Implements IPathAgent IServiceUser < Pathfinder , IPathfinderServicer > Namespace : GrandmaGreen.Entities Assembly : cs.temp.dll.dll Syntax public class GameEntity : MonoBehaviour, IPathAgent, IServiceUser<Pathfinder, IPathfinderServicer> Fields animator Declaration public Animator animator Field Value Type Description Animator controller Declaration public EntityController controller Field Value Type Description EntityController entityStateMachine Declaration public StateMachine<EntityState> entityStateMachine Field Value Type Description StateMachine < EntityState > onEntityPathEnd Declaration public Action onEntityPathEnd Field Value Type Description Action onEntityPathStart Declaration public Action onEntityPathStart Field Value Type Description Action smoothFactor Declaration public float smoothFactor Field Value Type Description Single splineFollow Declaration public SplineFollow splineFollow Field Value Type Description SplineFollow velocity Declaration public Vector3 velocity Field Value Type Description Vector3 Properties isPathing Declaration public bool isPathing { get; } Property Value Type Description Boolean pathfinderServicer Declaration public IPathfinderServicer pathfinderServicer { get; } Property Value Type Description IPathfinderServicer Methods CalculatePathable(Int32) Declaration public float3[] CalculatePathable(int range) Parameters Type Name Description Int32 range Max range to path to Returns Type Description float3 [] Array of pathable destinations in the range CheckPath(int2) Declaration public float3[] CheckPath(int2 endPos) Parameters Type Name Description int2 endPos Target location Returns Type Description float3 [] Float array of path to follow. Empty if no path is found CheckPath(Vector3) Declaration public float3[] CheckPath(Vector3 worldPos) Parameters Type Name Description Vector3 worldPos Returns Type Description float3 [] CurrentPos() Declaration public virtual Vector3 CurrentPos() Returns Type Description Vector3 FixedUpdate() Declaration public void FixedUpdate() FollowPath(float3[]) Follows the given float3 path Declaration public virtual IEnumerator FollowPath(float3[] path) Parameters Type Name Description float3 [] path Returns Type Description IEnumerator InitalizeStateMachine() Declaration protected virtual void InitalizeStateMachine() OnDisable() Declaration protected virtual void OnDisable() OnEnable() Declaration protected virtual void OnEnable() Update() Declaration public void Update() Events onEntityMove Declaration public event Action<Vector3> onEntityMove Event Type Type Description Action < Vector3 > Implements IPathAgent IServiceUser<U, T>"
  },
  "api/GrandmaGreen.Entities.GolemController.html": {
    "href": "api/GrandmaGreen.Entities.GolemController.html",
    "title": "Class GolemController",
    "keywords": "Class GolemController Golem AI Controller driven by behaviour tree Inheritance Object GolemController Implements IPathAgent IServiceUser < Pathfinder , IPathfinderServicer > Namespace : GrandmaGreen.Entities Assembly : cs.temp.dll.dll Syntax public class GolemController : MonoBehaviour, IPathAgent, IServiceUser<Pathfinder, IPathfinderServicer> Fields animator Declaration public Animator animator Field Value Type Description Animator delay Declaration public float delay Field Value Type Description Single onEntityActionEnd Declaration public Action<Vector3> onEntityActionEnd Field Value Type Description Action < Vector3 > onEntityActionStart Declaration public Action<Vector3> onEntityActionStart Field Value Type Description Action < Vector3 > permissions Declaration public EntityPermissions permissions Field Value Type Description EntityPermissions range Declaration public int range Field Value Type Description Int32 sfx_Footsteps Declaration public ASoundContainer sfx_Footsteps Field Value Type Description ASoundContainer smoothFactor Declaration public float smoothFactor Field Value Type Description Single splineFollow Declaration public SplineFollow splineFollow Field Value Type Description SplineFollow velocity Declaration public Vector3 velocity Field Value Type Description Vector3 Properties isPathing Declaration public bool isPathing { get; } Property Value Type Description Boolean pathfinderServicer Declaration public IPathfinderServicer pathfinderServicer { get; } Property Value Type Description IPathfinderServicer Methods CalculatePathable(Int32) Declaration public float3[] CalculatePathable(int range) Parameters Type Name Description Int32 range Max range to path to Returns Type Description float3 [] Array of pathable destinations in the range CancelPath() Declaration public virtual void CancelPath() CheckPath(int2) Declaration public float3[] CheckPath(int2 endPos) Parameters Type Name Description int2 endPos Target location Returns Type Description float3 [] Float array of path to follow. Empty if no path is found CheckPath(Vector3) Declaration public float3[] CheckPath(Vector3 worldPos) Parameters Type Name Description Vector3 worldPos Returns Type Description float3 [] CurrentPos() Declaration public virtual Vector3 CurrentPos() Returns Type Description Vector3 FindRandomDestination(Int32) Declaration public virtual float3 FindRandomDestination(int range) Parameters Type Name Description Int32 range Returns Type Description float3 FixedUpdate() Declaration public void FixedUpdate() FollowPath(float3[]) Follows the given float3 path Declaration public virtual IEnumerator FollowPath(float3[] path) Parameters Type Name Description float3 [] path Returns Type Description IEnumerator SetDestination(Vector3) Declaration public virtual void SetDestination(Vector3 worldPos) Parameters Type Name Description Vector3 worldPos StopBehaviorTree() Declaration public void StopBehaviorTree() Update() Declaration public void Update() UpdateInteractState() Declaration public void UpdateInteractState() Events onEntityMove Declaration public event Action<Vector3> onEntityMove Event Type Type Description Action < Vector3 > Implements IPathAgent IServiceUser<U, T>"
  },
  "api/GrandmaGreen.Entities.GolemData.html": {
    "href": "api/GrandmaGreen.Entities.GolemData.html",
    "title": "Class GolemData",
    "keywords": "Class GolemData Inheritance Object GolemData Namespace : GrandmaGreen.Entities Assembly : cs.temp.dll.dll Syntax public class GolemData : ScriptableObject Fields golemID Declaration public int golemID Field Value Type Description Int32 golemName Declaration public string golemName Field Value Type Description String golemPrefabs Declaration public GameObject[] golemPrefabs Field Value Type Description GameObject [] happiness Declaration public int happiness Field Value Type Description Int32 info Declaration public string info Field Value Type Description String isSpawned Declaration public int isSpawned Field Value Type Description Int32 isTravelling Declaration public bool isTravelling Field Value Type Description Boolean spawnChance Declaration public int spawnChance Field Value Type Description Int32 stages Declaration public GolemStage stages Field Value Type Description GolemStage"
  },
  "api/GrandmaGreen.Entities.GolemManager.html": {
    "href": "api/GrandmaGreen.Entities.GolemManager.html",
    "title": "Class GolemManager",
    "keywords": "Class GolemManager Inheritance Object GolemManager Namespace : GrandmaGreen.Entities Assembly : cs.temp.dll.dll Syntax public class GolemManager : ScriptableObject Fields golemList Declaration public List<int> golemList Field Value Type Description List < Int32 > tulip Declaration public GameObject tulip Field Value Type Description GameObject Methods Initialize() Declaration public void Initialize() OnDestroy() Declaration public void OnDestroy() OnGolemSpawn(Int32, Vector3) Spawn Golem when harvest Declaration public void OnGolemSpawn(int id, Vector3 pos) Parameters Type Name Description Int32 id Vector3 pos"
  },
  "api/GrandmaGreen.Entities.GolemStage.html": {
    "href": "api/GrandmaGreen.Entities.GolemStage.html",
    "title": "Enum GolemStage",
    "keywords": "Enum GolemStage Namespace : GrandmaGreen.Entities Assembly : cs.temp.dll.dll Syntax public enum GolemStage Fields Name Description baby growUp"
  },
  "api/GrandmaGreen.Entities.html": {
    "href": "api/GrandmaGreen.Entities.html",
    "title": "Namespace GrandmaGreen.Entities",
    "keywords": "Namespace GrandmaGreen.Entities Classes EntityBehavior EntityBehaviorSet EntityController FollowPointerBehavior GameEntity Core Game Entity Behavior Serves as the customer for various GG services (pathfinding, gardening, dialogue) Has no decision making logic, instead it is handled by its corresponding Entity Controller GolemController Golem AI Controller driven by behaviour tree GolemData GolemManager PlayerController WanderBehavior Structs EntityBehaviorSetting Enums EntityPermissions EntityState GolemStage"
  },
  "api/GrandmaGreen.Entities.PlayerController.html": {
    "href": "api/GrandmaGreen.Entities.PlayerController.html",
    "title": "Class PlayerController",
    "keywords": "Class PlayerController Inheritance Object EntityController PlayerController Inherited Members EntityController.permissions EntityController.currentBehavior EntityController.actionRange EntityController.entity EntityController.currentArea EntityController.stateMachine EntityController.active EntityController.behaviorRoutine EntityController.RegisterEntity(GameEntity) EntityController.StartController() EntityController.PauseController() EntityController.CancelDestination() EntityController.SetDestination(Vector3) EntityController.FindRandomDestination(Int32) EntityController.SetBehavior(EntityBehavior) EntityController.PauseBehaviour() EntityController.ResumeBehaviour() EntityController.QueueEntityAction(Action<EntityController>) EntityController.ExcecuteEntityActions() Namespace : GrandmaGreen.Entities Assembly : cs.temp.dll.dll Syntax public class PlayerController : EntityController"
  },
  "api/GrandmaGreen.Entities.WanderBehavior.html": {
    "href": "api/GrandmaGreen.Entities.WanderBehavior.html",
    "title": "Class WanderBehavior",
    "keywords": "Class WanderBehavior Inheritance Object EntityBehavior WanderBehavior Inherited Members EntityBehavior.prerequisites Namespace : GrandmaGreen.Entities Assembly : cs.temp.dll.dll Syntax public class WanderBehavior : EntityBehavior Fields delay Declaration public float delay Field Value Type Description Single range Declaration public int range Field Value Type Description Int32 Methods PerformInstance(EntityController) Declaration public override IEnumerator PerformInstance(EntityController controller) Parameters Type Name Description EntityController controller Returns Type Description IEnumerator Overrides EntityBehavior.PerformInstance(EntityController)"
  },
  "api/GrandmaGreen.EventManager.html": {
    "href": "api/GrandmaGreen.EventManager.html",
    "title": "Class EventManager",
    "keywords": "Class EventManager Inheritance Object EventManager Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class EventManager : MonoBehaviour Fields instance Declaration public static EventManager instance Field Value Type Description EventManager Methods HandleEVENT_CLOSE_HUD() Declaration public void HandleEVENT_CLOSE_HUD() HandleEVENT_CLOSE_HUD_ANIMATED() Declaration public void HandleEVENT_CLOSE_HUD_ANIMATED() HandleEVENT_GOLEM_SPAWN(Int32, Vector3) Declaration public void HandleEVENT_GOLEM_SPAWN(int id, Vector3 pos) Parameters Type Name Description Int32 id Vector3 pos HandleEVENT_INVENTORY_ADD_PLANT_OR_SEED(IInventoryItem, Genotype) Declaration public void HandleEVENT_INVENTORY_ADD_PLANT_OR_SEED(IInventoryItem item, Genotype genotype) Parameters Type Name Description IInventoryItem item Genotype genotype HandleEVENT_INVENTORY_ADD_TOOL_OR_DECOR(IInventoryItem, Int32) Declaration public void HandleEVENT_INVENTORY_ADD_TOOL_OR_DECOR(IInventoryItem item, int num) Parameters Type Name Description IInventoryItem item Int32 num HandleEVENT_INVENTORY_OPEN() Declaration public void HandleEVENT_INVENTORY_OPEN() HandleEVENT_INVENTORY_REMOVE_PLANT_OR_SEED(IInventoryItem, Genotype) Declaration public void HandleEVENT_INVENTORY_REMOVE_PLANT_OR_SEED(IInventoryItem item, Genotype genotype) Parameters Type Name Description IInventoryItem item Genotype genotype HandleEVENT_INVENTORY_REMOVE_TOOL_OR_DECOR(IInventoryItem, Int32) Declaration public void HandleEVENT_INVENTORY_REMOVE_TOOL_OR_DECOR(IInventoryItem item, int num) Parameters Type Name Description IInventoryItem item Int32 num HandleEVENT_OPEN_HUD() Declaration public void HandleEVENT_OPEN_HUD() HandleEVENT_OPEN_HUD_ANIMATED() Declaration public void HandleEVENT_OPEN_HUD_ANIMATED() HandleEVENT_PLANT_UPDATE(Int32, Vector3Int) Declaration public void HandleEVENT_PLANT_UPDATE(int areaIndex, Vector3Int cell) Parameters Type Name Description Int32 areaIndex Vector3Int cell Events EVENT_CLOSE_HUD Declaration public event Action EVENT_CLOSE_HUD Event Type Type Description Action EVENT_CLOSE_HUD_ANIMATED Declaration public event Action EVENT_CLOSE_HUD_ANIMATED Event Type Type Description Action EVENT_GOLEM_SPAWN Declaration public event Action<int, Vector3> EVENT_GOLEM_SPAWN Event Type Type Description Action < Int32 , Vector3 > EVENT_INVENTORY_ADD_PLANT_OR_SEED Declaration public event Action<IInventoryItem, Genotype> EVENT_INVENTORY_ADD_PLANT_OR_SEED Event Type Type Description Action < IInventoryItem , Genotype > EVENT_INVENTORY_ADD_TOOL_OR_DECOR Declaration public event Action<IInventoryItem, int> EVENT_INVENTORY_ADD_TOOL_OR_DECOR Event Type Type Description Action < IInventoryItem , Int32 > EVENT_INVENTORY_OPEN Declaration public event Action EVENT_INVENTORY_OPEN Event Type Type Description Action EVENT_INVENTORY_REMOVE_PLANT_OR_SEED Declaration public event Action<IInventoryItem, Genotype> EVENT_INVENTORY_REMOVE_PLANT_OR_SEED Event Type Type Description Action < IInventoryItem , Genotype > EVENT_INVENTORY_REMOVE_TOOL_OR_DECOR Declaration public event Action<IInventoryItem, int> EVENT_INVENTORY_REMOVE_TOOL_OR_DECOR Event Type Type Description Action < IInventoryItem , Int32 > EVENT_OPEN_HUD Declaration public event Action EVENT_OPEN_HUD Event Type Type Description Action EVENT_OPEN_HUD_ANIMATED Declaration public event Action EVENT_OPEN_HUD_ANIMATED Event Type Type Description Action EVENT_PLANT_UPDATE Declaration public event Action<int, Vector3Int> EVENT_PLANT_UPDATE Event Type Type Description Action < Int32 , Vector3Int >"
  },
  "api/GrandmaGreen.FlowerController.html": {
    "href": "api/GrandmaGreen.FlowerController.html",
    "title": "Class FlowerController",
    "keywords": "Class FlowerController Inheritance Object FlowerController Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class FlowerController : MonoBehaviour"
  },
  "api/GrandmaGreen.GamePortalTile.html": {
    "href": "api/GrandmaGreen.GamePortalTile.html",
    "title": "Class GamePortalTile",
    "keywords": "Class GamePortalTile Inheritance Object GamePortalTile Implements IGameTile Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class GamePortalTile : Tile, IGameTile Fields toLoad Declaration public SCENES toLoad Field Value Type Description SCENES Methods DoTileAction() Declaration public virtual void DoTileAction() DoTileAction(EntityController) Declaration public virtual void DoTileAction(EntityController entity) Parameters Type Name Description EntityController entity Implements IGameTile"
  },
  "api/GrandmaGreen.GameScenePortal.html": {
    "href": "api/GrandmaGreen.GameScenePortal.html",
    "title": "Class GameScenePortal",
    "keywords": "Class GameScenePortal Inheritance Object GameScenePortal Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class GameScenePortal : MonoBehaviour Fields toLoad Declaration public SCENES toLoad Field Value Type Description SCENES"
  },
  "api/GrandmaGreen.GameSystemDummy.html": {
    "href": "api/GrandmaGreen.GameSystemDummy.html",
    "title": "Class GameSystemDummy",
    "keywords": "Class GameSystemDummy Inheritance Object GameSystemDummy Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class GameSystemDummy : MonoBehaviour Methods AddToInventory(Int32, UInt16, Int32) Declaration public void AddToInventory(int type, ushort id, int quantity) Parameters Type Name Description Int32 type UInt16 id Int32 quantity AddTrait() Declaration public void AddTrait() RemoveFromInventory(Int32, UInt16, Int32) Declaration public void RemoveFromInventory(int type, ushort id, int quantity) Parameters Type Name Description Int32 type UInt16 id Int32 quantity SampleTest() Declaration public int SampleTest() Returns Type Description Int32"
  },
  "api/GrandmaGreen.Garden.Allele.html": {
    "href": "api/GrandmaGreen.Garden.Allele.html",
    "title": "Enum Allele",
    "keywords": "Enum Allele Simple enum to define an Allele Either recessive or dominant Namespace : GrandmaGreen.Garden Assembly : cs.temp.dll.dll Syntax public enum Allele Fields Name Description dominant recessive"
  },
  "api/GrandmaGreen.Garden.BasePhenotypeData.html": {
    "href": "api/GrandmaGreen.Garden.BasePhenotypeData.html",
    "title": "Class BasePhenotypeData",
    "keywords": "Class BasePhenotypeData Base class for a Phenotype template Used to define traits for a garden plant Inheritance Object BasePhenotypeData FlowerPhenotypeData Namespace : GrandmaGreen.Garden Assembly : cs.temp.dll.dll Syntax public abstract class BasePhenotypeData : ScriptableObject Fields traitList Declaration protected ITraitSetData[] traitList Field Value Type Description ITraitSetData [] Properties TraitCount Declaration public virtual int TraitCount { get; } Property Value Type Description Int32 TraitList Declaration public ITraitSetData[] TraitList { get; } Property Value Type Description ITraitSetData [] Methods SetTraitData() Declaration public abstract void SetTraitData() Trait<T>(Int32) Declaration public virtual T Trait<T>(int index) where T : class, ITraitSetData Parameters Type Name Description Int32 index Returns Type Description T Type Parameters Name Description T"
  },
  "api/GrandmaGreen.Garden.ColorSet.html": {
    "href": "api/GrandmaGreen.Garden.ColorSet.html",
    "title": "Class ColorSet",
    "keywords": "Class ColorSet Inheritance Object TraitSetData < Color > ColorSet Implements ITraitSetData Inherited Members TraitSetData<Color>.weight TraitSetData<Color>.recessive TraitSetData<Color>.dominant TraitSetData<Color>.mixed TraitSetData<Color>.ITraitSetData.weight TraitSetData<Color>.type TraitSetData<Color>.ITraitSetData.recessive TraitSetData<Color>.ITraitSetData.dominant TraitSetData<Color>.ITraitSetData.mixed Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : GrandmaGreen.Garden Assembly : cs.temp.dll.dll Syntax public class ColorSet : TraitSetData<Color>, ITraitSetData Implements ITraitSetData"
  },
  "api/GrandmaGreen.Garden.FlowerPhenotypeData.html": {
    "href": "api/GrandmaGreen.Garden.FlowerPhenotypeData.html",
    "title": "Class FlowerPhenotypeData",
    "keywords": "Class FlowerPhenotypeData Definies the trait list for flower plant Inheritance Object BasePhenotypeData FlowerPhenotypeData Inherited Members BasePhenotypeData.traitList BasePhenotypeData.TraitList BasePhenotypeData.Trait<T>(Int32) Namespace : GrandmaGreen.Garden Assembly : cs.temp.dll.dll Syntax public class FlowerPhenotypeData : BasePhenotypeData Properties TraitCount Declaration public override int TraitCount { get; } Property Value Type Description Int32 Overrides BasePhenotypeData.TraitCount Methods SetTraitData() Declaration public override void SetTraitData() Overrides BasePhenotypeData.SetTraitData()"
  },
  "api/GrandmaGreen.Garden.GardenAreaController.html": {
    "href": "api/GrandmaGreen.Garden.GardenAreaController.html",
    "title": "Class GardenAreaController",
    "keywords": "Class GardenAreaController Responsible for functionality of a single Garden screen TODO: Implement functionality for save/loading changed tiles Inheritance Object AreaController GardenAreaController Inherited Members AreaController.areaServicer AreaController.tilemap AreaController.pathfinder AreaController.areaBounds AreaController.playerController AreaController.areaIndex AreaController.lastSelectedPosition AreaController.lastDraggedPosition AreaController.lastSelectedCell AreaController.lastSelectedTile AreaController.onTilemapSelection AreaController.onActivation AreaController.onDeactivation AreaController.Activate() AreaController.Deactivate() AreaController.AreaSelection(Vector3) AreaController.AreaDragged(Vector3) AreaController.ParseTilemap() AreaController.BakeNavGrid() Namespace : GrandmaGreen.Garden Assembly : cs.temp.dll.dll Syntax public class GardenAreaController : AreaController Fields DEBUG_CUSTOMIZATION Declaration public bool DEBUG_CUSTOMIZATION Field Value Type Description Boolean decorList Declaration public List<Collider> decorList Field Value Type Description List < Collider > DryingUpBurst Declaration public ParticleSystem DryingUpBurst Field Value Type Description ParticleSystem FertilizerParticleBurst Declaration public ParticleSystem FertilizerParticleBurst Field Value Type Description ParticleSystem gardenCustomizer Declaration public GardenCustomizer gardenCustomizer Field Value Type Description GardenCustomizer gardenManager Declaration public GardenManager gardenManager Field Value Type Description GardenManager golemManager Declaration public GolemManager golemManager Field Value Type Description GolemManager plantListDebug Declaration public List<PlantState> plantListDebug Field Value Type Description List < PlantState > plantPrefabLookup Declaration public Dictionary<Vector3Int, GameObject> plantPrefabLookup Field Value Type Description Dictionary < Vector3Int , GameObject > playerTools Declaration public PlayerToolData playerTools Field Value Type Description PlayerToolData tileStore Declaration public TileStore tileStore Field Value Type Description TileStore WateringParticleBurst Declaration public ParticleSystem WateringParticleBurst Field Value Type Description ParticleSystem Methods AddDecorItem(BoxCollider) Declaration public void AddDecorItem(BoxCollider decorItem) Parameters Type Name Description BoxCollider decorItem Awake() Declaration public override void Awake() Overrides AreaController.Awake() ChangeGardenTile(Vector3Int, TileData) Declaration public void ChangeGardenTile(Vector3Int position, TileData newTile) Parameters Type Name Description Vector3Int position TileData newTile ChangeGardenTileToGrass(Vector3Int) Declaration public void ChangeGardenTileToGrass(Vector3Int position) Parameters Type Name Description Vector3Int position ChangeGardenTileToPlot_Empty(Vector3Int) Declaration public void ChangeGardenTileToPlot_Empty(Vector3Int position) Parameters Type Name Description Vector3Int position ChangeGardenTileToPlot_Occupied(Vector3Int) Declaration public void ChangeGardenTileToPlot_Occupied(Vector3Int position) Parameters Type Name Description Vector3Int position ClearPlants() Declaration public void ClearPlants() CreatePlant(SeedId, Vector3Int) Declaration public void CreatePlant(SeedId seed, Vector3Int cell) Parameters Type Name Description SeedId seed Vector3Int cell DecrementWatering(Int32) Declaration public void DecrementWatering(int value) Parameters Type Name Description Int32 value DestroyPlantOnCell(Vector3Int) Declaration public void DestroyPlantOnCell(Vector3Int cell) Parameters Type Name Description Vector3Int cell DestroyPlantPrefabOnCell(Vector3Int) Declaration public void DestroyPlantPrefabOnCell(Vector3Int cell) Parameters Type Name Description Vector3Int cell EnterCustomizationMode() Declaration public void EnterCustomizationMode() FertilizePlant(Vector3Int) Declaration public void FertilizePlant(Vector3Int cell) Parameters Type Name Description Vector3Int cell GardenTileSelected(Vector3Int) Declaration public void GardenTileSelected(Vector3Int gridPos) Parameters Type Name Description Vector3Int gridPos HarvestPlantOnCell(Vector3Int) Declaration public bool HarvestPlantOnCell(Vector3Int cell) Parameters Type Name Description Vector3Int cell Returns Type Description Boolean InspectPlants() Declaration public void InspectPlants() PlacePlantPrefabOnCell(Vector3Int, PlantId, Int32) Declaration public void PlacePlantPrefabOnCell(Vector3Int cell, PlantId type, int growthStage) Parameters Type Name Description Vector3Int cell PlantId type Int32 growthStage UpdatePlantPrefabOnCell(PlantId, Vector3Int) Declaration public void UpdatePlantPrefabOnCell(PlantId type, Vector3Int cell) Parameters Type Name Description PlantId type Vector3Int cell WaterPlant(Vector3Int) Declaration public void WaterPlant(Vector3Int cell) Parameters Type Name Description Vector3Int cell"
  },
  "api/GrandmaGreen.Garden.GardenCustomizer.html": {
    "href": "api/GrandmaGreen.Garden.GardenCustomizer.html",
    "title": "Class GardenCustomizer",
    "keywords": "Class GardenCustomizer Inheritance Object GardenCustomizer Namespace : GrandmaGreen.Garden Assembly : cs.temp.dll.dll Syntax public class GardenCustomizer : ScriptableObject Methods CheckValidState(BoxCollider, GardenAreaController) Declaration public bool CheckValidState(BoxCollider decorItem, GardenAreaController decorArea) Parameters Type Name Description BoxCollider decorItem GardenAreaController decorArea Returns Type Description Boolean EnterCustomizationState(GardenAreaController, BoxCollider) Declaration public void EnterCustomizationState(GardenAreaController decorArea, BoxCollider decorItem) Parameters Type Name Description GardenAreaController decorArea BoxCollider decorItem ForceExitCustomizationState(GardenAreaController) Declaration public void ForceExitCustomizationState(GardenAreaController decorArea) Parameters Type Name Description GardenAreaController decorArea GenerateDecorItem() Declaration public BoxCollider GenerateDecorItem() Returns Type Description BoxCollider GenerateDecorItem(Sprite) Declaration public BoxCollider GenerateDecorItem(Sprite decorSprite) Parameters Type Name Description Sprite decorSprite Returns Type Description BoxCollider"
  },
  "api/GrandmaGreen.Garden.GardenManager.html": {
    "href": "api/GrandmaGreen.Garden.GardenManager.html",
    "title": "Class GardenManager",
    "keywords": "Class GardenManager Inheritance Object GardenManager Namespace : GrandmaGreen.Garden Assembly : cs.temp.dll.dll Syntax public class GardenManager : ScriptableObject Fields timer Declaration public TimeLayer timer Field Value Type Description TimeLayer Methods ClearGarden(Int32) Declaration public void ClearGarden(int areaIndex) Parameters Type Name Description Int32 areaIndex CreatePlant(PlantId, Int32, Vector3Int) Declaration public void CreatePlant(PlantId type, int areaIndex, Vector3Int cell) Parameters Type Name Description PlantId type Int32 areaIndex Vector3Int cell DecrementWaterTimer(Int32, Vector3Int, Int32) Declaration public void DecrementWaterTimer(int areaIndex, Vector3Int cell, int value) Parameters Type Name Description Int32 areaIndex Vector3Int cell Int32 value DestroyPlant(Int32, Vector3Int) Declaration public void DestroyPlant(int areaIndex, Vector3Int cell) Parameters Type Name Description Int32 areaIndex Vector3Int cell GetGrowthStage(Int32, Vector3Int) Declaration public int GetGrowthStage(int areaIndex, Vector3Int cell) Parameters Type Name Description Int32 areaIndex Vector3Int cell Returns Type Description Int32 GetPlant(Int32, Vector3Int) Declaration public PlantState GetPlant(int areaIndex, Vector3Int cell) Parameters Type Name Description Int32 areaIndex Vector3Int cell Returns Type Description PlantState GetPlants(Int32) Declaration public List<PlantState> GetPlants(int areaIndex) Parameters Type Name Description Int32 areaIndex Returns Type Description List < PlantState > GetPlantType(Int32, Vector3Int) Declaration public PlantId GetPlantType(int areaIndex, Vector3Int cell) Parameters Type Name Description Int32 areaIndex Vector3Int cell Returns Type Description PlantId GetTiles(Int32) Declaration public List<TileState> GetTiles(int areaIndex) Parameters Type Name Description Int32 areaIndex Returns Type Description List < TileState > IncrementGrowthStage(Int32, Vector3Int) Declaration public void IncrementGrowthStage(int areaIndex, Vector3Int cell) Parameters Type Name Description Int32 areaIndex Vector3Int cell Initialize() Declaration public void Initialize() IsEmpty(Int32, Vector3Int) Declaration public bool IsEmpty(int areaIndex, Vector3Int cell) Parameters Type Name Description Int32 areaIndex Vector3Int cell Returns Type Description Boolean NumSeedDrops(Int32, Vector3Int) Declaration public int NumSeedDrops(int areaIndex, Vector3Int cell) Parameters Type Name Description Int32 areaIndex Vector3Int cell Returns Type Description Int32 RegisterGarden(Int32) Declaration public void RegisterGarden(int areaIndex) Parameters Type Name Description Int32 areaIndex SetFertilization(Int32, Vector3Int) Declaration public bool SetFertilization(int areaIndex, Vector3Int cell) Parameters Type Name Description Int32 areaIndex Vector3Int cell Returns Type Description Boolean UpdateGardenTile(Int32, Vector3Int, Int32) Declaration public void UpdateGardenTile(int areaIndex, Vector3Int cell, int tileIndex) Parameters Type Name Description Int32 areaIndex Vector3Int cell Int32 tileIndex UpdateGrowthStage(Int32, Vector3Int) Declaration public bool UpdateGrowthStage(int areaIndex, Vector3Int cell) Parameters Type Name Description Int32 areaIndex Vector3Int cell Returns Type Description Boolean UpdateWaterStage(Int32, Vector3Int) Declaration public bool UpdateWaterStage(int areaIndex, Vector3Int cell) Parameters Type Name Description Int32 areaIndex Vector3Int cell Returns Type Description Boolean"
  },
  "api/GrandmaGreen.Garden.GardenSaver.html": {
    "href": "api/GrandmaGreen.Garden.GardenSaver.html",
    "title": "Class GardenSaver",
    "keywords": "Class GardenSaver Inheritance Object GardenSaver Namespace : GrandmaGreen.Garden Assembly : cs.temp.dll.dll Syntax public class GardenSaver : ObjectSaver Properties Item[Vector3Int] Declaration public PlantState this[Vector3Int k] { get; set; } Parameters Type Name Description Vector3Int k Property Value Type Description PlantState Methods AddDecor(DecorationId, Vector3) Declaration public void AddDecor(DecorationId decorID, Vector3 position) Parameters Type Name Description DecorationId decorID Vector3 position Clear() Declaration public void Clear() ContainsKey(Vector3Int) Declaration public bool ContainsKey(Vector3Int k) Parameters Type Name Description Vector3Int k Returns Type Description Boolean Initialize() Declaration public void Initialize() Remove(Vector3Int) Declaration public bool Remove(Vector3Int k) Parameters Type Name Description Vector3Int k Returns Type Description Boolean SetTileState(TileState) Declaration public void SetTileState(TileState tileState) Parameters Type Name Description TileState tileState Tiles() Declaration public List<TileState> Tiles() Returns Type Description List < TileState > Values() Declaration public List<PlantState> Values() Returns Type Description List < PlantState >"
  },
  "api/GrandmaGreen.Garden.GardenToolSet.html": {
    "href": "api/GrandmaGreen.Garden.GardenToolSet.html",
    "title": "Class GardenToolSet",
    "keywords": "Class GardenToolSet Inheritance Object GardenToolSet Namespace : GrandmaGreen.Garden Assembly : cs.temp.dll.dll Syntax public class GardenToolSet : ScriptableObject Properties Item[Int32] Declaration public ToolData this[int i] { get; set; } Parameters Type Name Description Int32 i Property Value Type Description ToolData Methods ToolAction(ToolActionData) Declaration public void ToolAction(ToolActionData action) Parameters Type Name Description ToolActionData action"
  },
  "api/GrandmaGreen.Garden.Genotype.html": {
    "href": "api/GrandmaGreen.Garden.Genotype.html",
    "title": "Class Genotype",
    "keywords": "Class Genotype Defines a unique Genotype A genotype can have up to 3 unique traits Inheritance Object Genotype Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : GrandmaGreen.Garden Assembly : cs.temp.dll.dll Syntax public class Genotype Constructors Genotype() Declaration public Genotype() Fields MAX_TRAIT_COUNT Declaration public static readonly int MAX_TRAIT_COUNT Field Value Type Description Int32 Properties Item[Int32] Declaration public Trait this[int i] { get; set; } Parameters Type Name Description Int32 i Property Value Type Description Trait"
  },
  "api/GrandmaGreen.Garden.GridUI.html": {
    "href": "api/GrandmaGreen.Garden.GridUI.html",
    "title": "Class GridUI",
    "keywords": "Class GridUI Inheritance Object GridUI Namespace : GrandmaGreen.Garden Assembly : cs.temp.dll.dll Syntax public class GridUI : MonoBehaviour Fields fadeTime Declaration public float fadeTime Field Value Type Description Single gridMaterial Declaration public Material gridMaterial Field Value Type Description Material maxOpacity Declaration public float maxOpacity Field Value Type Description Single toolData Declaration public PlayerToolData toolData Field Value Type Description PlayerToolData"
  },
  "api/GrandmaGreen.Garden.html": {
    "href": "api/GrandmaGreen.Garden.html",
    "title": "Namespace GrandmaGreen.Garden",
    "keywords": "Namespace GrandmaGreen.Garden Classes BasePhenotypeData Base class for a Phenotype template Used to define traits for a garden plant ColorSet FlowerPhenotypeData Definies the trait list for flower plant GardenAreaController Responsible for functionality of a single Garden screen TODO: Implement functionality for save/loading changed tiles GardenCustomizer GardenManager GardenSaver GardenToolSet Genotype Defines a unique Genotype A genotype can have up to 3 unique traits GridUI MoveToActionUI PlayerToolData SizeSet ToolData TraitData<T> TraitSetData<T> Structs PlantState TileState ToolActionData Trait Struct that defines a trait Currently defined with 2 Alleles Interfaces ITraitData ITraitSetData Enums Allele Simple enum to define an Allele Either recessive or dominant"
  },
  "api/GrandmaGreen.Garden.ITraitData.html": {
    "href": "api/GrandmaGreen.Garden.ITraitData.html",
    "title": "Interface ITraitData",
    "keywords": "Interface ITraitData Namespace : GrandmaGreen.Garden Assembly : cs.temp.dll.dll Syntax public interface ITraitData Properties type Declaration Type type { get; } Property Value Type Description Type"
  },
  "api/GrandmaGreen.Garden.ITraitSetData.html": {
    "href": "api/GrandmaGreen.Garden.ITraitSetData.html",
    "title": "Interface ITraitSetData",
    "keywords": "Interface ITraitSetData Namespace : GrandmaGreen.Garden Assembly : cs.temp.dll.dll Syntax public interface ITraitSetData Properties dominant Declaration ITraitData dominant { get; } Property Value Type Description ITraitData mixed Declaration ITraitData mixed { get; } Property Value Type Description ITraitData recessive Declaration ITraitData recessive { get; } Property Value Type Description ITraitData type Declaration Type type { get; } Property Value Type Description Type weight Declaration int weight { get; } Property Value Type Description Int32"
  },
  "api/GrandmaGreen.Garden.MoveToActionUI.html": {
    "href": "api/GrandmaGreen.Garden.MoveToActionUI.html",
    "title": "Class MoveToActionUI",
    "keywords": "Class MoveToActionUI Inheritance Object MoveToActionUI Namespace : GrandmaGreen.Garden Assembly : cs.temp.dll.dll Syntax public class MoveToActionUI : MonoBehaviour Fields actionIcon Declaration public UnityEngine.UI.Image actionIcon Field Value Type Description UnityEngine.UI.Image areaServices Declaration public AreaServices areaServices Field Value Type Description AreaServices iconUIObject Declaration public GameObject iconUIObject Field Value Type Description GameObject playerController Declaration public PlayerController playerController Field Value Type Description PlayerController tileHighlightUIObject Declaration public GameObject tileHighlightUIObject Field Value Type Description GameObject toolData Declaration public PlayerToolData toolData Field Value Type Description PlayerToolData"
  },
  "api/GrandmaGreen.Garden.PlantState.html": {
    "href": "api/GrandmaGreen.Garden.PlantState.html",
    "title": "Struct PlantState",
    "keywords": "Struct PlantState Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : GrandmaGreen.Garden Assembly : cs.temp.dll.dll Syntax [Serializable] public struct PlantState Fields cell Declaration public Vector3Int cell Field Value Type Description Vector3Int growthStage Declaration public int growthStage Field Value Type Description Int32 isFertilized Declaration public bool isFertilized Field Value Type Description Boolean timePlanted Declaration public float timePlanted Field Value Type Description Single type Declaration public PlantId type Field Value Type Description PlantId waterStage Declaration public int waterStage Field Value Type Description Int32 waterTimer Declaration public int waterTimer Field Value Type Description Int32"
  },
  "api/GrandmaGreen.Garden.PlayerToolData.html": {
    "href": "api/GrandmaGreen.Garden.PlayerToolData.html",
    "title": "Class PlayerToolData",
    "keywords": "Class PlayerToolData Inheritance Object PlayerToolData Namespace : GrandmaGreen.Garden Assembly : cs.temp.dll.dll Syntax public class PlayerToolData : ScriptableObject Fields collection Declaration public CollectionsSO collection Field Value Type Description CollectionsSO currentTool Declaration public ToolData currentTool Field Value Type Description ToolData equippedSeed Declaration public SeedId equippedSeed Field Value Type Description SeedId lastToolAction Declaration public ToolActionData lastToolAction Field Value Type Description ToolActionData playerController Declaration public EntityController playerController Field Value Type Description EntityController toolSelectionActive Declaration public bool toolSelectionActive Field Value Type Description Boolean toolSet Declaration public GardenToolSet toolSet Field Value Type Description GardenToolSet Methods DoCurrentToolAction() Declaration public void DoCurrentToolAction() EmptySelection() Declaration public void EmptySelection() EndToolSelection() Declaration public void EndToolSelection() SetEquippedSeed(UInt16, Genotype) Declaration public void SetEquippedSeed(ushort plantIndex, Genotype genotype) Parameters Type Name Description UInt16 plantIndex Genotype genotype SetToolAction(TileData, Vector3Int, GardenAreaController) Declaration public void SetToolAction(TileData tile, Vector3Int cell, GardenAreaController area) Parameters Type Name Description TileData tile Vector3Int cell GardenAreaController area StartToolSelection() Declaration public void StartToolSelection() ToggleToolSelection() Declaration public void ToggleToolSelection() ToolSelection(ToolData) Declaration public void ToolSelection(ToolData tool) Parameters Type Name Description ToolData tool ToolSelection(Int32) Declaration public void ToolSelection(int index) Parameters Type Name Description Int32 index Events onToolSelected Declaration public event Action<ToolData> onToolSelected Event Type Type Description Action < ToolData > onToolSelectionEnd Declaration public event Action onToolSelectionEnd Event Type Type Description Action onToolSelectionStart Declaration public event Action onToolSelectionStart Event Type Type Description Action"
  },
  "api/GrandmaGreen.Garden.SizeSet.html": {
    "href": "api/GrandmaGreen.Garden.SizeSet.html",
    "title": "Class SizeSet",
    "keywords": "Class SizeSet Inheritance Object TraitSetData < Single > SizeSet Implements ITraitSetData Inherited Members TraitSetData<Single>.weight TraitSetData<Single>.recessive TraitSetData<Single>.dominant TraitSetData<Single>.mixed TraitSetData<Single>.ITraitSetData.weight TraitSetData<Single>.type TraitSetData<Single>.ITraitSetData.recessive TraitSetData<Single>.ITraitSetData.dominant TraitSetData<Single>.ITraitSetData.mixed Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : GrandmaGreen.Garden Assembly : cs.temp.dll.dll Syntax public class SizeSet : TraitSetData<float>, ITraitSetData Implements ITraitSetData"
  },
  "api/GrandmaGreen.Garden.TileState.html": {
    "href": "api/GrandmaGreen.Garden.TileState.html",
    "title": "Struct TileState",
    "keywords": "Struct TileState Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : GrandmaGreen.Garden Assembly : cs.temp.dll.dll Syntax [Serializable] public struct TileState Fields cell Declaration public Vector3Int cell Field Value Type Description Vector3Int tileIndex Declaration public int tileIndex Field Value Type Description Int32"
  },
  "api/GrandmaGreen.Garden.ToolActionData.html": {
    "href": "api/GrandmaGreen.Garden.ToolActionData.html",
    "title": "Struct ToolActionData",
    "keywords": "Struct ToolActionData Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : GrandmaGreen.Garden Assembly : cs.temp.dll.dll Syntax public struct ToolActionData Fields area Declaration public GardenAreaController area Field Value Type Description GardenAreaController gridcell Declaration public Vector3Int gridcell Field Value Type Description Vector3Int seedType Declaration public SeedId seedType Field Value Type Description SeedId tile Declaration public TileData tile Field Value Type Description TileData tool Declaration public ToolData tool Field Value Type Description ToolData"
  },
  "api/GrandmaGreen.Garden.ToolData.html": {
    "href": "api/GrandmaGreen.Garden.ToolData.html",
    "title": "Class ToolData",
    "keywords": "Class ToolData Inheritance Object ToolData Namespace : GrandmaGreen.Garden Assembly : cs.temp.dll.dll Syntax public class ToolData : ScriptableObject Fields icon Declaration public Sprite icon Field Value Type Description Sprite toolIndex Declaration public int toolIndex Field Value Type Description Int32 toolName Declaration public string toolName Field Value Type Description String toolSFX Declaration public ASoundContainer[] toolSFX Field Value Type Description ASoundContainer []"
  },
  "api/GrandmaGreen.Garden.Trait.html": {
    "href": "api/GrandmaGreen.Garden.Trait.html",
    "title": "Struct Trait",
    "keywords": "Struct Trait Struct that defines a trait Currently defined with 2 Alleles Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : GrandmaGreen.Garden Assembly : cs.temp.dll.dll Syntax public struct Trait Fields allele1 Declaration public Allele allele1 Field Value Type Description Allele allele2 Declaration public Allele allele2 Field Value Type Description Allele"
  },
  "api/GrandmaGreen.Garden.TraitData-1.html": {
    "href": "api/GrandmaGreen.Garden.TraitData-1.html",
    "title": "Class TraitData<T>",
    "keywords": "Class TraitData<T> Inheritance Object TraitData<T> Implements ITraitData Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : GrandmaGreen.Garden Assembly : cs.temp.dll.dll Syntax public class TraitData<T> : ITraitData where T : struct Type Parameters Name Description T Fields value Declaration public T value Field Value Type Description T Properties type Declaration public Type type { get; } Property Value Type Description Type Implements ITraitData"
  },
  "api/GrandmaGreen.Garden.TraitSetData-1.html": {
    "href": "api/GrandmaGreen.Garden.TraitSetData-1.html",
    "title": "Class TraitSetData<T>",
    "keywords": "Class TraitSetData<T> Inheritance Object TraitSetData<T> ColorSet SizeSet Implements ITraitSetData Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : GrandmaGreen.Garden Assembly : cs.temp.dll.dll Syntax public class TraitSetData<T> : ITraitSetData where T : struct Type Parameters Name Description T Fields weight Declaration public int weight Field Value Type Description Int32 Properties dominant Declaration public TraitData<T> dominant { get; } Property Value Type Description TraitData <T> mixed Declaration public TraitData<T> mixed { get; } Property Value Type Description TraitData <T> recessive Declaration public TraitData<T> recessive { get; } Property Value Type Description TraitData <T> type Declaration public Type type { get; } Property Value Type Description Type Explicit Interface Implementations ITraitSetData.dominant Declaration ITraitData ITraitSetData.dominant { get; } Returns Type Description ITraitData ITraitSetData.mixed Declaration ITraitData ITraitSetData.mixed { get; } Returns Type Description ITraitData ITraitSetData.recessive Declaration ITraitData ITraitSetData.recessive { get; } Returns Type Description ITraitData ITraitSetData.weight Declaration int ITraitSetData.weight { get; } Returns Type Description Int32 Implements ITraitSetData"
  },
  "api/GrandmaGreen.GeneralExtensions.html": {
    "href": "api/GrandmaGreen.GeneralExtensions.html",
    "title": "Class GeneralExtensions",
    "keywords": "Class GeneralExtensions Inheritance Object GeneralExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public static class GeneralExtensions Methods WithNewX(Vector2, Single) Returns the current vector with a new X Declaration public static Vector2 WithNewX(this Vector2 vector, float newX) Parameters Type Name Description Vector2 vector Single newX Returns Type Description Vector2"
  },
  "api/GrandmaGreen.GrandmaGreenGameState.html": {
    "href": "api/GrandmaGreen.GrandmaGreenGameState.html",
    "title": "Class GrandmaGreenGameState",
    "keywords": "Class GrandmaGreenGameState Inheritance Object GrandmaGreenGameState Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class GrandmaGreenGameState : MonoBehaviour Fields s_Instance Declaration protected static GrandmaGreenGameState s_Instance Field Value Type Description GrandmaGreenGameState Properties ActiveArea Declaration public static AreaController ActiveArea { get; } Property Value Type Description AreaController CurrentLocation Declaration public static SCENES CurrentLocation { get; } Property Value Type Description SCENES Methods GameSceneTransition() Declaration public void GameSceneTransition() LoadGardenScreen(Int32) Declaration public void LoadGardenScreen(int gardenIndex) Parameters Type Name Description Int32 gardenIndex"
  },
  "api/GrandmaGreen.html": {
    "href": "api/GrandmaGreen.html",
    "title": "Namespace GrandmaGreen",
    "keywords": "Namespace GrandmaGreen Classes AreaController AreaServices CameraZoom CatchUIInput CommonSFX DemoUIScript DialogueController EventManager FlowerController GamePortalTile GameScenePortal GameSystemDummy GeneralExtensions GrandmaGreenGameState PlantType PlantTypeDictionary PlayAudioOnEnable ShoppingItem Storyline StorylineDataStore StoryRequirement TileType ToolTest2 Interfaces IGameTile IPathAgent IPathfinderServicer IServicer<T> IServiceUser<U, T> Enums StoryState"
  },
  "api/GrandmaGreen.IGameTile.html": {
    "href": "api/GrandmaGreen.IGameTile.html",
    "title": "Interface IGameTile",
    "keywords": "Interface IGameTile Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public interface IGameTile Methods DoTileAction() Declaration void DoTileAction() DoTileAction(EntityController) Declaration void DoTileAction(EntityController entity) Parameters Type Name Description EntityController entity"
  },
  "api/GrandmaGreen.IPathAgent.html": {
    "href": "api/GrandmaGreen.IPathAgent.html",
    "title": "Interface IPathAgent",
    "keywords": "Interface IPathAgent Inherited Members IServiceUser<Pathfinder, IPathfinderServicer>.Servicer IServiceUser<Pathfinder, IPathfinderServicer>.SetServicer(IPathfinderServicer) IServiceUser<Pathfinder, IPathfinderServicer>.ClearServicer() Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public interface IPathAgent : IServiceUser<Pathfinder, IPathfinderServicer> Properties isPathing Declaration bool isPathing { get; } Property Value Type Description Boolean Methods CalculatePathable(Int32) Declaration float3[] CalculatePathable(int range) Parameters Type Name Description Int32 range Returns Type Description float3 [] CheckPath(int2) Declaration float3[] CheckPath(int2 destination) Parameters Type Name Description int2 destination Returns Type Description float3 [] CurrentPos() Declaration Vector3 CurrentPos() Returns Type Description Vector3 FollowPath(float3[]) Declaration IEnumerator FollowPath(float3[] path) Parameters Type Name Description float3 [] path Returns Type Description IEnumerator"
  },
  "api/GrandmaGreen.IPathfinderServicer.html": {
    "href": "api/GrandmaGreen.IPathfinderServicer.html",
    "title": "Interface IPathfinderServicer",
    "keywords": "Interface IPathfinderServicer Inherited Members IServicer<Pathfinder>.s_activeServices IServicer<Pathfinder>.RegisterService(Pathfinder) IServicer<Pathfinder>.DeregisterService(Pathfinder) IServicer<Pathfinder>.PrimaryService IServicer<Pathfinder>.Item[Int32] Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public interface IPathfinderServicer : IServicer<Pathfinder>"
  },
  "api/GrandmaGreen.IServicer-1.html": {
    "href": "api/GrandmaGreen.IServicer-1.html",
    "title": "Interface IServicer<T>",
    "keywords": "Interface IServicer<T> Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public interface IServicer<T> Type Parameters Name Description T Properties Item[Int32] Declaration virtual T this[int i] { get; } Parameters Type Name Description Int32 i Property Value Type Description T PrimaryService Declaration virtual T PrimaryService { get; } Property Value Type Description T s_activeServices Declaration static List<T> s_activeServices { get; set; } Property Value Type Description List <T> Methods DeregisterService(T) Declaration void DeregisterService(T service) Parameters Type Name Description T service RegisterService(T) Declaration void RegisterService(T service) Parameters Type Name Description T service"
  },
  "api/GrandmaGreen.IServiceUser-2.html": {
    "href": "api/GrandmaGreen.IServiceUser-2.html",
    "title": "Interface IServiceUser<U, T>",
    "keywords": "Interface IServiceUser<U, T> Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public interface IServiceUser<U, T> where T : IServicer<U> Type Parameters Name Description U T Properties Servicer Declaration static T Servicer { get; } Property Value Type Description T Methods ClearServicer() Declaration static void ClearServicer() SetServicer(T) Declaration static void SetServicer(T servicer) Parameters Type Name Description T servicer"
  },
  "api/GrandmaGreen.PlantType.html": {
    "href": "api/GrandmaGreen.PlantType.html",
    "title": "Class PlantType",
    "keywords": "Class PlantType Inheritance Object PlantType Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class PlantType : ScriptableObject Fields growthStagePrefabs Declaration public GameObject[] growthStagePrefabs Field Value Type Description GameObject [] growthStages Declaration public int growthStages Field Value Type Description Int32 growthTimeMins Declaration public int growthTimeMins Field Value Type Description Int32 plantName Declaration public string plantName Field Value Type Description String Methods GetGrowthStage(Single) Declaration public int GetGrowthStage(float timeSecs) Parameters Type Name Description Single timeSecs Returns Type Description Int32 GetPrefab(Single) Get prefab at current growth stage by age in seconds Declaration public GameObject GetPrefab(float timeSecs) Parameters Type Name Description Single timeSecs Returns Type Description GameObject TestCurrentGrowthStage() Declaration public void TestCurrentGrowthStage() TestCurrentGrowthStagePrefab() Declaration public void TestCurrentGrowthStagePrefab()"
  },
  "api/GrandmaGreen.PlantTypeDictionary.html": {
    "href": "api/GrandmaGreen.PlantTypeDictionary.html",
    "title": "Class PlantTypeDictionary",
    "keywords": "Class PlantTypeDictionary Inheritance Object PlantTypeDictionary Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class PlantTypeDictionary : ScriptableObject Fields plantTypes Declaration public PlantType[] plantTypes Field Value Type Description PlantType [] Properties Item[Int32] Declaration public PlantType this[int plantIndex] { get; } Parameters Type Name Description Int32 plantIndex Property Value Type Description PlantType Methods TestPlantTypeLookup() Declaration public void TestPlantTypeLookup()"
  },
  "api/GrandmaGreen.PlayAudioOnEnable.html": {
    "href": "api/GrandmaGreen.PlayAudioOnEnable.html",
    "title": "Class PlayAudioOnEnable",
    "keywords": "Class PlayAudioOnEnable Inheritance Object PlayAudioOnEnable Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class PlayAudioOnEnable : MonoBehaviour Fields container Declaration public ASoundContainer container Field Value Type Description ASoundContainer"
  },
  "api/GrandmaGreen.SaveSystem.ComponentStore-1.html": {
    "href": "api/GrandmaGreen.SaveSystem.ComponentStore-1.html",
    "title": "Class ComponentStore<T>",
    "keywords": "Class ComponentStore<T> The ComponentStore is a data structure written in pure C#. See IComponentStore. Inheritance Object ComponentStore<T> Implements IComponentStore Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace : GrandmaGreen.SaveSystem Assembly : cs.temp.dll.dll Syntax public class ComponentStore<T> : IComponentStore where T : struct Type Parameters Name Description T Constructors ComponentStore() Constructor initializes member variables and does nothing else. Declaration public ComponentStore() Fields components The components in question. Declaration public List<T> components Field Value Type Description List <T> Methods AddComponent(Int32, T) Adds a component to its internal storage list. Returns true if successful, false otherwise. Declaration public bool AddComponent(int index, T component) Parameters Type Name Description Int32 index T component Returns Type Description Boolean GetType() Returns the type of components it stores. Declaration public Type GetType() Returns Type Description Type RemoveComponent(Int32, T) Removes a component from its internal storage list. Returns true if successful, false otherwise. Declaration public bool RemoveComponent(int index, T component) Parameters Type Name Description Int32 index T component Returns Type Description Boolean RequestData(Int32, ref T) Receives data requests from its internal storage list based on a provided index and outputs it through a reference. Returns true if successful, false otherwise. Declaration public bool RequestData(int index, ref T component) Parameters Type Name Description Int32 index T component Returns Type Description Boolean UpdateValue(Int32, T) Updates a given value in its internal storage list based on a provided index. Returns true if successful, false otherwise. Declaration public bool UpdateValue(int index, T component) Parameters Type Name Description Int32 index T component Returns Type Description Boolean Implements IComponentStore"
  },
  "api/GrandmaGreen.SaveSystem.html": {
    "href": "api/GrandmaGreen.SaveSystem.html",
    "title": "Namespace GrandmaGreen.SaveSystem",
    "keywords": "Namespace GrandmaGreen.SaveSystem Classes ComponentStore<T> The ComponentStore is a data structure written in pure C#. See IComponentStore. JSONSaveLoader The JSONSaveLoader was designed specifically to serialize and deserialize JSON files ONLY. This is used largely for internal testing and readable save files, but can be converted to BSON as needed. ObjectSaver The ObjectSaver interfaces with game systems directly when new data is added, changed, or removed as player's navigate the game. It is a ScriptableObject that is the core of the save system, and was designed to be editor friendly. They store pure data. SaveController The SaveController is a purely scripted C# class that gets reinstantiated everytime the game is loaded. The SaveController interfaces directly with SaveLoaders of various types as necessary. When the SaveManager calls for an AutoSave, the SaveController pings each SaveLoader to tell it to save the relevant data. SaveManager The SaveManager class is in charge of high level saving. It is the only part of the save system that lives in the game. Upon awakening, it instantiates a new SaveController. It also tracks the auto save intervals, then pings the SaveController at appropriate moments. The SaveManager also stores an internal list of every ObjectSaver relevant to the whole game. Interfaces IComponentStore The IComponentStore is a wrapper interface for ComponentStores. The purpose of the ComponentStore is to store data at the start of a scene—when data gets loaded–and when gameplay changes any sort of persistent data. Requests for the data stored in the IComponentStore object are handled through IObjectSavers. IObjectSaver The IObjectSaver interface is a wrapper for ObjectSaver Scriptable Objects, which holds a list of IComponentSavers. IObjectSavers are instantiated and registered by SaveControllers upon awakening in a scene. Importantly, IObjectSavers handle data requests from game interfaces. Other game interfaces request the information, and IObjectSavers retrieve the data from IObjectStores to pass it along. Similarly, IObjectSavers take in new data from game interfaces and updates the IObjectStore appropriately. ISaveLoader The ISaveLoader interface is a wrapper interface used for all SaveLoaders."
  },
  "api/GrandmaGreen.SaveSystem.IComponentStore.html": {
    "href": "api/GrandmaGreen.SaveSystem.IComponentStore.html",
    "title": "Interface IComponentStore",
    "keywords": "Interface IComponentStore The IComponentStore is a wrapper interface for ComponentStores. The purpose of the ComponentStore is to store data at the start of a scene—when data gets loaded–and when gameplay changes any sort of persistent data. Requests for the data stored in the IComponentStore object are handled through IObjectSavers. Namespace : GrandmaGreen.SaveSystem Assembly : cs.temp.dll.dll Syntax public interface IComponentStore Methods GetType() Returns the type of the ComponentStore. Declaration Type GetType() Returns Type Description Type"
  },
  "api/GrandmaGreen.SaveSystem.IObjectSaver.html": {
    "href": "api/GrandmaGreen.SaveSystem.IObjectSaver.html",
    "title": "Interface IObjectSaver",
    "keywords": "Interface IObjectSaver The IObjectSaver interface is a wrapper for ObjectSaver Scriptable Objects, which holds a list of IComponentSavers. IObjectSavers are instantiated and registered by SaveControllers upon awakening in a scene. Importantly, IObjectSavers handle data requests from game interfaces. Other game interfaces request the information, and IObjectSavers retrieve the data from IObjectStores to pass it along. Similarly, IObjectSavers take in new data from game interfaces and updates the IObjectStore appropriately. Namespace : GrandmaGreen.SaveSystem Assembly : cs.temp.dll.dll Syntax public interface IObjectSaver Properties componentStores The component store in question. Declaration List<IComponentStore> componentStores { get; set; } Property Value Type Description List < IComponentStore >"
  },
  "api/GrandmaGreen.SaveSystem.ISaveLoader.html": {
    "href": "api/GrandmaGreen.SaveSystem.ISaveLoader.html",
    "title": "Interface ISaveLoader",
    "keywords": "Interface ISaveLoader The ISaveLoader interface is a wrapper interface used for all SaveLoaders. Namespace : GrandmaGreen.SaveSystem Assembly : cs.temp.dll.dll Syntax public interface ISaveLoader Methods CreateDefaultSaveFile() Recreates save file given new object savers. Declaration void CreateDefaultSaveFile() DeleteAllData() Call this to delete all currently saved data, ie. delete any files. Declaration void DeleteAllData() LoadAllData(ref List<ObjectSaver>) Call this to load all relevant scene data. Declaration void LoadAllData(ref List<ObjectSaver> objectSavers) Parameters Type Name Description List < ObjectSaver > objectSavers SaveAllData() Call this to save data during auto save or upon game pause. Declaration void SaveAllData()"
  },
  "api/GrandmaGreen.SaveSystem.JSONSaveLoader.html": {
    "href": "api/GrandmaGreen.SaveSystem.JSONSaveLoader.html",
    "title": "Class JSONSaveLoader",
    "keywords": "Class JSONSaveLoader The JSONSaveLoader was designed specifically to serialize and deserialize JSON files ONLY. This is used largely for internal testing and readable save files, but can be converted to BSON as needed. Inheritance Object JSONSaveLoader Implements ISaveLoader Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : GrandmaGreen.SaveSystem Assembly : cs.temp.dll.dll Syntax public class JSONSaveLoader : ISaveLoader Constructors JSONSaveLoader(SaveController) Declaration public JSONSaveLoader(SaveController saveController) Parameters Type Name Description SaveController saveController Methods CreateDefaultSaveFile() Declaration public void CreateDefaultSaveFile() DeleteAllData() Fully deletes current save file. Declaration public void DeleteAllData() LoadAllData(ref List<ObjectSaver>) Declaration public void LoadAllData(ref List<ObjectSaver> objectSavers) Parameters Type Name Description List < ObjectSaver > objectSavers SaveAllData() Declaration public void SaveAllData() Implements ISaveLoader"
  },
  "api/GrandmaGreen.SaveSystem.ObjectSaver.html": {
    "href": "api/GrandmaGreen.SaveSystem.ObjectSaver.html",
    "title": "Class ObjectSaver",
    "keywords": "Class ObjectSaver The ObjectSaver interfaces with game systems directly when new data is added, changed, or removed as player's navigate the game. It is a ScriptableObject that is the core of the save system, and was designed to be editor friendly. They store pure data. Inheritance Object ObjectSaver Implements IObjectSaver Namespace : GrandmaGreen.SaveSystem Assembly : cs.temp.dll.dll Syntax public class ObjectSaver : ScriptableObject, IObjectSaver Fields ID Identifier number used to identify the ObjectSaver during saving and loading operations. As the hash depends on the asset's file name, no two ObjectSavers should be named alike. Declaration public string ID Field Value Type Description String saveController The reference to the game's SaveController, which it communicates with to present internal updates. Declaration public SaveController saveController Field Value Type Description SaveController Properties componentStores The component stores in question. Declaration public List<IComponentStore> componentStores { get; set; } Property Value Type Description List < IComponentStore > Methods AddComponent<T>(Int32, T) Adds a component to the appropriate ComponentStore. Stored internally, marked for update, then saved by the SaveController. Wrapper for the corresponding function in the ComponentStore. This interfaces directly with game systems. Declaration public bool AddComponent<T>(int index, T component) where T : struct Parameters Type Name Description Int32 index Optional index parameter to insert a component at the given index. T component Returns Type Description Boolean Type Parameters Name Description T CreateNewStore(Type) Creates a given ComponentStore for each ObjectSaver ahead of time. This is done through the Unity Editor. Utilizes reflection. The Type must be a C# data type (ie. strings, ints, structs) or it will get rejected. Declaration public void CreateNewStore(Type myType) Parameters Type Name Description Type myType CreateNewStore<T>() Declaration public void CreateNewStore<T>() where T : struct Type Parameters Name Description T OnEnable() Initializes member variables upon enabling. Declaration public void OnEnable() RemoveComponent<T>(Int32, T) Removes a component from the appropriate ComponentStore. Stored internally, then saved by the SaveController. Wrapper for the corresponding function in the ComponentStore. This interfaces directly with game systems. Declaration public bool RemoveComponent<T>(int index, T component) where T : struct Parameters Type Name Description Int32 index Index for moments where the index of the object is known. -1 signifies that it should use an equality based comparison to find the component (no index available). T component Returns Type Description Boolean Type Parameters Name Description T RequestData<T>(Int32, ref T) Declaration public bool RequestData<T>(int index, ref T component) where T : struct Parameters Type Name Description Int32 index T component Returns Type Description Boolean Type Parameters Name Description T Set(SaveController, ObjectSaver) Used to set the data with information loaded from the save file. It also sets the newly instantiated SaveController. Declaration public void Set(SaveController newSaveController, ObjectSaver os) Parameters Type Name Description SaveController newSaveController ObjectSaver os UpdateValue<T>(Int32, T) Updates the value of the given component. Declaration public bool UpdateValue<T>(int index, T component) where T : struct Parameters Type Name Description Int32 index Used to find the index of the component. If -1 is given, it searches for the component based on equality search (no index available). T component The value to update it with. Returns Type Description Boolean Type Parameters Name Description T Implements IObjectSaver"
  },
  "api/GrandmaGreen.SaveSystem.SaveController.html": {
    "href": "api/GrandmaGreen.SaveSystem.SaveController.html",
    "title": "Class SaveController",
    "keywords": "Class SaveController The SaveController is a purely scripted C# class that gets reinstantiated everytime the game is loaded. The SaveController interfaces directly with SaveLoaders of various types as necessary. When the SaveManager calls for an AutoSave, the SaveController pings each SaveLoader to tell it to save the relevant data. Inheritance Object SaveController Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : GrandmaGreen.SaveSystem Assembly : cs.temp.dll.dll Syntax public class SaveController Constructors SaveController(List<ObjectSaver>) Initializes with a list of object savers, which sets the internal list of object savers. This list changes itself as the scenes load. Declaration public SaveController(List<ObjectSaver> initialObjectSaverList) Parameters Type Name Description List < ObjectSaver > initialObjectSaverList Fields toBeSaved Every time an ObjectSaver gets \"dirtied,\" ie. a change is made to its contents, it adds itself to the toBeSaved list. This queues it up for saving at the next call. Declaration public List<ObjectSaver> toBeSaved Field Value Type Description List < ObjectSaver > Methods AutoSave() Called as necessary, primarily on an interval (determined by the Save Manager) or when the game is paused. Declaration public void AutoSave() CreateNewDefaultSaveFile() Creates new default save file for each save loader. Declaration public void CreateNewDefaultSaveFile() DeleteAllData() Deletes all data in all save loaders. Declaration public void DeleteAllData()"
  },
  "api/GrandmaGreen.SaveSystem.SaveManager.html": {
    "href": "api/GrandmaGreen.SaveSystem.SaveManager.html",
    "title": "Class SaveManager",
    "keywords": "Class SaveManager The SaveManager class is in charge of high level saving. It is the only part of the save system that lives in the game. Upon awakening, it instantiates a new SaveController. It also tracks the auto save intervals, then pings the SaveController at appropriate moments. The SaveManager also stores an internal list of every ObjectSaver relevant to the whole game. Inheritance Object SaveManager Namespace : GrandmaGreen.SaveSystem Assembly : cs.temp.dll.dll Syntax public class SaveManager : MonoBehaviour Methods Awake() Declaration public void Awake() TriggerAddNewComponentToDefault(ObjectSaver) Editor only—creates a new default save file out of any developer adjustments. Run from the prefab. Declaration public void TriggerAddNewComponentToDefault(ObjectSaver objectSaver) Parameters Type Name Description ObjectSaver objectSaver TriggerDeleteAllData() Wipe the player's saved data. Declaration public void TriggerDeleteAllData() TriggerSave() Triggers the SaveController AutoSave function. Declaration public void TriggerSave() Update() On Update, the save manager performs a check to see if the game must be saved. The game is auto saved after certain predetermined time intervals. Declaration public void Update()"
  },
  "api/GrandmaGreen.ShoppingItem.html": {
    "href": "api/GrandmaGreen.ShoppingItem.html",
    "title": "Class ShoppingItem",
    "keywords": "Class ShoppingItem Inheritance Object ShoppingItem Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class ShoppingItem : MonoBehaviour Constructors ShoppingItem() Declaration public ShoppingItem() Fields cost Declaration public int cost Field Value Type Description Int32 icon Declaration public Sprite icon Field Value Type Description Sprite label Declaration public string label Field Value Type Description String"
  },
  "api/GrandmaGreen.Storyline.html": {
    "href": "api/GrandmaGreen.Storyline.html",
    "title": "Class Storyline",
    "keywords": "Class Storyline Inheritance Object Storyline Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class Storyline : ScriptableObject Fields requirements Declaration public StoryRequirement[] requirements Field Value Type Description StoryRequirement [] Properties currentState Declaration public StoryState currentState { get; } Property Value Type Description StoryState progress Declaration public uint progress { get; } Property Value Type Description UInt32 Methods CompleteStory() Declaration public void CompleteStory() ProgressStory() Declaration public void ProgressStory() RegressStory() Declaration public void RegressStory() SetProgress(UInt32, Boolean) Declaration public void SetProgress(uint newProgress, bool retroactive = false) Parameters Type Name Description UInt32 newProgress Boolean retroactive StartStory() Declaration public void StartStory() Events onCompletion Declaration public event Action<Storyline> onCompletion Event Type Type Description Action < Storyline > onProgress Declaration public event Action<Storyline> onProgress Event Type Type Description Action < Storyline > onRegress Declaration public event Action<Storyline> onRegress Event Type Type Description Action < Storyline > onStart Declaration public event Action<Storyline> onStart Event Type Type Description Action < Storyline >"
  },
  "api/GrandmaGreen.StorylineDataStore.html": {
    "href": "api/GrandmaGreen.StorylineDataStore.html",
    "title": "Class StorylineDataStore",
    "keywords": "Class StorylineDataStore Inheritance Object StorylineDataStore Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class StorylineDataStore : ObjectSaver Fields storylineSet Declaration public List<Storyline> storylineSet Field Value Type Description List < Storyline > Methods Initalize() Declaration public void Initalize() LoadStorylineProgress() Declaration public void LoadStorylineProgress() Release() Declaration public void Release() UpdateStorylineProgress(Storyline) Declaration public void UpdateStorylineProgress(Storyline storyline) Parameters Type Name Description Storyline storyline"
  },
  "api/GrandmaGreen.StoryRequirement.html": {
    "href": "api/GrandmaGreen.StoryRequirement.html",
    "title": "Class StoryRequirement",
    "keywords": "Class StoryRequirement Inheritance Object StoryRequirement Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax [Serializable] public class StoryRequirement Fields currentState Declaration public StoryState currentState Field Value Type Description StoryState flag Declaration public GameEventFlag flag Field Value Type Description GameEventFlag Methods ActivateRequirement(Boolean) Declaration public void ActivateRequirement(bool retroactive = false) Parameters Type Name Description Boolean retroactive CompleteRequirement() Declaration public void CompleteRequirement() Events onActivation Declaration public event Action onActivation Event Type Type Description Action onCompletion Declaration public event Action onCompletion Event Type Type Description Action"
  },
  "api/GrandmaGreen.StoryState.html": {
    "href": "api/GrandmaGreen.StoryState.html",
    "title": "Enum StoryState",
    "keywords": "Enum StoryState Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public enum StoryState Fields Name Description ACTIVE COMPLETED INACTIVE"
  },
  "api/GrandmaGreen.TileType.html": {
    "href": "api/GrandmaGreen.TileType.html",
    "title": "Class TileType",
    "keywords": "Class TileType Inheritance Object TileType Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class TileType : ScriptableObject Fields isOccupied Declaration public bool isOccupied Field Value Type Description Boolean isPathable Declaration public bool isPathable Field Value Type Description Boolean isPlantable Declaration public bool isPlantable Field Value Type Description Boolean isPlottable Declaration public bool isPlottable Field Value Type Description Boolean tile Declaration public TileBase tile Field Value Type Description TileBase"
  },
  "api/GrandmaGreen.TimeLayer.html": {
    "href": "api/GrandmaGreen.TimeLayer.html",
    "title": "Namespace GrandmaGreen.TimeLayer",
    "keywords": "Namespace GrandmaGreen.TimeLayer Classes TimeLayer TODO: way to animate scale TimeLayerClock Interfaces ITimeLayer"
  },
  "api/GrandmaGreen.TimeLayer.ITimeLayer.html": {
    "href": "api/GrandmaGreen.TimeLayer.ITimeLayer.html",
    "title": "Interface ITimeLayer",
    "keywords": "Interface ITimeLayer Namespace : GrandmaGreen.TimeLayer Assembly : cs.temp.dll.dll Syntax public interface ITimeLayer Properties paused Declaration bool paused { get; } Property Value Type Description Boolean tickSeconds Declaration float tickSeconds { get; } Property Value Type Description Single Methods Pause() Declaration void Pause() Resume(Boolean) Declaration void Resume(bool tickAccumulated) Parameters Type Name Description Boolean tickAccumulated Tick(Double) Declaration void Tick(double deltaTime) Parameters Type Name Description Double deltaTime Events onTick Declaration event Action<int> onTick Event Type Type Description Action < Int32 >"
  },
  "api/GrandmaGreen.TimeLayer.TimeLayer.html": {
    "href": "api/GrandmaGreen.TimeLayer.TimeLayer.html",
    "title": "Class TimeLayer",
    "keywords": "Class TimeLayer TODO: way to animate scale Inheritance Object TimeLayer Implements ITimeLayer Namespace : GrandmaGreen.TimeLayer Assembly : cs.temp.dll.dll Syntax public class TimeLayer : ScriptableObject, ITimeLayer Properties paused Declaration public bool paused { get; } Property Value Type Description Boolean tickSeconds Declaration public float tickSeconds { get; } Property Value Type Description Single Methods Pause() Declaration public void Pause() Resume(Boolean) Declaration public void Resume(bool tickAccumulated = false) Parameters Type Name Description Boolean tickAccumulated Tick(Double) Declaration public void Tick(double deltaTime) Parameters Type Name Description Double deltaTime Events onTick Declaration public event Action<int> onTick Event Type Type Description Action < Int32 > Implements ITimeLayer"
  },
  "api/GrandmaGreen.TimeLayer.TimeLayerClock.html": {
    "href": "api/GrandmaGreen.TimeLayer.TimeLayerClock.html",
    "title": "Class TimeLayerClock",
    "keywords": "Class TimeLayerClock Inheritance Object TimeLayerClock Namespace : GrandmaGreen.TimeLayer Assembly : cs.temp.dll.dll Syntax public class TimeLayerClock : ObjectSaver Methods InternetDateTime() Declaration public static DateTime InternetDateTime() Returns Type Description DateTime LoadPreviousSessionEndTime() Declaration public void LoadPreviousSessionEndTime() SaveCurrentDateTime() Declaration public void SaveCurrentDateTime() SetClock(Boolean) Declaration public void SetClock(bool checkInternetTime = true) Parameters Type Name Description Boolean checkInternetTime TickClock(Double) Declaration public void TickClock(double deltaTime) Parameters Type Name Description Double deltaTime"
  },
  "api/GrandmaGreen.ToolTest2.html": {
    "href": "api/GrandmaGreen.ToolTest2.html",
    "title": "Class ToolTest2",
    "keywords": "Class ToolTest2 Inheritance Object ToolTest2 Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class ToolTest2 : MonoBehaviour Methods SetTools(String) Declaration public void SetTools(string name) Parameters Type Name Description String name"
  },
  "api/GrandmaGreen.UI.Collections.html": {
    "href": "api/GrandmaGreen.UI.Collections.html",
    "title": "Namespace GrandmaGreen.UI.Collections",
    "keywords": "Namespace GrandmaGreen.UI.Collections Classes Shopping ShoppingController TabbedInventory TabbedInventoryController TabbedInventoryItemController TabbedInventorySeedItemController"
  },
  "api/GrandmaGreen.UI.Collections.Shopping.html": {
    "href": "api/GrandmaGreen.UI.Collections.Shopping.html",
    "title": "Class Shopping",
    "keywords": "Class Shopping Inheritance Object Shopping Namespace : GrandmaGreen.UI.Collections Assembly : cs.temp.dll.dll Syntax public class Shopping : MonoBehaviour Fields item Declaration public ShoppingItem item Field Value Type Description ShoppingItem"
  },
  "api/GrandmaGreen.UI.Collections.ShoppingController.html": {
    "href": "api/GrandmaGreen.UI.Collections.ShoppingController.html",
    "title": "Class ShoppingController",
    "keywords": "Class ShoppingController Inheritance Object ShoppingController Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : GrandmaGreen.UI.Collections Assembly : cs.temp.dll.dll Syntax public class ShoppingController Constructors ShoppingController(VisualElement) Declaration public ShoppingController(VisualElement _root) Parameters Type Name Description VisualElement _root Methods ActivatePopup(ClickEvent) Declaration public void ActivatePopup(ClickEvent evt) Parameters Type Name Description ClickEvent evt RegisterBuyCallback() Declaration public void RegisterBuyCallback() RegisterDecreaseAmountCallback() Declaration public void RegisterDecreaseAmountCallback() RegisterIncreaseAmountCallback() Declaration public void RegisterIncreaseAmountCallback() RegisterPopUpCallback() Declaration public void RegisterPopUpCallback()"
  },
  "api/GrandmaGreen.UI.Collections.TabbedInventory.html": {
    "href": "api/GrandmaGreen.UI.Collections.TabbedInventory.html",
    "title": "Class TabbedInventory",
    "keywords": "Class TabbedInventory Inheritance Object TabbedInventory Namespace : GrandmaGreen.UI.Collections Assembly : cs.temp.dll.dll Syntax public class TabbedInventory : MonoBehaviour Fields inventoryData Declaration public ObjectSaver inventoryData Field Value Type Description ObjectSaver listEntryTemplate Declaration public VisualTreeAsset listEntryTemplate Field Value Type Description VisualTreeAsset playerToolData Declaration public PlayerToolData playerToolData Field Value Type Description PlayerToolData soundContainers Declaration public ASoundContainer[] soundContainers Field Value Type Description ASoundContainer [] Methods OpenInventory() Declaration public void OpenInventory() SetInventoryPosition() Declaration public void SetInventoryPosition()"
  },
  "api/GrandmaGreen.UI.Collections.TabbedInventoryController.html": {
    "href": "api/GrandmaGreen.UI.Collections.TabbedInventoryController.html",
    "title": "Class TabbedInventoryController",
    "keywords": "Class TabbedInventoryController Inheritance Object TabbedInventoryController Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : GrandmaGreen.UI.Collections Assembly : cs.temp.dll.dll Syntax public class TabbedInventoryController Constructors TabbedInventoryController(VisualElement, PlayerToolData, ObjectSaver, VisualTreeAsset, ASoundContainer[]) The TabbedInventoryController is attached to the TabbedInventory UI. It registers and controlls tab switching, as well as loading old and new items into the inventory. Declaration public TabbedInventoryController(VisualElement _root, PlayerToolData _playerToolData, ObjectSaver inventoryData, VisualTreeAsset _listEntryTemplate, ASoundContainer[] soundContainers) Parameters Type Name Description VisualElement _root The root of the TabbedInventory UI, which holds the different inventory panels. PlayerToolData _playerToolData ObjectSaver inventoryData VisualTreeAsset _listEntryTemplate ASoundContainer [] soundContainers Fields playerToolData Declaration public PlayerToolData playerToolData Field Value Type Description PlayerToolData Methods OnItemEntryClicked(UInt16) Declaration public void OnItemEntryClicked(ushort itemID) Parameters Type Name Description UInt16 itemID OnSeedEntryClicked(UInt16, Genotype) Declaration public void OnSeedEntryClicked(ushort itemID, Genotype genotype) Parameters Type Name Description UInt16 itemID Genotype genotype OpenInventory() Declaration public void OpenInventory() RebuildJar(IInventoryItem) Declaration public void RebuildJar(IInventoryItem item) Parameters Type Name Description IInventoryItem item RegisterExitCallback() Declaration public void RegisterExitCallback() RegisterTabCallbacks() Declaration public void RegisterTabCallbacks() SetInventoryPosition() Declaration public void SetInventoryPosition() Events onItemEntryClicked Declaration public event Action<ushort> onItemEntryClicked Event Type Type Description Action < UInt16 >"
  },
  "api/GrandmaGreen.UI.Collections.TabbedInventoryItemController.html": {
    "href": "api/GrandmaGreen.UI.Collections.TabbedInventoryItemController.html",
    "title": "Class TabbedInventoryItemController",
    "keywords": "Class TabbedInventoryItemController Inheritance Object TabbedInventoryItemController Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : GrandmaGreen.UI.Collections Assembly : cs.temp.dll.dll Syntax public class TabbedInventoryItemController Constructors TabbedInventoryItemController(Button, Action<UInt16>) Declaration public TabbedInventoryItemController(Button button, Action<ushort> clickCallback) Parameters Type Name Description Button button Action < UInt16 > clickCallback Methods SetInventoryData(IInventoryItem) Declaration public void SetInventoryData(IInventoryItem inventoryItem) Parameters Type Name Description IInventoryItem inventoryItem"
  },
  "api/GrandmaGreen.UI.Collections.TabbedInventorySeedItemController.html": {
    "href": "api/GrandmaGreen.UI.Collections.TabbedInventorySeedItemController.html",
    "title": "Class TabbedInventorySeedItemController",
    "keywords": "Class TabbedInventorySeedItemController Inheritance Object TabbedInventorySeedItemController Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : GrandmaGreen.UI.Collections Assembly : cs.temp.dll.dll Syntax public class TabbedInventorySeedItemController Constructors TabbedInventorySeedItemController(Button, Action<UInt16, Genotype>) Declaration public TabbedInventorySeedItemController(Button button, Action<ushort, Genotype> clickCallback) Parameters Type Name Description Button button Action < UInt16 , Genotype > clickCallback Methods SetInventoryData(IInventoryItem) Declaration public void SetInventoryData(IInventoryItem inventoryItem) Parameters Type Name Description IInventoryItem inventoryItem"
  },
  "api/GrandmaGreen.UI.Golems.GolemMenu.html": {
    "href": "api/GrandmaGreen.UI.Golems.GolemMenu.html",
    "title": "Class GolemMenu",
    "keywords": "Class GolemMenu Inheritance Object GolemMenu Namespace : GrandmaGreen.UI.Golems Assembly : cs.temp.dll.dll Syntax public class GolemMenu : MonoBehaviour Fields cameraZoom Camera zoom for golems on touch. Declaration public CameraZoom cameraZoom Field Value Type Description CameraZoom golemMenu Golem menu UI. Declaration public UIDocument golemMenu Field Value Type Description UIDocument Methods GolemMenuClose() Declaration public void GolemMenuClose() GolemMenuOpen() Declaration public void GolemMenuOpen() HandleGolemInteract() Declaration public void HandleGolemInteract() SetLocation(Vector3) Declaration public void SetLocation(Vector3 worldPosition) Parameters Type Name Description Vector3 worldPosition"
  },
  "api/GrandmaGreen.UI.Golems.html": {
    "href": "api/GrandmaGreen.UI.Golems.html",
    "title": "Namespace GrandmaGreen.UI.Golems",
    "keywords": "Namespace GrandmaGreen.UI.Golems Classes GolemMenu"
  },
  "api/GrandmaGreen.UI.HUD.html": {
    "href": "api/GrandmaGreen.UI.HUD.html",
    "title": "Namespace GrandmaGreen.UI.HUD",
    "keywords": "Namespace GrandmaGreen.UI.HUD Classes HUD HUDController"
  },
  "api/GrandmaGreen.UI.HUD.HUD.html": {
    "href": "api/GrandmaGreen.UI.HUD.HUD.html",
    "title": "Class HUD",
    "keywords": "Class HUD Inheritance Object HUD Namespace : GrandmaGreen.UI.HUD Assembly : cs.temp.dll.dll Syntax public class HUD : MonoBehaviour Fields inventory Declaration public TabbedInventory inventory Field Value Type Description TabbedInventory Methods CloseHUD() Declaration public void CloseHUD() CloseHUDAnimated() Declaration public void CloseHUDAnimated() OpenHUD() Declaration public void OpenHUD() OpenHUDAnimated() Declaration public void OpenHUDAnimated()"
  },
  "api/GrandmaGreen.UI.HUD.HUDController.html": {
    "href": "api/GrandmaGreen.UI.HUD.HUDController.html",
    "title": "Class HUDController",
    "keywords": "Class HUDController Inheritance Object HUDController Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : GrandmaGreen.UI.HUD Assembly : cs.temp.dll.dll Syntax public class HUDController Constructors HUDController(VisualElement) Declaration public HUDController(VisualElement root) Parameters Type Name Description VisualElement root Methods ButtonOnClick(ClickEvent) Declaration public void ButtonOnClick(ClickEvent evt) Parameters Type Name Description ClickEvent evt CloseHUD() Declaration public void CloseHUD() CloseHUDAnimated() Declaration public void CloseHUDAnimated() InventoryOnClick(ClickEvent) Declaration public void InventoryOnClick(ClickEvent evt) Parameters Type Name Description ClickEvent evt OnScaleDown(TransitionEndEvent) Declaration public void OnScaleDown(TransitionEndEvent evt) Parameters Type Name Description TransitionEndEvent evt OnScaleUp(TransitionEndEvent) Declaration public void OnScaleUp(TransitionEndEvent evt) Parameters Type Name Description TransitionEndEvent evt OpenHUD() Declaration public void OpenHUD() OpenHUDAnimated() Declaration public void OpenHUDAnimated() RegisterButtonCallbacks() Declaration public void RegisterButtonCallbacks()"
  },
  "guide/coding.html": {
    "href": "guide/coding.html",
    "title": "Coding Style Guide",
    "keywords": "Coding Style Guide Naming Conventions Names of classes, enumerations, structs, methods, and namespaces: PascalCase . public class MyClass { ... } public void MyFunction() { ... } namespace GrandmaGreen.ExampleNamespace { ... } enum MyEnum { StateOne, StateTwo } Names of properties and all variables, including local and member variables: camelCase . Private member variables should also append an m_ prefix ahead of the variable name. Similarly, static variables should append an s_ prefix ahead of the variable name. public int myInt; private string m_myString; static float s_myFloat; public void MyFunction(int myLocalVariable) { ... } Good Practice For readability, please consider the following: One statement per line. Keep opening and closing braces on their own lines. Avoid: if (condition) { DoSomething(); DoSomethingElse(); } Instead, do: if (condition) { DoSomething(); DoSomethingElse(); } We also encourage using the sealed keyword when possible. This is done to help prevent accidental derivative classes. Similarly, use structs over classes when possible. Structs are sealed and self contained. We utilize structs frequently when multi-threading, but they are good for general optimization. Our team prioritizes and values modularity and reusability . Please keep systems and classes as decoupled as possible to minimize risk of the whole game crashing when one feature bugs out. That being said, please always reach out to any of the leads or other team members if you are stuck on the best way to implement something! Remember that everything is done best with another pair of eyes. 🌻 Files and Organization Anything that needs to go on this website should go in the Assets/_GrandmaGreen/Scripts folder. The script picks up anything in this folder that has a .cs ending. File names and directory names should be in PascalCase , ie. MyFile.cs . Where possible, the name of the file should be the same as the name of the main class in the file, ie. MyClass.cs . Try to keep to one core class per file."
  },
  "guide/commenting.html": {
    "href": "guide/commenting.html",
    "title": "Commenting Code",
    "keywords": "Commenting Code Comments in code should conform to XML documentation markup standards , as this is what DocFX utilizes to transform code into readable webpages."
  },
  "index.html": {
    "href": "index.html",
    "title": "Grandma Green Documentation 🌱",
    "keywords": "Grandma Green Documentation 🌱 Welcome to Grandma Green's documentation! This page was built for old and new dev team members alike to help keep track of changes to the system. This repository has been configured to sync with changes to the Perforce depot every day at midnight PST. Any updates will then be pushed and published to the website immediately afterwards. Collaborators may also manually sync the repository and/or rebuild the website. Please contact Jamie Leodones at leodones@usc.edu for any troubles regarding this repository and its documentation, or to be added as a collaborator. 💚"
  }
}