{
  "api/Global.FakeInputTesting.html": {
    "href": "api/Global.FakeInputTesting.html",
    "title": "Class FakeInputTesting",
    "keywords": "Class FakeInputTesting Inheritance Object FakeInputTesting Namespace : Global Assembly : cs.temp.dll.dll Syntax public class FakeInputTesting : MonoBehaviour"
  },
  "api/Global.html": {
    "href": "api/Global.html",
    "title": "Namespace Global",
    "keywords": "Namespace Global Classes FakeInputTesting PathfindingTester SetCameraBounds"
  },
  "api/Global.PathfindingTester.html": {
    "href": "api/Global.PathfindingTester.html",
    "title": "Class PathfindingTester",
    "keywords": "Class PathfindingTester Inheritance Object PathfindingTester Namespace : Global Assembly : cs.temp.dll.dll Syntax public class PathfindingTester : MonoBehaviour Fields EndPos Declaration public int2 EndPos Field Value Type Description int2 PathAgent Declaration public PathFollower PathAgent Field Value Type Description PathFollower PathfindingManager Declaration public PathfindingManager PathfindingManager Field Value Type Description PathfindingManager StartPos Declaration public int2 StartPos Field Value Type Description int2 Methods DoPathFollow(Vector3) Declaration public void DoPathFollow(Vector3 worldPos) Parameters Type Name Description Vector3 worldPos"
  },
  "api/Global.SetCameraBounds.html": {
    "href": "api/Global.SetCameraBounds.html",
    "title": "Class SetCameraBounds",
    "keywords": "Class SetCameraBounds Inheritance Object SetCameraBounds Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SetCameraBounds : MonoBehaviour Fields cameraVolume Declaration public Transform cameraVolume Field Value Type Description Transform vCam Declaration public CinemachineVirtualCamera vCam Field Value Type Description CinemachineVirtualCamera Methods CalculateBounds() Declaration public void CalculateBounds()"
  },
  "api/GrandmaGreen.Allele.html": {
    "href": "api/GrandmaGreen.Allele.html",
    "title": "Enum Allele",
    "keywords": "Enum Allele Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public enum Allele Fields Name Description dominant recessive"
  },
  "api/GrandmaGreen.BaseGenotypeData.html": {
    "href": "api/GrandmaGreen.BaseGenotypeData.html",
    "title": "Class BaseGenotypeData",
    "keywords": "Class BaseGenotypeData Inheritance Object BaseGenotypeData FlowerGenotypeData Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public abstract class BaseGenotypeData : ScriptableObject Fields traitCount Declaration public int traitCount Field Value Type Description Int32 traitList Declaration protected ITraitPairData[] traitList Field Value Type Description ITraitPairData [] Methods SetTraitData() Declaration public abstract void SetTraitData() Trait<T>(Int32) Declaration public virtual T Trait<T>(int index) where T : class, ITraitPairData Parameters Type Name Description Int32 index Returns Type Description T Type Parameters Name Description T"
  },
  "api/GrandmaGreen.ColorPair.html": {
    "href": "api/GrandmaGreen.ColorPair.html",
    "title": "Class ColorPair",
    "keywords": "Class ColorPair Inheritance Object TraitPairData < Color > ColorPair Implements ITraitPairData Inherited Members TraitPairData<Color>.weight TraitPairData<Color>.gene_a TraitPairData<Color>.gene_A TraitPairData<Color>.gene_Aa TraitPairData<Color>.type Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class ColorPair : TraitPairData<Color>, ITraitPairData Implements ITraitPairData"
  },
  "api/GrandmaGreen.FloatPair.html": {
    "href": "api/GrandmaGreen.FloatPair.html",
    "title": "Class FloatPair",
    "keywords": "Class FloatPair Inheritance Object TraitPairData < Single > FloatPair Implements ITraitPairData Inherited Members TraitPairData<Single>.weight TraitPairData<Single>.gene_a TraitPairData<Single>.gene_A TraitPairData<Single>.gene_Aa TraitPairData<Single>.type Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class FloatPair : TraitPairData<float>, ITraitPairData Implements ITraitPairData"
  },
  "api/GrandmaGreen.FlowerGenotypeData.html": {
    "href": "api/GrandmaGreen.FlowerGenotypeData.html",
    "title": "Class FlowerGenotypeData",
    "keywords": "Class FlowerGenotypeData Inheritance Object BaseGenotypeData FlowerGenotypeData Inherited Members BaseGenotypeData.traitList BaseGenotypeData.traitCount BaseGenotypeData.Trait<T>(Int32) Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class FlowerGenotypeData : BaseGenotypeData Methods SetTraitData() Declaration public override void SetTraitData() Overrides BaseGenotypeData.SetTraitData()"
  },
  "api/GrandmaGreen.GardenData.html": {
    "href": "api/GrandmaGreen.GardenData.html",
    "title": "Class GardenData",
    "keywords": "Class GardenData Inheritance Object GardenData Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class GardenData : ScriptableObject Fields GardenSize Declaration public int2 GardenSize Field Value Type Description int2"
  },
  "api/GrandmaGreen.GardenManager.html": {
    "href": "api/GrandmaGreen.GardenManager.html",
    "title": "Class GardenManager",
    "keywords": "Class GardenManager Inheritance Object GardenManager Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class GardenManager : MonoBehaviour Fields gardenData Declaration public GardenData gardenData Field Value Type Description GardenData"
  },
  "api/GrandmaGreen.GardenPlant.html": {
    "href": "api/GrandmaGreen.GardenPlant.html",
    "title": "Class GardenPlant",
    "keywords": "Class GardenPlant Inheritance Object GardenPlant Implements IGameInteractable Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class GardenPlant : MonoBehaviour Fields daddyPhenotype Declaration public Phenotype daddyPhenotype Field Value Type Description Phenotype genotypeData Declaration public BaseGenotypeData genotypeData Field Value Type Description BaseGenotypeData neighbours Declaration public List<GardenPlant> neighbours Field Value Type Description List < GardenPlant > phenotype Declaration public Phenotype phenotype Field Value Type Description Phenotype plantSprite Declaration public SpriteRenderer plantSprite Field Value Type Description SpriteRenderer punnetSquare Declaration public List<Phenotype> punnetSquare Field Value Type Description List < Phenotype > Methods DoInteraction(Vector3, PointerState) Declaration public void DoInteraction(Vector3 interactionPoint, PointerState interactionState) Parameters Type Name Description Vector3 interactionPoint PointerState interactionState Harvest() Declaration public void Harvest() Implements IGameInteractable"
  },
  "api/GrandmaGreen.html": {
    "href": "api/GrandmaGreen.html",
    "title": "Namespace GrandmaGreen",
    "keywords": "Namespace GrandmaGreen Classes BaseGenotypeData ColorPair FloatPair FlowerGenotypeData GardenData GardenManager GardenPlant Phenotype TraitData<T> TraitPairData<T> Structs Trait Interfaces ITraitPairData Enums Allele PlantState"
  },
  "api/GrandmaGreen.ITraitPairData.html": {
    "href": "api/GrandmaGreen.ITraitPairData.html",
    "title": "Interface ITraitPairData",
    "keywords": "Interface ITraitPairData Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public interface ITraitPairData Properties type Declaration Type type { get; } Property Value Type Description Type"
  },
  "api/GrandmaGreen.Phenotype.html": {
    "href": "api/GrandmaGreen.Phenotype.html",
    "title": "Class Phenotype",
    "keywords": "Class Phenotype Inheritance Object Phenotype Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax [Serializable] public class Phenotype Constructors Phenotype() Declaration public Phenotype() Properties Item[Int32] Declaration public Trait this[int i] { get; set; } Parameters Type Name Description Int32 i Property Value Type Description Trait"
  },
  "api/GrandmaGreen.PlantState.html": {
    "href": "api/GrandmaGreen.PlantState.html",
    "title": "Enum PlantState",
    "keywords": "Enum PlantState Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public enum PlantState Fields Name Description MATURE SAPLING SEEDLING"
  },
  "api/GrandmaGreen.SaveSystem.html": {
    "href": "api/GrandmaGreen.SaveSystem.html",
    "title": "Namespace GrandmaGreen.SaveSystem",
    "keywords": "Namespace GrandmaGreen.SaveSystem Classes SaveController SaveManager Interfaces IComponentStore The IComponentStore is a wrapper interface for ComponentStores. The purpose of the ComponentStore is to store data at the start of a sceneâ€”-when data gets loaded--and when gameplay changes any sort of persistent data. Requests for the data stored in the IComponentStore object are handled through IObjectSavers. IObjectSaver The IObjectSaver interface is a wrapper for ObjectSaver Scriptable Objects, which holds a list of IComponentSavers. IObjectSavers are instantiated and registered by SaveControllers upon awakening in a scene. Importantly, IObjectSavers handle data requests from game interfaces. Other game interfaces request the information, and IObjectSavers retrieve the data from IObjectStores to pass it along. Similarly, IObjectSavers take in new data from game interfaces and updates the IObjectStore appropriately."
  },
  "api/GrandmaGreen.SaveSystem.IComponentStore.html": {
    "href": "api/GrandmaGreen.SaveSystem.IComponentStore.html",
    "title": "Interface IComponentStore",
    "keywords": "Interface IComponentStore The IComponentStore is a wrapper interface for ComponentStores. The purpose of the ComponentStore is to store data at the start of a sceneâ€”-when data gets loaded--and when gameplay changes any sort of persistent data. Requests for the data stored in the IComponentStore object are handled through IObjectSavers. Namespace : GrandmaGreen.SaveSystem Assembly : cs.temp.dll.dll Syntax public interface IComponentStore"
  },
  "api/GrandmaGreen.SaveSystem.IObjectSaver.html": {
    "href": "api/GrandmaGreen.SaveSystem.IObjectSaver.html",
    "title": "Interface IObjectSaver",
    "keywords": "Interface IObjectSaver The IObjectSaver interface is a wrapper for ObjectSaver Scriptable Objects, which holds a list of IComponentSavers. IObjectSavers are instantiated and registered by SaveControllers upon awakening in a scene. Importantly, IObjectSavers handle data requests from game interfaces. Other game interfaces request the information, and IObjectSavers retrieve the data from IObjectStores to pass it along. Similarly, IObjectSavers take in new data from game interfaces and updates the IObjectStore appropriately. Namespace : GrandmaGreen.SaveSystem Assembly : cs.temp.dll.dll Syntax public interface IObjectSaver"
  },
  "api/GrandmaGreen.SaveSystem.SaveController.html": {
    "href": "api/GrandmaGreen.SaveSystem.SaveController.html",
    "title": "Class SaveController",
    "keywords": "Class SaveController Inheritance Object SaveController Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : GrandmaGreen.SaveSystem Assembly : cs.temp.dll.dll Syntax public class SaveController"
  },
  "api/GrandmaGreen.SaveSystem.SaveManager.html": {
    "href": "api/GrandmaGreen.SaveSystem.SaveManager.html",
    "title": "Class SaveManager",
    "keywords": "Class SaveManager Inheritance Object SaveManager Namespace : GrandmaGreen.SaveSystem Assembly : cs.temp.dll.dll Syntax public class SaveManager : MonoBehaviour"
  },
  "api/GrandmaGreen.Trait.html": {
    "href": "api/GrandmaGreen.Trait.html",
    "title": "Struct Trait",
    "keywords": "Struct Trait Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax [Serializable] public struct Trait Fields allele1 Declaration public Allele allele1 Field Value Type Description Allele allele2 Declaration public Allele allele2 Field Value Type Description Allele"
  },
  "api/GrandmaGreen.TraitData-1.html": {
    "href": "api/GrandmaGreen.TraitData-1.html",
    "title": "Class TraitData<T>",
    "keywords": "Class TraitData<T> Inheritance Object TraitData<T> Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class TraitData<T> where T : struct Type Parameters Name Description T Fields value Declaration public T value Field Value Type Description T Properties type Declaration public Type type { get; } Property Value Type Description Type"
  },
  "api/GrandmaGreen.TraitPairData-1.html": {
    "href": "api/GrandmaGreen.TraitPairData-1.html",
    "title": "Class TraitPairData<T>",
    "keywords": "Class TraitPairData<T> Inheritance Object TraitPairData<T> ColorPair FloatPair Implements ITraitPairData Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class TraitPairData<T> : ITraitPairData where T : struct Type Parameters Name Description T Fields weight Declaration public int weight Field Value Type Description Int32 Properties gene_a Declaration public TraitData<T> gene_a { get; } Property Value Type Description TraitData <T> gene_A Declaration public TraitData<T> gene_A { get; } Property Value Type Description TraitData <T> gene_Aa Declaration public TraitData<T> gene_Aa { get; } Property Value Type Description TraitData <T> type Declaration public Type type { get; } Property Value Type Description Type Implements ITraitPairData"
  },
  "guide/coding.html": {
    "href": "guide/coding.html",
    "title": "Coding Style Guide",
    "keywords": "Coding Style Guide TBD."
  },
  "guide/commenting.html": {
    "href": "guide/commenting.html",
    "title": "Commenting Code Guide",
    "keywords": "Commenting Code Guide Comments in code should conform to XML documentation markup standards , as this is what DocFX utilizes to transform code into readable webpages. Note The following guidelines are not fully comprehensive, but are meant to be taken as highlights and general tips for good practice. Please read the documentation linked above for a more comprehensive understanding of XML documentation markup."
  },
  "index.html": {
    "href": "index.html",
    "title": "Grandma Green Documentation ðŸŒ±",
    "keywords": "Grandma Green Documentation ðŸŒ± Welcome to Grandma Green's documentation! This page was built for old and new dev team members alike to help keep track of changes to the system. This repository has been configured to sync with changes to the Perforce depot every day at midnight PST. Any updates will then be pushed and published to the website immediately afterwards. Collaborators may also manually sync the repository and/or rebuild the website. Please contact Jamie Leodones at leodones@usc.edu for any troubles regarding this repository and its documentation, or to be added as a collaborator. ðŸ’š"
  }
}