{
  "api/Global.EInventoryClass.html": {
    "href": "api/Global.EInventoryClass.html",
    "title": "Enum EInventoryClass",
    "keywords": "Enum EInventoryClass Namespace : Global Assembly : cs.temp.dll.dll Syntax public enum EInventoryClass Fields Name Description Decor Plants Seeds Tools"
  },
  "api/Global.GameLoadingScreen.html": {
    "href": "api/Global.GameLoadingScreen.html",
    "title": "Class GameLoadingScreen",
    "keywords": "Class GameLoadingScreen Inheritance Object GameLoadingScreen Namespace : Global Assembly : cs.temp.dll.dll Syntax public class GameLoadingScreen : MonoBehaviour Fields canvas Declaration public Canvas canvas Field Value Type Description Canvas Methods LoadingEnd(SCENES) Declaration protected virtual void LoadingEnd(SCENES scene) Parameters Type Name Description SCENES scene LoadingStart(SCENES) Declaration protected virtual void LoadingStart(SCENES scene) Parameters Type Name Description SCENES scene"
  },
  "api/Global.html": {
    "href": "api/Global.html",
    "title": "Namespace Global",
    "keywords": "Namespace Global Classes GameLoadingScreen InventoryData InventoryListController InventoryListEntryController MainView SetCameraBounds TileManager TileStore ToolsMenu ToolsMenuController ToolTest Structs TileData Enums EInventoryClass"
  },
  "api/Global.InventoryData.html": {
    "href": "api/Global.InventoryData.html",
    "title": "Class InventoryData",
    "keywords": "Class InventoryData Inheritance Object InventoryData Namespace : Global Assembly : cs.temp.dll.dll Syntax public class InventoryData : ScriptableObject Fields m_Class Declaration public EInventoryClass m_Class Field Value Type Description EInventoryClass m_InventoryItemName Declaration public string m_InventoryItemName Field Value Type Description String m_ItemImage Declaration public Sprite m_ItemImage Field Value Type Description Sprite"
  },
  "api/Global.InventoryListController.html": {
    "href": "api/Global.InventoryListController.html",
    "title": "Class InventoryListController",
    "keywords": "Class InventoryListController Inheritance Object InventoryListController Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class InventoryListController Methods InitializeInventoryList(VisualElement, VisualTreeAsset) Declaration public void InitializeInventoryList(VisualElement root, VisualTreeAsset listElementTemplate) Parameters Type Name Description VisualElement root VisualTreeAsset listElementTemplate"
  },
  "api/Global.InventoryListEntryController.html": {
    "href": "api/Global.InventoryListEntryController.html",
    "title": "Class InventoryListEntryController",
    "keywords": "Class InventoryListEntryController Inheritance Object InventoryListEntryController Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Global Assembly : cs.temp.dll.dll Syntax public class InventoryListEntryController Methods SetInventoryData(InventoryData) Declaration public void SetInventoryData(InventoryData inventoryData) Parameters Type Name Description InventoryData inventoryData SetVisualElement(VisualElement) Declaration public void SetVisualElement(VisualElement visualElement) Parameters Type Name Description VisualElement visualElement"
  },
  "api/Global.MainView.html": {
    "href": "api/Global.MainView.html",
    "title": "Class MainView",
    "keywords": "Class MainView Inheritance Object MainView Namespace : Global Assembly : cs.temp.dll.dll Syntax public class MainView : MonoBehaviour"
  },
  "api/Global.SetCameraBounds.html": {
    "href": "api/Global.SetCameraBounds.html",
    "title": "Class SetCameraBounds",
    "keywords": "Class SetCameraBounds Inheritance Object SetCameraBounds Namespace : Global Assembly : cs.temp.dll.dll Syntax public class SetCameraBounds : MonoBehaviour Fields cameraVolume Declaration public Transform cameraVolume Field Value Type Description Transform vCam Declaration public CinemachineVirtualCamera vCam Field Value Type Description CinemachineVirtualCamera Methods CalculateBounds() Declaration public void CalculateBounds()"
  },
  "api/Global.TileData.html": {
    "href": "api/Global.TileData.html",
    "title": "Struct TileData",
    "keywords": "Struct TileData Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : Global Assembly : cs.temp.dll.dll Syntax [Serializable] public struct TileData Fields occupied Declaration public bool occupied Field Value Type Description Boolean pathable Declaration public bool pathable Field Value Type Description Boolean plantable Declaration public bool plantable Field Value Type Description Boolean plottable Declaration public bool plottable Field Value Type Description Boolean tile Declaration public TileBase tile Field Value Type Description TileBase"
  },
  "api/Global.TileManager.html": {
    "href": "api/Global.TileManager.html",
    "title": "Class TileManager",
    "keywords": "Class TileManager Inheritance Object TileManager Namespace : Global Assembly : cs.temp.dll.dll Syntax public class TileManager : MonoBehaviour"
  },
  "api/Global.TileStore.html": {
    "href": "api/Global.TileStore.html",
    "title": "Class TileStore",
    "keywords": "Class TileStore Inheritance Object TileStore Namespace : Global Assembly : cs.temp.dll.dll Syntax public class TileStore : ScriptableObject Fields tileDataSet Declaration public List<TileData> tileDataSet Field Value Type Description List < TileData > Properties Item[Int32] Declaration public TileData this[int i] { get; set; } Parameters Type Name Description Int32 i Property Value Type Description TileData Item[TileBase] Declaration public TileData this[TileBase tile] { get; } Parameters Type Name Description TileBase tile Property Value Type Description TileData"
  },
  "api/Global.ToolsMenu.html": {
    "href": "api/Global.ToolsMenu.html",
    "title": "Class ToolsMenu",
    "keywords": "Class ToolsMenu Inheritance Object ToolsMenu Namespace : Global Assembly : cs.temp.dll.dll Syntax public class ToolsMenu : MonoBehaviour Fields toolData Declaration public PlayerToolData toolData Field Value Type Description PlayerToolData zoom Declaration public CameraZoom zoom Field Value Type Description CameraZoom Methods DisableToolButton(String) Declaration public void DisableToolButton(string button) Parameters Type Name Description String button EnableToolButton(String) Declaration public void EnableToolButton(string button) Parameters Type Name Description String button"
  },
  "api/Global.ToolsMenuController.html": {
    "href": "api/Global.ToolsMenuController.html",
    "title": "Class ToolsMenuController",
    "keywords": "Class ToolsMenuController Inheritance Object ToolsMenuController Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : Global Assembly : cs.temp.dll.dll Syntax [Serializable] public class ToolsMenuController Constructors ToolsMenuController(VisualElement) Declaration public ToolsMenuController(VisualElement root) Parameters Type Name Description VisualElement root Fields panel Declaration public IPanel panel Field Value Type Description IPanel toolData Declaration public PlayerToolData toolData Field Value Type Description PlayerToolData zoom Declaration public CameraZoom zoom Field Value Type Description CameraZoom Methods HideToolsMenu() Declaration public void HideToolsMenu() RegisterToolCallbacks() Declaration public void RegisterToolCallbacks() ShowToolsMenu() Declaration public void ShowToolsMenu() ToolCallbacks() Declaration public void ToolCallbacks()"
  },
  "api/Global.ToolTest.html": {
    "href": "api/Global.ToolTest.html",
    "title": "Class ToolTest",
    "keywords": "Class ToolTest Inheritance Object ToolTest Namespace : Global Assembly : cs.temp.dll.dll Syntax public class ToolTest : MonoBehaviour Methods SetTools(String) Declaration public void SetTools(string name) Parameters Type Name Description String name"
  },
  "api/GrandmaGreen.AreaController.html": {
    "href": "api/GrandmaGreen.AreaController.html",
    "title": "Class AreaController",
    "keywords": "Class AreaController Inheritance Object AreaController GardenAreaController Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class AreaController : MonoBehaviour Fields areaBounds Declaration public Collider areaBounds Field Value Type Description Collider areaServicer Declaration public AreaServices areaServicer Field Value Type Description AreaServices enterencePoints Declaration public Transform[] enterencePoints Field Value Type Description Transform [] pathfinder Declaration public Pathfinder pathfinder Field Value Type Description Pathfinder playerController Declaration public EntityController playerController Field Value Type Description EntityController tilemap Declaration public Tilemap tilemap Field Value Type Description Tilemap tileStore Declaration public TileStore tileStore Field Value Type Description TileStore Properties areaIndex Declaration public int areaIndex { get; protected set; } Property Value Type Description Int32 lastDraggedPosition Declaration public Vector3 lastDraggedPosition { get; protected set; } Property Value Type Description Vector3 lastSelectedCell Declaration public Vector3Int lastSelectedCell { get; protected set; } Property Value Type Description Vector3Int lastSelectedPosition Declaration public Vector3 lastSelectedPosition { get; protected set; } Property Value Type Description Vector3 lastSelectedTile Declaration public TileBase lastSelectedTile { get; protected set; } Property Value Type Description TileBase Methods Activate() Declaration public virtual void Activate() AreaDragged(Vector3) Declaration public virtual void AreaDragged(Vector3 worldPoint) Parameters Type Name Description Vector3 worldPoint AreaSelection(Vector3) Declaration public virtual void AreaSelection(Vector3 worldPoint) Parameters Type Name Description Vector3 worldPoint Awake() Declaration public virtual void Awake() BakeNavGrid() Declaration public void BakeNavGrid() Deactivate() Declaration public virtual void Deactivate() OnValidate() Declaration public virtual void OnValidate() ParseTilemap() Declaration public void ParseTilemap() ProcessAreaInput(InteractionEventData) Declaration public virtual void ProcessAreaInput(InteractionEventData eventData) Parameters Type Name Description InteractionEventData eventData Events onActivation Declaration public event Action onActivation Event Type Type Description Action onDeactivation Declaration public event Action onDeactivation Event Type Type Description Action onTilemapSelection Declaration public event Action<Vector3Int> onTilemapSelection Event Type Type Description Action < Vector3Int >"
  },
  "api/GrandmaGreen.AreaExitState.html": {
    "href": "api/GrandmaGreen.AreaExitState.html",
    "title": "Class AreaExitState",
    "keywords": "Class AreaExitState Inheritance Object AreaExitState Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class AreaExitState : ScriptableObject Fields exitSide Declaration public Direction exitSide Field Value Type Description Direction"
  },
  "api/GrandmaGreen.AreaServices.html": {
    "href": "api/GrandmaGreen.AreaServices.html",
    "title": "Class AreaServices",
    "keywords": "Class AreaServices Inheritance Object AreaServices Implements IPathfinderServicer IServicer < Pathfinder > Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class AreaServices : ScriptableObject, IPathfinderServicer, IServicer<Pathfinder> Fields exitState Declaration public AreaExitState exitState Field Value Type Description AreaExitState Properties ActiveArea Declaration public AreaController ActiveArea { get; } Property Value Type Description AreaController Methods ActivateAreaController(Int32) Activates an area controller and sets it to the current active area Deactivates the previous active area Declaration public void ActivateAreaController(int areaIndex) Parameters Type Name Description Int32 areaIndex DeactivateAreaController(Int32) Deactivates the currently active area Declaration public void DeactivateAreaController(int areaIndex) Parameters Type Name Description Int32 areaIndex DeregisterService(Pathfinder) Placeholder method for registering a sample service Declaration public virtual void DeregisterService(Pathfinder pathfinder) Parameters Type Name Description Pathfinder pathfinder DesregisterAreaController(AreaController) Deactivate an area controller Declaration public void DesregisterAreaController(AreaController areaController) Parameters Type Name Description AreaController areaController RegisterAreaController(AreaController) Active an area controller Declaration public void RegisterAreaController(AreaController areaController) Parameters Type Name Description AreaController areaController RegisterService(Pathfinder) Placeholder method for registering a sample service Declaration public virtual void RegisterService(Pathfinder pathfinder) Parameters Type Name Description Pathfinder pathfinder StartServices() Declaration public virtual void StartServices() StopServices() Stops the various gardening systems Declaration public virtual void StopServices() Implements IPathfinderServicer IServicer<T>"
  },
  "api/GrandmaGreen.Audio.AudioSystemBehavior.html": {
    "href": "api/GrandmaGreen.Audio.AudioSystemBehavior.html",
    "title": "Class AudioSystemBehavior",
    "keywords": "Class AudioSystemBehavior Inheritance Object AudioSystemBehavior Namespace : GrandmaGreen.Audio Assembly : cs.temp.dll.dll Syntax public class AudioSystemBehavior : PlayableBehaviour Fields soundContainer Declaration public ASoundContainer soundContainer Field Value Type Description ASoundContainer Methods ProcessFrame(Playable, FrameData, Object) Declaration public override void ProcessFrame(Playable playable, FrameData info, object playerData) Parameters Type Name Description Playable playable FrameData info Object playerData"
  },
  "api/GrandmaGreen.Audio.AudioSystemClip.html": {
    "href": "api/GrandmaGreen.Audio.AudioSystemClip.html",
    "title": "Class AudioSystemClip",
    "keywords": "Class AudioSystemClip Inheritance Object AudioSystemClip Implements ITimelineClipAsset Namespace : GrandmaGreen.Audio Assembly : cs.temp.dll.dll Syntax [Serializable] public class AudioSystemClip : PlayableAsset Fields SoundContainer Declaration public ASoundContainer SoundContainer Field Value Type Description ASoundContainer Properties clipCaps Declaration public ClipCaps clipCaps { get; } Property Value Type Description ClipCaps duration Declaration public override double duration { get; } Property Value Type Description Double Methods CreatePlayable(PlayableGraph, GameObject) Declaration public override Playable CreatePlayable(PlayableGraph graph, GameObject owner) Parameters Type Name Description PlayableGraph graph GameObject owner Returns Type Description Playable Implements ITimelineClipAsset"
  },
  "api/GrandmaGreen.Audio.AudioSystemMixerBehavior.html": {
    "href": "api/GrandmaGreen.Audio.AudioSystemMixerBehavior.html",
    "title": "Class AudioSystemMixerBehavior",
    "keywords": "Class AudioSystemMixerBehavior Inheritance Object AudioSystemMixerBehavior Namespace : GrandmaGreen.Audio Assembly : cs.temp.dll.dll Syntax public class AudioSystemMixerBehavior : PlayableBehaviour Methods ProcessFrame(Playable, FrameData, Object) Declaration public override void ProcessFrame(Playable playable, FrameData info, object playerData) Parameters Type Name Description Playable playable FrameData info Object playerData"
  },
  "api/GrandmaGreen.Audio.AudioSystemTrack.html": {
    "href": "api/GrandmaGreen.Audio.AudioSystemTrack.html",
    "title": "Class AudioSystemTrack",
    "keywords": "Class AudioSystemTrack Inheritance Object AudioSystemTrack Namespace : GrandmaGreen.Audio Assembly : cs.temp.dll.dll Syntax public class AudioSystemTrack : TrackAsset Methods CreateTrackMixer(PlayableGraph, GameObject, Int32) Declaration public override Playable CreateTrackMixer(PlayableGraph graph, GameObject go, int inputCount) Parameters Type Name Description PlayableGraph graph GameObject go Int32 inputCount Returns Type Description Playable"
  },
  "api/GrandmaGreen.Audio.html": {
    "href": "api/GrandmaGreen.Audio.html",
    "title": "Namespace GrandmaGreen.Audio",
    "keywords": "Namespace GrandmaGreen.Audio Classes AudioSystemBehavior AudioSystemClip AudioSystemMixerBehavior AudioSystemTrack"
  },
  "api/GrandmaGreen.BulletinBoardUIController.html": {
    "href": "api/GrandmaGreen.BulletinBoardUIController.html",
    "title": "Class BulletinBoardUIController",
    "keywords": "Class BulletinBoardUIController Inheritance Object BulletinBoardUIController Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class BulletinBoardUIController Constructors BulletinBoardUIController(BulletinBoardUIDisplay) Declaration public BulletinBoardUIController(BulletinBoardUIDisplay parent) Parameters Type Name Description BulletinBoardUIDisplay parent Fields currentBigContest Declaration public Contest currentBigContest Field Value Type Description Contest Methods EvaluatePlant(Plant) Declaration public bool EvaluatePlant(Plant submissionPlant) Parameters Type Name Description Plant submissionPlant Returns Type Description Boolean"
  },
  "api/GrandmaGreen.BulletinBoardUIDisplay.html": {
    "href": "api/GrandmaGreen.BulletinBoardUIDisplay.html",
    "title": "Class BulletinBoardUIDisplay",
    "keywords": "Class BulletinBoardUIDisplay Inheritance Object UIDisplayBase BulletinBoardUIDisplay Inherited Members UIDisplayBase.m_rootVisualElement UIDisplayBase.onPanelOpened UIDisplayBase.onPanelClosed UIDisplayBase.Awake() UIDisplayBase.Load() UIDisplayBase.Unload() UIDisplayBase.RegisterButtonCallback(String, Action) UIDisplayBase.RegisterButtonCallbackWithClose(String, Action) Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class BulletinBoardUIDisplay : UIDisplayBase Fields closeSFX Declaration public SpookuleleAudio.ASoundContainer closeSFX Field Value Type Description SpookuleleAudio.ASoundContainer collectionsSO Declaration public CollectionsSO collectionsSO Field Value Type Description CollectionsSO contestLostLetter Declaration public Letter contestLostLetter Field Value Type Description Letter contestWonLetter Declaration public Letter contestWonLetter Field Value Type Description Letter controller Declaration public BulletinBoardUIController controller Field Value Type Description BulletinBoardUIController infoListEntryTemplate Declaration public VisualTreeAsset infoListEntryTemplate Field Value Type Description VisualTreeAsset inventoryObjectSaver Declaration public ObjectSaver inventoryObjectSaver Field Value Type Description ObjectSaver mailboxModel Declaration public MailboxModel mailboxModel Field Value Type Description MailboxModel openSFX Declaration public SpookuleleAudio.ASoundContainer openSFX Field Value Type Description SpookuleleAudio.ASoundContainer Methods CloseUI() Declaration public override void CloseUI() Overrides UIDisplayBase.CloseUI() OpenUI() Declaration public override void OpenUI() Overrides UIDisplayBase.OpenUI() RegisterSubmissionBox() Declaration public void RegisterSubmissionBox() SetItemSource() Declaration public void SetItemSource() Start() Declaration public void Start()"
  },
  "api/GrandmaGreen.CameraZoom.html": {
    "href": "api/GrandmaGreen.CameraZoom.html",
    "title": "Class CameraZoom",
    "keywords": "Class CameraZoom Inheritance Object CameraZoom Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class CameraZoom : MonoBehaviour Methods ZoomCameraRequest(Single, Single) Declaration public void ZoomCameraRequest(float zoom, float time) Parameters Type Name Description Single zoom Single time"
  },
  "api/GrandmaGreen.CatchUIInput.html": {
    "href": "api/GrandmaGreen.CatchUIInput.html",
    "title": "Class CatchUIInput",
    "keywords": "Class CatchUIInput Inheritance Object CatchUIInput Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class CatchUIInput : MonoBehaviour Fields document Declaration public UIDocument document Field Value Type Description UIDocument m_PointerActive Declaration public bool m_PointerActive Field Value Type Description Boolean touchInteraction Declaration public TouchInteraction touchInteraction Field Value Type Description TouchInteraction"
  },
  "api/GrandmaGreen.Collections.AwardCollectionProperties.html": {
    "href": "api/GrandmaGreen.Collections.AwardCollectionProperties.html",
    "title": "Struct AwardCollectionProperties",
    "keywords": "Struct AwardCollectionProperties Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : GrandmaGreen.Collections Assembly : cs.temp.dll.dll Syntax public struct AwardCollectionProperties Fields category Declaration public string category Field Value Type Description String name Declaration public string name Field Value Type Description String numTimesWon Declaration public int numTimesWon Field Value Type Description Int32"
  },
  "api/GrandmaGreen.Collections.CharacterId.html": {
    "href": "api/GrandmaGreen.Collections.CharacterId.html",
    "title": "Enum CharacterId",
    "keywords": "Enum CharacterId Namespace : GrandmaGreen.Collections Assembly : cs.temp.dll.dll Syntax public enum CharacterId : ushort Fields Name Description AppleGolem CottonGolem CrocusGolem DecorShopkeeper GardeningShopkeeper Grandma PumpkinGolem TulipGolem TurnipGolem"
  },
  "api/GrandmaGreen.Collections.CharacterProperties.html": {
    "href": "api/GrandmaGreen.Collections.CharacterProperties.html",
    "title": "Struct CharacterProperties",
    "keywords": "Struct CharacterProperties Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : GrandmaGreen.Collections Assembly : cs.temp.dll.dll Syntax public struct CharacterProperties Fields description Declaration public string description Field Value Type Description String name Declaration public string name Field Value Type Description String spritePaths Declaration public List<string> spritePaths Field Value Type Description List < String >"
  },
  "api/GrandmaGreen.Collections.CollectionsSaver.html": {
    "href": "api/GrandmaGreen.Collections.CollectionsSaver.html",
    "title": "Class CollectionsSaver",
    "keywords": "Class CollectionsSaver Inheritance Object CollectionsSaver Namespace : GrandmaGreen.Collections Assembly : cs.temp.dll.dll Syntax public class CollectionsSaver : ObjectSaver Fields collections Declaration public CollectionsSO collections Field Value Type Description CollectionsSO onPlantUpdate Declaration public Action<PlantCollectionProperties, bool> onPlantUpdate Field Value Type Description Action < PlantCollectionProperties , Boolean > Methods AwardContainsKey(AwardCollectionProperties) Check if there exists an award with the given properties in the saved components Declaration public bool AwardContainsKey(AwardCollectionProperties k) Parameters Type Name Description AwardCollectionProperties k Returns Type Description Boolean AwardValues() Return the list of award collection entries Declaration public List<AwardCollectionProperties> AwardValues() Returns Type Description List < AwardCollectionProperties > Clear() Clear all saved data for plants, friends, and award collections Declaration public void Clear() FriendContainsKey(FriendCollectionProperties) Check if there exists a friend with the given properties in the saved components Declaration public bool FriendContainsKey(FriendCollectionProperties k) Parameters Type Name Description FriendCollectionProperties k Returns Type Description Boolean FriendValues() Return the list of friend collection entries Declaration public List<FriendCollectionProperties> FriendValues() Returns Type Description List < FriendCollectionProperties > Initialize() Pre-create component stores of appropriate types so we don't have to manually do it in the editor Declaration public void Initialize() PlantContainsKey(IInventoryItem) Check if there exists a plant with the given properties in the saved components Declaration public bool PlantContainsKey(IInventoryItem item) Parameters Type Name Description IInventoryItem item Returns Type Description Boolean PlantSearch(Int32, Genotype.Trait) Find a plant's info from the saved components based on its id and trait. Declaration public PlantCollectionProperties PlantSearch(int itemID, Genotype.Trait trait) Parameters Type Name Description Int32 itemID Genotype.Trait trait Returns Type Description PlantCollectionProperties PlantValues() Return the list of plant collection entries Declaration public List<PlantCollectionProperties> PlantValues() Returns Type Description List < PlantCollectionProperties > UpdatePlantCollections(IInventoryItem) Call whenever an item is added to the inventory. Will add to or update collections checking if it's a seed or plant, whether its a new genotype, adds to harvest count and adds the sprite if it's mature Declaration public void UpdatePlantCollections(IInventoryItem item) Parameters Type Name Description IInventoryItem item"
  },
  "api/GrandmaGreen.Collections.CollectionsSO.html": {
    "href": "api/GrandmaGreen.Collections.CollectionsSO.html",
    "title": "Class CollectionsSO",
    "keywords": "Class CollectionsSO Inheritance Object CollectionsSO Namespace : GrandmaGreen.Collections Assembly : cs.temp.dll.dll Syntax public class CollectionsSO : SerializedScriptableObject Fields DecorList Declaration public List<Decor> DecorList Field Value Type Description List < Decor > FixtureList Declaration public List<Decor> FixtureList Field Value Type Description List < Decor > ItemLookup Declaration public Dictionary<ushort, ItemProperties> ItemLookup Field Value Type Description Dictionary < UInt16 , ItemProperties > PlantGenotypeMasterList Declaration public List<Seed> PlantGenotypeMasterList Field Value Type Description List < Seed > PlantLookup Declaration public Dictionary<ushort, PlantProperties> PlantLookup Field Value Type Description Dictionary < UInt16 , PlantProperties > Properties LoadedInstance Declaration public CollectionsSO LoadedInstance { get; } Property Value Type Description CollectionsSO Methods DEBUGLoadPlantProperties() Declaration public void DEBUGLoadPlantProperties() GenerateCollections() Declaration public void GenerateCollections() GetFruitFruit(PlantId, Genotype, Int32) Declaration public Sprite GetFruitFruit(PlantId type, Genotype genotype, int growthStage) Parameters Type Name Description PlantId type Genotype genotype Int32 growthStage Returns Type Description Sprite GetFruitTree(PlantId, Genotype, Int32) Declaration public Sprite GetFruitTree(PlantId type, Genotype genotype, int growthStage) Parameters Type Name Description PlantId type Genotype genotype Int32 growthStage Returns Type Description Sprite GetInventorySprite(PlantId, Genotype) Declaration public Sprite GetInventorySprite(PlantId type, Genotype genotype) Parameters Type Name Description PlantId type Genotype genotype Returns Type Description Sprite GetItem(UInt16) Get any item by its id Declaration public ItemProperties GetItem(ushort id) Parameters Type Name Description UInt16 id Returns Type Description ItemProperties GetPlant(PlantId) Get any plant by its id Declaration public PlantProperties GetPlant(PlantId id) Parameters Type Name Description PlantId id Returns Type Description PlantProperties GetResourcePath(PlantId) Declaration public string GetResourcePath(PlantId id) Parameters Type Name Description PlantId id Returns Type Description String GetSprite(PlantId, Genotype) Only for seed packets Declaration public Sprite GetSprite(PlantId type, Genotype genotype) Parameters Type Name Description PlantId type Genotype genotype Returns Type Description Sprite GetSprite(PlantId, Genotype, Int32) TODO: checks for single sprite vs spritesheet Only for plant sprites Declaration public Sprite GetSprite(PlantId type, Genotype genotype, int growthStage) Parameters Type Name Description PlantId type Genotype genotype Int32 growthStage Returns Type Description Sprite GetSprite(String) Retrieve a sprite by its sprite path (which is just its filename) Declaration public Sprite GetSprite(string spritePath) Parameters Type Name Description String spritePath Returns Type Description Sprite GetSprite(UInt16) Retrieve a sprite by its sprite path (which is just its filename) Declaration public Sprite GetSprite(ushort id) Parameters Type Name Description UInt16 id Returns Type Description Sprite GetVegetableHead(PlantId, Genotype, Int32) Get child sprite for fruits and vegetables. Declaration public Sprite GetVegetableHead(PlantId type, Genotype genotype, int growthStage) Parameters Type Name Description PlantId type Genotype genotype Int32 growthStage Returns Type Description Sprite Fruit or vegetable. IsFlower(PlantId) Declaration public static bool IsFlower(PlantId id) Parameters Type Name Description PlantId id Returns Type Description Boolean IsFruit(PlantId) Declaration public static bool IsFruit(PlantId id) Parameters Type Name Description PlantId id Returns Type Description Boolean IsVegetable(PlantId) Declaration public static bool IsVegetable(PlantId id) Parameters Type Name Description PlantId id Returns Type Description Boolean LoadCollections() Declaration public void LoadCollections() PlantToGolem(PlantId, out CharacterId) Declaration public bool PlantToGolem(PlantId id, out CharacterId golemID) Parameters Type Name Description PlantId id CharacterId golemID Returns Type Description Boolean UnloadCollections() Declaration public void UnloadCollections()"
  },
  "api/GrandmaGreen.Collections.CSVtoSO.html": {
    "href": "api/GrandmaGreen.Collections.CSVtoSO.html",
    "title": "Class CSVtoSO",
    "keywords": "Class CSVtoSO Inheritance Object CSVtoSO Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : GrandmaGreen.Collections Assembly : cs.temp.dll.dll Syntax public class CSVtoSO Fields SEED_ID_OFFSET Declaration public const ushort SEED_ID_OFFSET = 1000 Field Value Type Description UInt16 Methods GenerateCollectionsSO(CollectionsSO, TextAsset) Function to populate and creates the Collections SO by reading the CSV file Declaration public static void GenerateCollectionsSO(CollectionsSO collections, TextAsset dataSheet) Parameters Type Name Description CollectionsSO collections TextAsset dataSheet"
  },
  "api/GrandmaGreen.Collections.Decor.html": {
    "href": "api/GrandmaGreen.Collections.Decor.html",
    "title": "Struct Decor",
    "keywords": "Struct Decor Implements IInventoryItem Inherited Members ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : GrandmaGreen.Collections Assembly : cs.temp.dll.dll Syntax public struct Decor : IInventoryItem Constructors Decor(UInt16, String) Declaration public Decor(ushort id, string name) Parameters Type Name Description UInt16 id String name Decor(UInt16, String, Int32) Declaration public Decor(ushort id, string name, int num) Parameters Type Name Description UInt16 id String name Int32 num Properties itemID Declaration public ushort itemID { readonly get; set; } Property Value Type Description UInt16 itemName Declaration public string itemName { readonly get; set; } Property Value Type Description String itemType Declaration public ItemType itemType { readonly get; set; } Property Value Type Description ItemType quantity Declaration public int quantity { readonly get; set; } Property Value Type Description Int32 Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) GetQuantityToString() Declaration public string GetQuantityToString() Returns Type Description String Implements IInventoryItem"
  },
  "api/GrandmaGreen.Collections.DecorationId.html": {
    "href": "api/GrandmaGreen.Collections.DecorationId.html",
    "title": "Enum DecorationId",
    "keywords": "Enum DecorationId Namespace : GrandmaGreen.Collections Assembly : cs.temp.dll.dll Syntax public enum DecorationId : ushort Fields Name Description AcornExterior AppleGolemMemento ArtNouveauSculture01 ArtNouveauSculture02 ArtNouveauSculture03 Bicycle BirdBath BoxwoodBush CampingLantern ClaudeMonetPainting Clover CobblestonePath CommonPoppy CottonGolemMemento CrocusGolemMemento Dandelion DirtPath EuropeanCastleExterior FairyMagicExterior FancyFountain FancyIronFence FancyPond FarmFence FieldstoneFence Flamingo FlowerTable FlowerWagon ForgetMeNot FrenchCountryUrn FrenchProvincialExterior FrogSculpture GardenGnomeBasic GardenGnomeGold GardenGnomeSexy GardeniaBush GrecianRuin HarvestBasket Hemlock HistoricalEnglishExterior HydrangeaBush IronBench IronChair IronLampPost IronTable IvyCoveredBrickFence JackOLantern JapaneseGardenLantern JohnSingerSargentPainting KoiPond Leafpile MagicFountain MailboxBasic MailboxCabin MailboxCottagecore MailboxFairy MailboxGoth MailboxOriental MailboxPastel MapleTree ModernExterior MushroomLamp MushroomStool NaturalPond OakTree OleanderBush PalmTree PastelExterior PicnicSpread PineTree PNWCabinExterior PoplarTree PottedPlant01 PottedPlant02 PottedPlant03 PumpkinGolemMemento RockingChair Scarecrow SimpleFountain SimpleHangingLampPost SimpleWoodenBench SimpleWoodenChair SimpleWoodenFence SimpleWoodenTable StoneBench StumpTree Sundial Swingset TilePath Torch TraditionalJapaneseExterior TulipGolemMemento TurnipGolemMemento Umbrella Waterpump Well WhitePicketFence WildDaisies WillowTree WitchyGothExterior WoodPath"
  },
  "api/GrandmaGreen.Collections.FlowerId.html": {
    "href": "api/GrandmaGreen.Collections.FlowerId.html",
    "title": "Enum FlowerId",
    "keywords": "Enum FlowerId Namespace : GrandmaGreen.Collections Assembly : cs.temp.dll.dll Syntax public enum FlowerId : ushort Fields Name Description CallaLily Crocus Dahlia Hyacinth Pansy Rose Tulip"
  },
  "api/GrandmaGreen.Collections.FriendCollectionProperties.html": {
    "href": "api/GrandmaGreen.Collections.FriendCollectionProperties.html",
    "title": "Struct FriendCollectionProperties",
    "keywords": "Struct FriendCollectionProperties Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : GrandmaGreen.Collections Assembly : cs.temp.dll.dll Syntax public struct FriendCollectionProperties Fields description Declaration public string description Field Value Type Description String location Declaration public string location Field Value Type Description String name Declaration public string name Field Value Type Description String"
  },
  "api/GrandmaGreen.Collections.FruitId.html": {
    "href": "api/GrandmaGreen.Collections.FruitId.html",
    "title": "Enum FruitId",
    "keywords": "Enum FruitId Namespace : GrandmaGreen.Collections Assembly : cs.temp.dll.dll Syntax public enum FruitId : ushort Fields Name Description Apple Blueberry Cherry Peach Pear Plum Watermelon"
  },
  "api/GrandmaGreen.Collections.html": {
    "href": "api/GrandmaGreen.Collections.html",
    "title": "Namespace GrandmaGreen.Collections",
    "keywords": "Namespace GrandmaGreen.Collections Classes CollectionsSaver CollectionsSO CSVtoSO Structs AwardCollectionProperties CharacterProperties Decor FriendCollectionProperties ItemProperties ItemSpriteList An item sprite contains the item's id and the sprite(s) associated with. Plant PlantCollectionProperties PlantProperties Seed Tool Interfaces IInventoryItem Enums CharacterId DecorationId FlowerId FruitId ItemType PlantId PlantType ToolId VegetableId"
  },
  "api/GrandmaGreen.Collections.IInventoryItem.html": {
    "href": "api/GrandmaGreen.Collections.IInventoryItem.html",
    "title": "Interface IInventoryItem",
    "keywords": "Interface IInventoryItem Namespace : GrandmaGreen.Collections Assembly : cs.temp.dll.dll Syntax public interface IInventoryItem Properties itemID Declaration ushort itemID { get; set; } Property Value Type Description UInt16 itemName Declaration string itemName { get; set; } Property Value Type Description String itemType Declaration ItemType itemType { get; set; } Property Value Type Description ItemType quantity Declaration int quantity { get; set; } Property Value Type Description Int32 Methods GetQuantityToString() Declaration string GetQuantityToString() Returns Type Description String"
  },
  "api/GrandmaGreen.Collections.ItemProperties.html": {
    "href": "api/GrandmaGreen.Collections.ItemProperties.html",
    "title": "Struct ItemProperties",
    "keywords": "Struct ItemProperties Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : GrandmaGreen.Collections Assembly : cs.temp.dll.dll Syntax public struct ItemProperties Fields baseCost Declaration public int baseCost Field Value Type Description Int32 decorType Declaration public string decorType Field Value Type Description String description Declaration public string description Field Value Type Description String itemType Declaration public string itemType Field Value Type Description String name Declaration public string name Field Value Type Description String spritePath Declaration public string spritePath Field Value Type Description String tag Declaration public string tag Field Value Type Description String"
  },
  "api/GrandmaGreen.Collections.ItemSpriteList.html": {
    "href": "api/GrandmaGreen.Collections.ItemSpriteList.html",
    "title": "Struct ItemSpriteList",
    "keywords": "Struct ItemSpriteList An item sprite contains the item's id and the sprite(s) associated with. Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : GrandmaGreen.Collections Assembly : cs.temp.dll.dll Syntax public struct ItemSpriteList Fields id Declaration public int id Field Value Type Description Int32 sprites Declaration public List<Sprite> sprites Field Value Type Description List < Sprite >"
  },
  "api/GrandmaGreen.Collections.ItemType.html": {
    "href": "api/GrandmaGreen.Collections.ItemType.html",
    "title": "Enum ItemType",
    "keywords": "Enum ItemType Namespace : GrandmaGreen.Collections Assembly : cs.temp.dll.dll Syntax public enum ItemType Fields Name Description Decor Plant Seed Tool"
  },
  "api/GrandmaGreen.Collections.Plant.html": {
    "href": "api/GrandmaGreen.Collections.Plant.html",
    "title": "Struct Plant",
    "keywords": "Struct Plant Implements IInventoryItem Inherited Members ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : GrandmaGreen.Collections Assembly : cs.temp.dll.dll Syntax public struct Plant : IInventoryItem Constructors Plant(UInt16, String, Genotype) Declaration public Plant(ushort id, string name, Genotype genotype) Parameters Type Name Description UInt16 id String name Genotype genotype Fields plantGenotype Declaration public Genotype plantGenotype Field Value Type Description Genotype Properties itemID Declaration public ushort itemID { readonly get; set; } Property Value Type Description UInt16 itemName Declaration public string itemName { readonly get; set; } Property Value Type Description String itemType Declaration public ItemType itemType { readonly get; set; } Property Value Type Description ItemType quantity Declaration public int quantity { readonly get; set; } Property Value Type Description Int32 Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) GetQuantityToString() Declaration public string GetQuantityToString() Returns Type Description String Implements IInventoryItem"
  },
  "api/GrandmaGreen.Collections.PlantCollectionProperties.html": {
    "href": "api/GrandmaGreen.Collections.PlantCollectionProperties.html",
    "title": "Struct PlantCollectionProperties",
    "keywords": "Struct PlantCollectionProperties Inherited Members ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : GrandmaGreen.Collections Assembly : cs.temp.dll.dll Syntax public struct PlantCollectionProperties Fields dateUnlocked Declaration public string dateUnlocked Field Value Type Description String description Declaration public string description Field Value Type Description String id Declaration public ushort id Field Value Type Description UInt16 isMega Declaration public bool isMega Field Value Type Description Boolean matureUnlocked Declaration public bool matureUnlocked Field Value Type Description Boolean name Declaration public string name Field Value Type Description String trait Declaration public Genotype.Trait trait Field Value Type Description Genotype.Trait unlockedSizes Declaration public List<Genotype.Size> unlockedSizes Field Value Type Description List < Genotype.Size > Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object)"
  },
  "api/GrandmaGreen.Collections.PlantId.html": {
    "href": "api/GrandmaGreen.Collections.PlantId.html",
    "title": "Enum PlantId",
    "keywords": "Enum PlantId Namespace : GrandmaGreen.Collections Assembly : cs.temp.dll.dll Syntax public enum PlantId : ushort Fields Name Description Apple Blueberry CallaLily Cherry Corn Crocus Cucumber Dahlia Hyacinth Pansy Peach Pear Pepper Plum Pumpkin Rose SweetPotato Tomato Tulip Turnip Watermelon"
  },
  "api/GrandmaGreen.Collections.PlantProperties.html": {
    "href": "api/GrandmaGreen.Collections.PlantProperties.html",
    "title": "Struct PlantProperties",
    "keywords": "Struct PlantProperties Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : GrandmaGreen.Collections Assembly : cs.temp.dll.dll Syntax public struct PlantProperties Fields baseGoldPerTimeUnit Declaration public float baseGoldPerTimeUnit Field Value Type Description Single description Declaration public string description Field Value Type Description String growthStages Declaration public int growthStages Field Value Type Description Int32 growthTime Declaration public int growthTime Field Value Type Description Int32 name Declaration public string name Field Value Type Description String plantType Declaration public PlantType plantType Field Value Type Description PlantType spriteBasePath Declaration public string spriteBasePath Field Value Type Description String waterPerStage Declaration public int waterPerStage Field Value Type Description Int32"
  },
  "api/GrandmaGreen.Collections.PlantType.html": {
    "href": "api/GrandmaGreen.Collections.PlantType.html",
    "title": "Enum PlantType",
    "keywords": "Enum PlantType Namespace : GrandmaGreen.Collections Assembly : cs.temp.dll.dll Syntax public enum PlantType : ushort Fields Name Description Flower Fruit Vegetable"
  },
  "api/GrandmaGreen.Collections.Seed.html": {
    "href": "api/GrandmaGreen.Collections.Seed.html",
    "title": "Struct Seed",
    "keywords": "Struct Seed Implements IInventoryItem Inherited Members ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : GrandmaGreen.Collections Assembly : cs.temp.dll.dll Syntax public struct Seed : IInventoryItem Constructors Seed(UInt16, String, Genotype) Declaration public Seed(ushort id, string name, Genotype genotype) Parameters Type Name Description UInt16 id String name Genotype genotype Fields seedGenotype Declaration public Genotype seedGenotype Field Value Type Description Genotype Properties itemID Declaration public ushort itemID { readonly get; set; } Property Value Type Description UInt16 itemName Declaration public string itemName { readonly get; set; } Property Value Type Description String itemType Declaration public ItemType itemType { readonly get; set; } Property Value Type Description ItemType quantity Declaration public int quantity { readonly get; set; } Property Value Type Description Int32 Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) GetQuantityToString() Declaration public string GetQuantityToString() Returns Type Description String Implements IInventoryItem"
  },
  "api/GrandmaGreen.Collections.Tool.html": {
    "href": "api/GrandmaGreen.Collections.Tool.html",
    "title": "Struct Tool",
    "keywords": "Struct Tool Implements IInventoryItem Inherited Members ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : GrandmaGreen.Collections Assembly : cs.temp.dll.dll Syntax public struct Tool : IInventoryItem Constructors Tool(UInt16, String) Declaration public Tool(ushort id, string name) Parameters Type Name Description UInt16 id String name Tool(UInt16, String, Int32) Declaration public Tool(ushort id, string name, int num) Parameters Type Name Description UInt16 id String name Int32 num Properties itemID Declaration public ushort itemID { readonly get; set; } Property Value Type Description UInt16 itemName Declaration public string itemName { readonly get; set; } Property Value Type Description String itemType Declaration public ItemType itemType { readonly get; set; } Property Value Type Description ItemType quantity Declaration public int quantity { readonly get; set; } Property Value Type Description Int32 Methods Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) GetQuantityToString() Declaration public string GetQuantityToString() Returns Type Description String Implements IInventoryItem"
  },
  "api/GrandmaGreen.Collections.ToolId.html": {
    "href": "api/GrandmaGreen.Collections.ToolId.html",
    "title": "Enum ToolId",
    "keywords": "Enum ToolId Namespace : GrandmaGreen.Collections Assembly : cs.temp.dll.dll Syntax public enum ToolId : ushort Fields Name Description Fertilizer SeedPacket Trowel UpgradedTrowel UpgradedWateringCan WateringCan"
  },
  "api/GrandmaGreen.Collections.VegetableId.html": {
    "href": "api/GrandmaGreen.Collections.VegetableId.html",
    "title": "Enum VegetableId",
    "keywords": "Enum VegetableId Namespace : GrandmaGreen.Collections Assembly : cs.temp.dll.dll Syntax public enum VegetableId : ushort Fields Name Description Corn Cucumber Pepper Pumpkin SweetPotato Tomato Turnip"
  },
  "api/GrandmaGreen.CommonSFX.html": {
    "href": "api/GrandmaGreen.CommonSFX.html",
    "title": "Class CommonSFX",
    "keywords": "Class CommonSFX Inheritance Object CommonSFX Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class CommonSFX : ScriptableObject Methods PlaySFX(ASoundContainer) Declaration public void PlaySFX(ASoundContainer sound) Parameters Type Name Description ASoundContainer sound"
  },
  "api/GrandmaGreen.Contest.html": {
    "href": "api/GrandmaGreen.Contest.html",
    "title": "Struct Contest",
    "keywords": "Struct Contest Basic contest struct. All it does is store a plant and the assumed prize money. Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public struct Contest Fields rewardMoney Declaration public int rewardMoney Field Value Type Description Int32 targetPlant Declaration public Plant targetPlant Field Value Type Description Plant"
  },
  "api/GrandmaGreen.CultivisionUIDisplay.html": {
    "href": "api/GrandmaGreen.CultivisionUIDisplay.html",
    "title": "Class CultivisionUIDisplay",
    "keywords": "Class CultivisionUIDisplay Inheritance Object UIDisplayBase CultivisionUIDisplay Inherited Members UIDisplayBase.m_rootVisualElement UIDisplayBase.onPanelOpened UIDisplayBase.onPanelClosed UIDisplayBase.Awake() UIDisplayBase.Load() UIDisplayBase.Unload() UIDisplayBase.RegisterButtonCallback(String, Action) UIDisplayBase.RegisterButtonCallbackWithClose(String, Action) Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class CultivisionUIDisplay : UIDisplayBase Methods CloseUI() Declaration public override void CloseUI() Overrides UIDisplayBase.CloseUI() OpenUI() Declaration public override void OpenUI() Overrides UIDisplayBase.OpenUI() Start() Declaration public void Start()"
  },
  "api/GrandmaGreen.Dialogue.CustomOptionView.html": {
    "href": "api/GrandmaGreen.Dialogue.CustomOptionView.html",
    "title": "Class CustomOptionView",
    "keywords": "Class CustomOptionView Inheritance Object CustomOptionView Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : GrandmaGreen.Dialogue Assembly : cs.temp.dll.dll Syntax public class CustomOptionView Fields button Declaration public Button button Field Value Type Description Button hasSubmittedOptionSelection Declaration public bool hasSubmittedOptionSelection Field Value Type Description Boolean OnOptionSelected Declaration public Action<DialogueOption> OnOptionSelected Field Value Type Description Action < DialogueOption > option Declaration public DialogueOption option Field Value Type Description DialogueOption Properties Option Declaration public DialogueOption Option { get; set; } Property Value Type Description DialogueOption Methods DisplayText(DialogueOption) Declaration public void DisplayText(DialogueOption dialogueOption) Parameters Type Name Description DialogueOption dialogueOption InvokeOptionSelected() Declaration public void InvokeOptionSelected() SetButton(Button) Declaration public void SetButton(Button _button) Parameters Type Name Description Button _button"
  },
  "api/GrandmaGreen.Dialogue.Dialogueable.html": {
    "href": "api/GrandmaGreen.Dialogue.Dialogueable.html",
    "title": "Class Dialogueable",
    "keywords": "Class Dialogueable Inheritance Object Dialogueable Namespace : GrandmaGreen.Dialogue Assembly : cs.temp.dll.dll Syntax public class Dialogueable : MonoBehaviour Fields dialogueMode Declaration public DialogueMode dialogueMode Field Value Type Description DialogueMode dialogueSFX This golem's sound SFX, used for speech. Declaration public ListContainer dialogueSFX Field Value Type Description ListContainer idleDialogueCount Number of idle dialogue nodes that this golem has. Declaration public int idleDialogueCount Field Value Type Description Int32 interactionEventScript Called to end dialogue and reset golem behavior. Declaration public InteractionEvent interactionEventScript Field Value Type Description InteractionEvent onFinishDialogue Declaration public UnityAction onFinishDialogue Field Value Type Description UnityAction yarnProject This golem's yarn project, containing its dialogue. Declaration public YarnProject yarnProject Field Value Type Description YarnProject Methods TriggerDialogue() Triggers dialogue, sending the yarn project to the dialogue runner. Tells it which node to start on, which is determined randomly for normal dialogue events. Declaration public void TriggerDialogue() TriggerDialogueByNode(String) Declaration public void TriggerDialogueByNode(string s) Parameters Type Name Description String s"
  },
  "api/GrandmaGreen.Dialogue.DialogueMode.html": {
    "href": "api/GrandmaGreen.Dialogue.DialogueMode.html",
    "title": "Enum DialogueMode",
    "keywords": "Enum DialogueMode Namespace : GrandmaGreen.Dialogue Assembly : cs.temp.dll.dll Syntax public enum DialogueMode Fields Name Description Idle Story Tutorial"
  },
  "api/GrandmaGreen.Dialogue.Effects.CoroutineInterruptToken.html": {
    "href": "api/GrandmaGreen.Dialogue.Effects.CoroutineInterruptToken.html",
    "title": "Class Effects.CoroutineInterruptToken",
    "keywords": "Class Effects.CoroutineInterruptToken An object that can be used to signal to a coroutine that it should terminate early. Inheritance Object Effects.CoroutineInterruptToken Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : GrandmaGreen.Dialogue Assembly : cs.temp.dll.dll Syntax public class CoroutineInterruptToken Remarks While coroutines can be stopped by calling or , this has the side effect of also stopping any coroutine that was waiting for the now-stopped coroutine to finish. Instances of this class may be passed as a parameter to a coroutine that they can periodically poll to see if they should terminate earlier than planned. To use this class, create an instance of it, and pass it as a parameter to your coroutine. In the coroutine, call Start() to mark that the coroutine is running. During the coroutine's execution, periodically check the WasInterrupted property to determine if the coroutine should exit. If it is true , the coroutine should exit (via the yield break statement.) At the normal exit of your coroutine, call the Complete() method to mark that the coroutine is no longer running. To make a coroutine stop, call the Interrupt() method. You can also use the CanInterrupt property to determine if the token is in a state in which it can stop (that is, a coroutine that's using it is currently running.) Properties CanInterrupt Declaration public bool CanInterrupt { get; } Property Value Type Description Boolean WasInterrupted Declaration public bool WasInterrupted { get; } Property Value Type Description Boolean Methods Complete() Declaration public void Complete() Interrupt() Declaration public void Interrupt() Start() Declaration public void Start()"
  },
  "api/GrandmaGreen.Dialogue.Effects.html": {
    "href": "api/GrandmaGreen.Dialogue.Effects.html",
    "title": "Class Effects",
    "keywords": "Class Effects Contains coroutine methods that apply visual effects. This class is used by to handle animating the presentation of lines. Inheritance Object Effects Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : GrandmaGreen.Dialogue Assembly : cs.temp.dll.dll Syntax public static class Effects Methods Typewriter(Label, LocalizedLine, Single, Action<Int32>, Effects.CoroutineInterruptToken) A coroutine that gradually reveals the text in a object over time. Declaration public static IEnumerator Typewriter(Label displayText, LocalizedLine finalText, float lettersPerSecond, Action<int> onCharacterTyped, Effects.CoroutineInterruptToken stopToken = null) Parameters Type Name Description Label displayText LocalizedLine finalText Single lettersPerSecond The number of letters that should be revealed per second. Action < Int32 > onCharacterTyped An that should be called for each character that was revealed. Effects.CoroutineInterruptToken stopToken A Effects.CoroutineInterruptToken that can be used to interrupt the coroutine. Returns Type Description IEnumerator Remarks This method works by adjusting the value of the text parameter's property. This means that word wrapping will not change half-way through the presentation of a word. Depending on the value of lettersPerSecond , onCharacterTyped may be called multiple times per frame. Due to an internal implementation detail of TextMeshProUGUI, this method will always take at least one frame to execute, regardless of the length of the text parameter's text."
  },
  "api/GrandmaGreen.Dialogue.EntityLineView.html": {
    "href": "api/GrandmaGreen.Dialogue.EntityLineView.html",
    "title": "Class EntityLineView",
    "keywords": "Class EntityLineView Inheritance Object EntityLineView Namespace : GrandmaGreen.Dialogue Assembly : cs.temp.dll.dll Syntax public class EntityLineView : DialogueViewBase Fields autoAdvance Defines whether the dialogue text should auto advance. Declaration public bool autoAdvance Field Value Type Description Boolean dialogueSFX The dialogueSFX for the golem that is currently speaking. Declaration public ListContainer dialogueSFX Field Value Type Description ListContainer dialogueUI The UI document it uses to display text. Declaration public UIDocument dialogueUI Field Value Type Description UIDocument onCharacterTyped Action that occurs when character is typed. Declaration public Action<int> onCharacterTyped Field Value Type Description Action < Int32 > OnOptionSelected Declaration public Action<int> OnOptionSelected Field Value Type Description Action < Int32 > typewriterEffectSpeed The number of characters per second that should appear during the typewriter effect. Declaration public float typewriterEffectSpeed Field Value Type Description Single useTypewriterEffect Used to determine if the dialogue should use the typewriter effect. Declaration public bool useTypewriterEffect Field Value Type Description Boolean Methods DismissLine(Action) Called by the DialogueRunner to signal that the view should dismiss its current line from display, and clean up. Declaration public override void DismissLine(Action onDismissalComplete) Parameters Type Name Description Action onDismissalComplete EndDialogueNode() Hide the dialogue bubble upon node end. Declaration public void EndDialogueNode() InterruptLine(LocalizedLine, Action) Called by the DialogueRunner to signal that a line has been interrupted, and that the Dialogue View should finish presenting its line as quickly as possible. Declaration public override void InterruptLine(LocalizedLine dialogueLine, Action onInterruptLineFinished) Parameters Type Name Description LocalizedLine dialogueLine Action onInterruptLineFinished OnContinueTriggered(ClickEvent) Declaration public void OnContinueTriggered(ClickEvent clickEvent) Parameters Type Name Description ClickEvent clickEvent RunLine(LocalizedLine, Action) Called by the DialogueRunner to signal that a line should be displayed to the user. Declaration public override void RunLine(LocalizedLine dialogueLine, Action onDialogueLineFinished) Parameters Type Name Description LocalizedLine dialogueLine Action onDialogueLineFinished RunOptions(DialogueOption[], Action<Int32>) Declaration public override void RunOptions(DialogueOption[] dialogueOptions, Action<int> onOptionSelected) Parameters Type Name Description DialogueOption [] dialogueOptions Action < Int32 > onOptionSelected StartDialogueNode() Display the dialogue bubble upon node start. Declaration public void StartDialogueNode() UserRequestedViewAdvancement() Declaration public override void UserRequestedViewAdvancement()"
  },
  "api/GrandmaGreen.Dialogue.html": {
    "href": "api/GrandmaGreen.Dialogue.html",
    "title": "Namespace GrandmaGreen.Dialogue",
    "keywords": "Namespace GrandmaGreen.Dialogue Classes CustomOptionView Dialogueable Effects Contains coroutine methods that apply visual effects. This class is used by to handle animating the presentation of lines. Effects.CoroutineInterruptToken An object that can be used to signal to a coroutine that it should terminate early. EntityLineView Enums DialogueMode"
  },
  "api/GrandmaGreen.DialoguePair.html": {
    "href": "api/GrandmaGreen.DialoguePair.html",
    "title": "Class DialoguePair",
    "keywords": "Class DialoguePair Inheritance Object DialoguePair Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax [Serializable] public class DialoguePair Fields node Declaration public string node Field Value Type Description String yarnProject Declaration public Yarn.Unity.YarnProject yarnProject Field Value Type Description Yarn.Unity.YarnProject"
  },
  "api/GrandmaGreen.Direction.html": {
    "href": "api/GrandmaGreen.Direction.html",
    "title": "Enum Direction",
    "keywords": "Enum Direction Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public enum Direction Fields Name Description EAST NORTH SOUTH WEST"
  },
  "api/GrandmaGreen.Entities.EntityBehavior.html": {
    "href": "api/GrandmaGreen.Entities.EntityBehavior.html",
    "title": "Class EntityBehavior",
    "keywords": "Class EntityBehavior Inheritance Object EntityBehavior EntityBehaviorSet FollowPointerBehavior WanderBehavior Namespace : GrandmaGreen.Entities Assembly : cs.temp.dll.dll Syntax public abstract class EntityBehavior : ScriptableObject Properties prerequisites Declaration public EntityPermissions prerequisites { get; protected set; } Property Value Type Description EntityPermissions Methods PerformInstance(EntityController) Declaration public abstract IEnumerator PerformInstance(EntityController controller) Parameters Type Name Description EntityController controller Returns Type Description IEnumerator"
  },
  "api/GrandmaGreen.Entities.EntityBehaviorSet.html": {
    "href": "api/GrandmaGreen.Entities.EntityBehaviorSet.html",
    "title": "Class EntityBehaviorSet",
    "keywords": "Class EntityBehaviorSet Inheritance Object EntityBehavior EntityBehaviorSet Inherited Members EntityBehavior.prerequisites Namespace : GrandmaGreen.Entities Assembly : cs.temp.dll.dll Syntax public class EntityBehaviorSet : EntityBehavior Fields Behaviours Declaration public List<EntityBehavior> Behaviours Field Value Type Description List < EntityBehavior > Methods PerformInstance(EntityController) Declaration public override IEnumerator PerformInstance(EntityController controller) Parameters Type Name Description EntityController controller Returns Type Description IEnumerator Overrides EntityBehavior.PerformInstance(EntityController)"
  },
  "api/GrandmaGreen.Entities.EntityBehaviorSetting.html": {
    "href": "api/GrandmaGreen.Entities.EntityBehaviorSetting.html",
    "title": "Struct EntityBehaviorSetting",
    "keywords": "Struct EntityBehaviorSetting Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : GrandmaGreen.Entities Assembly : cs.temp.dll.dll Syntax public struct EntityBehaviorSetting"
  },
  "api/GrandmaGreen.Entities.EntityController.html": {
    "href": "api/GrandmaGreen.Entities.EntityController.html",
    "title": "Class EntityController",
    "keywords": "Class EntityController Inheritance Object EntityController PlayerController Namespace : GrandmaGreen.Entities Assembly : cs.temp.dll.dll Syntax public class EntityController : ScriptableObject Fields actionRange Declaration public float actionRange Field Value Type Description Single active Declaration public bool active Field Value Type Description Boolean behaviorRoutine Declaration public Coroutine behaviorRoutine Field Value Type Description Coroutine currentArea Declaration public AreaController currentArea Field Value Type Description AreaController currentBehavior Declaration public EntityBehavior currentBehavior Field Value Type Description EntityBehavior entity Declaration public GameEntity entity Field Value Type Description GameEntity permissions Declaration public EntityPermissions permissions Field Value Type Description EntityPermissions Properties stateMachine Declaration public StateMachine<EntityState> stateMachine { get; } Property Value Type Description StateMachine < EntityState > Methods CancelDestination() Declaration public virtual void CancelDestination() ClearActionQueue() Declaration public virtual void ClearActionQueue() ExcecuteEntityActions() Declaration public virtual void ExcecuteEntityActions() FindRandomDestination(Int32) Declaration public virtual float3 FindRandomDestination(int range) Parameters Type Name Description Int32 range Returns Type Description float3 GetEntityPos() Declaration public Vector3 GetEntityPos() Returns Type Description Vector3 OnDestroy() Declaration public void OnDestroy() OnGrandmaMoveToGolem(Vector3) Declaration public void OnGrandmaMoveToGolem(Vector3 pos) Parameters Type Name Description Vector3 pos PauseBehaviour() Declaration public virtual void PauseBehaviour() PauseController() Declaration public virtual void PauseController() QueueEntityAction(Action<EntityController>) Declaration public virtual void QueueEntityAction(Action<EntityController> action) Parameters Type Name Description Action < EntityController > action RegisterEntity(GameEntity) Declaration public virtual void RegisterEntity(GameEntity entity) Parameters Type Name Description GameEntity entity ResumeBehaviour() Declaration public virtual void ResumeBehaviour() SetBehavior(EntityBehavior) Declaration public virtual void SetBehavior(EntityBehavior behavior) Parameters Type Name Description EntityBehavior behavior SetDestination(Vector3) Declaration public virtual void SetDestination(Vector3 worldPos) Parameters Type Name Description Vector3 worldPos StartController() Declaration public virtual void StartController()"
  },
  "api/GrandmaGreen.Entities.EntityPermissions.html": {
    "href": "api/GrandmaGreen.Entities.EntityPermissions.html",
    "title": "Enum EntityPermissions",
    "keywords": "Enum EntityPermissions Namespace : GrandmaGreen.Entities Assembly : cs.temp.dll.dll Syntax [Flags] public enum EntityPermissions Fields Name Description Gardener Interactable None Pathfinder Speaker"
  },
  "api/GrandmaGreen.Entities.EntityState.html": {
    "href": "api/GrandmaGreen.Entities.EntityState.html",
    "title": "Enum EntityState",
    "keywords": "Enum EntityState Namespace : GrandmaGreen.Entities Assembly : cs.temp.dll.dll Syntax public enum EntityState Fields Name Description Idle MovingTo PerformingAction"
  },
  "api/GrandmaGreen.Entities.FollowPointerBehavior.html": {
    "href": "api/GrandmaGreen.Entities.FollowPointerBehavior.html",
    "title": "Class FollowPointerBehavior",
    "keywords": "Class FollowPointerBehavior Inheritance Object EntityBehavior FollowPointerBehavior Inherited Members EntityBehavior.prerequisites Namespace : GrandmaGreen.Entities Assembly : cs.temp.dll.dll Syntax public class FollowPointerBehavior : EntityBehavior Methods PerformInstance(EntityController) Declaration public override IEnumerator PerformInstance(EntityController controller) Parameters Type Name Description EntityController controller Returns Type Description IEnumerator Overrides EntityBehavior.PerformInstance(EntityController) SetPointerLocation(Vector3) Declaration public void SetPointerLocation(Vector3 position) Parameters Type Name Description Vector3 position"
  },
  "api/GrandmaGreen.Entities.GameEntity.html": {
    "href": "api/GrandmaGreen.Entities.GameEntity.html",
    "title": "Class GameEntity",
    "keywords": "Class GameEntity Core Game Entity Behavior Serves as the customer for various GG services (pathfinding, gardening, dialogue) Has no decision making logic, instead it is handled by its corresponding Entity Controller Inheritance Object GameEntity Implements IPathAgent IServiceUser < Pathfinder , IPathfinderServicer > Namespace : GrandmaGreen.Entities Assembly : cs.temp.dll.dll Syntax public class GameEntity : MonoBehaviour, IPathAgent, IServiceUser<Pathfinder, IPathfinderServicer> Fields animator Declaration public Animator animator Field Value Type Description Animator controller Declaration public EntityController controller Field Value Type Description EntityController entityStateMachine Declaration public StateMachine<EntityState> entityStateMachine Field Value Type Description StateMachine < EntityState > footsteps Declaration public SpookuleleAudio.ASoundContainer footsteps Field Value Type Description SpookuleleAudio.ASoundContainer onEntityPathEnd Declaration public Action onEntityPathEnd Field Value Type Description Action onEntityPathStart Declaration public Action onEntityPathStart Field Value Type Description Action onEntityPathStopped Declaration public Action onEntityPathStopped Field Value Type Description Action smoothFactor Declaration public float smoothFactor Field Value Type Description Single splineFollow Declaration public SplineFollow splineFollow Field Value Type Description SplineFollow velocity Declaration public Vector3 velocity Field Value Type Description Vector3 Properties isPathing Declaration public bool isPathing { get; } Property Value Type Description Boolean pathfinderServicer Declaration public IPathfinderServicer pathfinderServicer { get; } Property Value Type Description IPathfinderServicer Methods CalculatePathable(Int32) Declaration public float3[] CalculatePathable(int range) Parameters Type Name Description Int32 range Max range to path to Returns Type Description float3 [] Array of pathable destinations in the range CheckPath(int2) Declaration public float3[] CheckPath(int2 endPos) Parameters Type Name Description int2 endPos Target location Returns Type Description float3 [] Float array of path to follow. Empty if no path is found CheckPath(Vector3) Declaration public float3[] CheckPath(Vector3 worldPos) Parameters Type Name Description Vector3 worldPos Returns Type Description float3 [] CurrentPos() Declaration public virtual Vector3 CurrentPos() Returns Type Description Vector3 FixedUpdate() Declaration public void FixedUpdate() FollowPath(float3[]) Follows the given float3 path Declaration public virtual IEnumerator FollowPath(float3[] path) Parameters Type Name Description float3 [] path Returns Type Description IEnumerator InitalizeStateMachine() Declaration protected virtual void InitalizeStateMachine() OnDisable() Declaration protected virtual void OnDisable() OnEnable() Declaration protected virtual void OnEnable() StopActions() Declaration public void StopActions() Update() Declaration public void Update() Events onEntityMove Declaration public event Action<Vector3> onEntityMove Event Type Type Description Action < Vector3 > Implements IPathAgent IServiceUser<U, T>"
  },
  "api/GrandmaGreen.Entities.GolemController.html": {
    "href": "api/GrandmaGreen.Entities.GolemController.html",
    "title": "Class GolemController",
    "keywords": "Class GolemController Golem AI Controller driven by behaviour tree Inheritance Object GolemController Implements IPathAgent IServiceUser < Pathfinder , IPathfinderServicer > Namespace : GrandmaGreen.Entities Assembly : cs.temp.dll.dll Syntax public class GolemController : MonoBehaviour, IPathAgent, IServiceUser<Pathfinder, IPathfinderServicer> Fields animator Declaration public Animator animator Field Value Type Description Animator BabyRig Declaration public GameObject BabyRig Field Value Type Description GameObject delay Declaration public float delay Field Value Type Description Single golemManager Declaration public GolemManager golemManager Field Value Type Description GolemManager id Declaration public CharacterId id Field Value Type Description CharacterId isMature Declaration public bool isMature Field Value Type Description Boolean MatureRig Declaration public GameObject MatureRig Field Value Type Description GameObject onEntityActionEnd Declaration public Action<Vector3> onEntityActionEnd Field Value Type Description Action < Vector3 > onEntityActionStart Declaration public Action<Vector3> onEntityActionStart Field Value Type Description Action < Vector3 > permissions Declaration public EntityPermissions permissions Field Value Type Description EntityPermissions range Declaration public int range Field Value Type Description Int32 sfx_Footsteps Declaration public ASoundContainer sfx_Footsteps Field Value Type Description ASoundContainer smoothFactor Declaration public float smoothFactor Field Value Type Description Single splineFollow Declaration public SplineFollow splineFollow Field Value Type Description SplineFollow velocity Declaration public Vector3 velocity Field Value Type Description Vector3 Properties isPathing Declaration public bool isPathing { get; } Property Value Type Description Boolean pathfinderServicer Declaration public IPathfinderServicer pathfinderServicer { get; } Property Value Type Description IPathfinderServicer Methods CalculatePathable(Int32) Declaration public float3[] CalculatePathable(int range) Parameters Type Name Description Int32 range Max range to path to Returns Type Description float3 [] Array of pathable destinations in the range CancelPath() Declaration public virtual void CancelPath() CheckPath(int2) Declaration public float3[] CheckPath(int2 endPos) Parameters Type Name Description int2 endPos Target location Returns Type Description float3 [] Float array of path to follow. Empty if no path is found CheckPath(Vector3) Declaration public float3[] CheckPath(Vector3 worldPos) Parameters Type Name Description Vector3 worldPos Returns Type Description float3 [] CurrentPos() Declaration public virtual Vector3 CurrentPos() Returns Type Description Vector3 DisableGolem() Declaration public void DisableGolem() EnableGolem() Declaration public void EnableGolem() EvolveGolem() Declaration public void EvolveGolem() FindRandomDestination(Int32) Declaration public virtual float3 FindRandomDestination(int range) Parameters Type Name Description Int32 range Returns Type Description float3 FixedUpdate() Declaration public void FixedUpdate() FollowPath(float3[]) Follows the given float3 path Declaration public virtual IEnumerator FollowPath(float3[] path) Parameters Type Name Description float3 [] path Returns Type Description IEnumerator getActiveRig() Declaration public GameObject getActiveRig() Returns Type Description GameObject GetGolemBox() Declaration public Bounds GetGolemBox() Returns Type Description Bounds GetGolemID() Declaration public ushort GetGolemID() Returns Type Description UInt16 OnGolemEvolve(UInt16) Declaration public void OnGolemEvolve(ushort golemID) Parameters Type Name Description UInt16 golemID OnGolemSelectRelease() Declaration public void OnGolemSelectRelease() OnGolemTapEnd() Declaration public void OnGolemTapEnd() OnGolemTapped() Declaration public void OnGolemTapped() RegisterManager(GolemManager) Declaration public void RegisterManager(GolemManager mgmr) Parameters Type Name Description GolemManager mgmr SetDestination(Vector3) Declaration public virtual void SetDestination(Vector3 worldPos) Parameters Type Name Description Vector3 worldPos StopBehaviorTree() Declaration public void StopBehaviorTree() Update() Declaration public void Update() UpdateDraggingState(Boolean) Declaration public void UpdateDraggingState(bool state) Parameters Type Name Description Boolean state UpdateInteractState() Declaration public void UpdateInteractState() UpdateMatureState(Boolean) Declaration public void UpdateMatureState(bool isGrowUp) Parameters Type Name Description Boolean isGrowUp UpdateTaskState(Int32) Declaration public void UpdateTaskState(int happinessValue) Parameters Type Name Description Int32 happinessValue Events onEntityMove Declaration public event Action<Vector3> onEntityMove Event Type Type Description Action < Vector3 > Implements IPathAgent IServiceUser<U, T>"
  },
  "api/GrandmaGreen.Entities.GolemCrowdController.html": {
    "href": "api/GrandmaGreen.Entities.GolemCrowdController.html",
    "title": "Class GolemCrowdController",
    "keywords": "Class GolemCrowdController Inheritance Object GolemCrowdController Namespace : GrandmaGreen.Entities Assembly : cs.temp.dll.dll Syntax public class GolemCrowdController : MonoBehaviour Fields gardenArea Declaration public GardenAreaController gardenArea Field Value Type Description GardenAreaController golemManager Declaration public GolemManager golemManager Field Value Type Description GolemManager happinessChangeValue Declaration public int happinessChangeValue Field Value Type Description Int32 pointerState Declaration public PointerState pointerState Field Value Type Description PointerState theGolem Declaration public CharacterId theGolem Field Value Type Description CharacterId value Declaration public int value Field Value Type Description Int32 Methods AssignGolemAction(UInt16) Declaration public void AssignGolemAction(ushort id) Parameters Type Name Description UInt16 id Awake() Declaration public void Awake() EnterDragGolem(GameObject) Declaration public void EnterDragGolem(GameObject golemObject) Parameters Type Name Description GameObject golemObject GolemDoAction(Int32) Declaration public void GolemDoAction(int value) Parameters Type Name Description Int32 value GolemDoActionOnReturn(Int32) Declaration public void GolemDoActionOnReturn(int value) Parameters Type Name Description Int32 value OnDestroy() Declaration public void OnDestroy() SpawnGolem() Declaration public void SpawnGolem() UpdateGolemHappiness() Declaration public void UpdateGolemHappiness() WaterGolem() Declaration public void WaterGolem()"
  },
  "api/GrandmaGreen.Entities.GolemData.html": {
    "href": "api/GrandmaGreen.Entities.GolemData.html",
    "title": "Class GolemData",
    "keywords": "Class GolemData Inheritance Object GolemData Namespace : GrandmaGreen.Entities Assembly : cs.temp.dll.dll Syntax public class GolemData : ScriptableObject Fields golemID Declaration public CharacterId golemID Field Value Type Description CharacterId golemName Declaration public string golemName Field Value Type Description String info Declaration public string info Field Value Type Description String spawnChance Declaration public int spawnChance Field Value Type Description Int32"
  },
  "api/GrandmaGreen.Entities.GolemInputHandler.html": {
    "href": "api/GrandmaGreen.Entities.GolemInputHandler.html",
    "title": "Class GolemInputHandler",
    "keywords": "Class GolemInputHandler Inheritance Object GolemInputHandler Namespace : GrandmaGreen.Entities Assembly : cs.temp.dll.dll Syntax public class GolemInputHandler : MonoBehaviour"
  },
  "api/GrandmaGreen.Entities.GolemManager.html": {
    "href": "api/GrandmaGreen.Entities.GolemManager.html",
    "title": "Class GolemManager",
    "keywords": "Class GolemManager Inheritance Object GolemManager Namespace : GrandmaGreen.Entities Assembly : cs.temp.dll.dll Syntax public class GolemManager : ObjectSaver Fields golemHappinessThreshold Declaration public int golemHappinessThreshold Field Value Type Description Int32 GolemNum Declaration public int GolemNum Field Value Type Description Int32 golemPrefabs Declaration public List<GameObject> golemPrefabs Field Value Type Description List < GameObject > golemStateTable Declaration public GolemState[] golemStateTable Field Value Type Description GolemState [] golemWorkTimer Declaration public TimeLayer golemWorkTimer Field Value Type Description TimeLayer IsSpawnDemoGolem Declaration public bool IsSpawnDemoGolem Field Value Type Description Boolean playerController Declaration public EntityController playerController Field Value Type Description EntityController Methods CreateGolem(UInt16) Declaration public GolemState CreateGolem(ushort id) Parameters Type Name Description UInt16 id Returns Type Description GolemState GetPlayerPos() Declaration public Vector3 GetPlayerPos() Returns Type Description Vector3 Initialize() Declaration public void Initialize() LoadGolemData() Declaration public void LoadGolemData() LoadGolemToScene(Int32, GolemState, Vector3) Load Golem from save file Declaration public void LoadGolemToScene(int tableIndex, GolemState state, Vector3 pos) Parameters Type Name Description Int32 tableIndex GolemState state Vector3 pos OnDestroy() Declaration public void OnDestroy() OnGolemHappinessChanged(UInt16, Int32) Declaration public void OnGolemHappinessChanged(ushort id, int val) Parameters Type Name Description UInt16 id Int32 val OnGolemSpawn(UInt16, Vector3) Spawn Golem when harvest Declaration public void OnGolemSpawn(ushort id, Vector3 pos) Parameters Type Name Description UInt16 id Vector3 pos SaveGolemData() Declaration public void SaveGolemData() TriggerDeleteData() Declaration public void TriggerDeleteData() UpdateGolemTask(UInt16) Declaration public void UpdateGolemTask(ushort id) Parameters Type Name Description UInt16 id UpdateTaskCell(UInt16, Vector3Int) Declaration public void UpdateTaskCell(ushort id, Vector3Int cell) Parameters Type Name Description UInt16 id Vector3Int cell"
  },
  "api/GrandmaGreen.Entities.GolemState.html": {
    "href": "api/GrandmaGreen.Entities.GolemState.html",
    "title": "Struct GolemState",
    "keywords": "Struct GolemState Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : GrandmaGreen.Entities Assembly : cs.temp.dll.dll Syntax [Serializable] public struct GolemState Fields assignedCell Declaration public Vector3Int assignedCell Field Value Type Description Vector3Int assignedWatering Declaration public bool assignedWatering Field Value Type Description Boolean golemID Declaration public CharacterId golemID Field Value Type Description CharacterId happiness Declaration public int happiness Field Value Type Description Int32 isMature Declaration public bool isMature Field Value Type Description Boolean isSpawned Declaration public bool isSpawned Field Value Type Description Boolean isTravelling Declaration public bool isTravelling Field Value Type Description Boolean"
  },
  "api/GrandmaGreen.Entities.html": {
    "href": "api/GrandmaGreen.Entities.html",
    "title": "Namespace GrandmaGreen.Entities",
    "keywords": "Namespace GrandmaGreen.Entities Classes EntityBehavior EntityBehaviorSet EntityController FollowPointerBehavior GameEntity Core Game Entity Behavior Serves as the customer for various GG services (pathfinding, gardening, dialogue) Has no decision making logic, instead it is handled by its corresponding Entity Controller GolemController Golem AI Controller driven by behaviour tree GolemCrowdController GolemData GolemInputHandler GolemManager PlayerController SpriteOcclusionHandler WanderBehavior Structs EntityBehaviorSetting GolemState Enums EntityPermissions EntityState"
  },
  "api/GrandmaGreen.Entities.PlayerController.html": {
    "href": "api/GrandmaGreen.Entities.PlayerController.html",
    "title": "Class PlayerController",
    "keywords": "Class PlayerController Inheritance Object EntityController PlayerController Inherited Members EntityController.permissions EntityController.currentBehavior EntityController.actionRange EntityController.entity EntityController.currentArea EntityController.stateMachine EntityController.active EntityController.behaviorRoutine EntityController.RegisterEntity(GameEntity) EntityController.OnDestroy() EntityController.OnGrandmaMoveToGolem(Vector3) EntityController.GetEntityPos() EntityController.StartController() EntityController.PauseController() EntityController.CancelDestination() EntityController.SetDestination(Vector3) EntityController.FindRandomDestination(Int32) EntityController.SetBehavior(EntityBehavior) EntityController.PauseBehaviour() EntityController.ResumeBehaviour() EntityController.QueueEntityAction(Action<EntityController>) EntityController.ClearActionQueue() EntityController.ExcecuteEntityActions() Namespace : GrandmaGreen.Entities Assembly : cs.temp.dll.dll Syntax public class PlayerController : EntityController"
  },
  "api/GrandmaGreen.Entities.SpriteOcclusionHandler.html": {
    "href": "api/GrandmaGreen.Entities.SpriteOcclusionHandler.html",
    "title": "Class SpriteOcclusionHandler",
    "keywords": "Class SpriteOcclusionHandler Inheritance Object SpriteOcclusionHandler Namespace : GrandmaGreen.Entities Assembly : cs.temp.dll.dll Syntax public class SpriteOcclusionHandler : MonoBehaviour Fields BoundingRect Declaration public Rect BoundingRect Field Value Type Description Rect GrandmaController Declaration public EntityController GrandmaController Field Value Type Description EntityController Occlude Declaration public bool Occlude Field Value Type Description Boolean"
  },
  "api/GrandmaGreen.Entities.WanderBehavior.html": {
    "href": "api/GrandmaGreen.Entities.WanderBehavior.html",
    "title": "Class WanderBehavior",
    "keywords": "Class WanderBehavior Inheritance Object EntityBehavior WanderBehavior Inherited Members EntityBehavior.prerequisites Namespace : GrandmaGreen.Entities Assembly : cs.temp.dll.dll Syntax public class WanderBehavior : EntityBehavior Fields delay Declaration public float delay Field Value Type Description Single range Declaration public int range Field Value Type Description Int32 Methods PerformInstance(EntityController) Declaration public override IEnumerator PerformInstance(EntityController controller) Parameters Type Name Description EntityController controller Returns Type Description IEnumerator Overrides EntityBehavior.PerformInstance(EntityController)"
  },
  "api/GrandmaGreen.EventManager.html": {
    "href": "api/GrandmaGreen.EventManager.html",
    "title": "Class EventManager",
    "keywords": "Class EventManager Inheritance Object EventManager Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class EventManager : MonoBehaviour Fields instance Declaration public static EventManager instance Field Value Type Description EventManager Methods HandleEVENT_CLOSE_HUD() Declaration public void HandleEVENT_CLOSE_HUD() HandleEVENT_CLOSE_HUD_ANIMATED() Declaration public void HandleEVENT_CLOSE_HUD_ANIMATED() HandleEVENT_CUSTOMIZATION_ATTEMPT(Boolean) Declaration public void HandleEVENT_CUSTOMIZATION_ATTEMPT(bool successful) Parameters Type Name Description Boolean successful HandleEVENT_DELETE_SAVE() Declaration public void HandleEVENT_DELETE_SAVE() HandleEVENT_GOLEM_ASSIGN_TASK(UInt16) Declaration public void HandleEVENT_GOLEM_ASSIGN_TASK(ushort id) Parameters Type Name Description UInt16 id HandleEVENT_GOLEM_DISABLE() Declaration public void HandleEVENT_GOLEM_DISABLE() HandleEVENT_GOLEM_DO_TASK(Int32) Declaration public void HandleEVENT_GOLEM_DO_TASK(int happinessValue) Parameters Type Name Description Int32 happinessValue HandleEVENT_GOLEM_DRAG(GameObject) Declaration public void HandleEVENT_GOLEM_DRAG(GameObject obj) Parameters Type Name Description GameObject obj HandleEVENT_GOLEM_ENABLE() Declaration public void HandleEVENT_GOLEM_ENABLE() HandleEVENT_GOLEM_EVOLVE(UInt16) Declaration public void HandleEVENT_GOLEM_EVOLVE(ushort id) Parameters Type Name Description UInt16 id HandleEVENT_GOLEM_GRANDMA_MOVE_TO(Vector3) Declaration public void HandleEVENT_GOLEM_GRANDMA_MOVE_TO(Vector3 pos) Parameters Type Name Description Vector3 pos HandleEVENT_GOLEM_HAPPINESS_UPDATE(UInt16, Int32) Declaration public void HandleEVENT_GOLEM_HAPPINESS_UPDATE(ushort id, int val) Parameters Type Name Description UInt16 id Int32 val HandleEVENT_GOLEM_RELEASE_SELECTED() Declaration public void HandleEVENT_GOLEM_RELEASE_SELECTED() HandleEVENT_GOLEM_SPAWN(UInt16, Vector3) Declaration public void HandleEVENT_GOLEM_SPAWN(ushort id, Vector3 pos) Parameters Type Name Description UInt16 id Vector3 pos HandleEVENT_INVENTORY_ADD_DECOR(UInt16) Declaration public void HandleEVENT_INVENTORY_ADD_DECOR(ushort id) Parameters Type Name Description UInt16 id HandleEVENT_INVENTORY_ADD_MONEY(Int32) Declaration public void HandleEVENT_INVENTORY_ADD_MONEY(int money) Parameters Type Name Description Int32 money HandleEVENT_INVENTORY_ADD_PLANT(UInt16, Genotype) Declaration public void HandleEVENT_INVENTORY_ADD_PLANT(ushort id, Genotype genotype) Parameters Type Name Description UInt16 id Genotype genotype HandleEVENT_INVENTORY_ADD_SEED(UInt16, Genotype) Declaration public void HandleEVENT_INVENTORY_ADD_SEED(ushort id, Genotype genotype) Parameters Type Name Description UInt16 id Genotype genotype HandleEVENT_INVENTORY_ADD_TOOL(UInt16) Declaration public void HandleEVENT_INVENTORY_ADD_TOOL(ushort id) Parameters Type Name Description UInt16 id HandleEVENT_INVENTORY_CUSTOMIZATION_START(IInventoryItem) Declaration public void HandleEVENT_INVENTORY_CUSTOMIZATION_START(IInventoryItem item) Parameters Type Name Description IInventoryItem item HandleEVENT_INVENTORY_GET_MONEY() Declaration public int HandleEVENT_INVENTORY_GET_MONEY() Returns Type Description Int32 HandleEVENT_INVENTORY_GET_SEED_COUNT(UInt16, Genotype) Declaration public int? HandleEVENT_INVENTORY_GET_SEED_COUNT(ushort id, Genotype genotype) Parameters Type Name Description UInt16 id Genotype genotype Returns Type Description Nullable < Int32 > HandleEVENT_INVENTORY_OPEN() Declaration public void HandleEVENT_INVENTORY_OPEN() HandleEVENT_INVENTORY_REMOVE_DECOR(UInt16) Declaration public void HandleEVENT_INVENTORY_REMOVE_DECOR(ushort id) Parameters Type Name Description UInt16 id HandleEVENT_INVENTORY_REMOVE_MONEY(Int32) Declaration public void HandleEVENT_INVENTORY_REMOVE_MONEY(int money) Parameters Type Name Description Int32 money HandleEVENT_INVENTORY_REMOVE_PLANT(UInt16, Genotype) Declaration public void HandleEVENT_INVENTORY_REMOVE_PLANT(ushort id, Genotype genotype) Parameters Type Name Description UInt16 id Genotype genotype HandleEVENT_INVENTORY_REMOVE_SEED(UInt16, Genotype) Declaration public void HandleEVENT_INVENTORY_REMOVE_SEED(ushort id, Genotype genotype) Parameters Type Name Description UInt16 id Genotype genotype HandleEVENT_INVENTORY_REMOVE_TOOL(UInt16) Declaration public void HandleEVENT_INVENTORY_REMOVE_TOOL(ushort id) Parameters Type Name Description UInt16 id HandleEVENT_MANUAL_SAVE() Declaration public void HandleEVENT_MANUAL_SAVE() HandleEVENT_OPEN_HUD() Declaration public void HandleEVENT_OPEN_HUD() HandleEVENT_OPEN_HUD_ANIMATED() Declaration public void HandleEVENT_OPEN_HUD_ANIMATED() HandleEVENT_PLANT_UPDATE(Int32, Vector3Int) Declaration public void HandleEVENT_PLANT_UPDATE(int areaIndex, Vector3Int cell) Parameters Type Name Description Int32 areaIndex Vector3Int cell HandleEVENT_SYNC_AUTOSAVE() Declaration public void HandleEVENT_SYNC_AUTOSAVE() HandleEVENT_TOGGLE_CUSTOMIZATION_MODE() Declaration public void HandleEVENT_TOGGLE_CUSTOMIZATION_MODE() HandleEVENT_UPDATE_MONEY_DISPLAY() Declaration public void HandleEVENT_UPDATE_MONEY_DISPLAY() HandleEVENT_UPDATE_PLANT_COLLECTIONS(IInventoryItem) Declaration public void HandleEVENT_UPDATE_PLANT_COLLECTIONS(IInventoryItem item) Parameters Type Name Description IInventoryItem item HandleEVENT_WATER_PLANT(Vector3Int) Declaration public void HandleEVENT_WATER_PLANT(Vector3Int cell) Parameters Type Name Description Vector3Int cell Events EVENT_ASSIGN_TASK Declaration public event Action<ushort> EVENT_ASSIGN_TASK Event Type Type Description Action < UInt16 > EVENT_CLOSE_HUD Declaration public event Action EVENT_CLOSE_HUD Event Type Type Description Action EVENT_CLOSE_HUD_ANIMATED Declaration public event Action EVENT_CLOSE_HUD_ANIMATED Event Type Type Description Action EVENT_CUSTOMIZATION_ATTEMPT Declaration public event Action<bool> EVENT_CUSTOMIZATION_ATTEMPT Event Type Type Description Action < Boolean > EVENT_DELETE_SAVE Declaration public event Action EVENT_DELETE_SAVE Event Type Type Description Action EVENT_GOLEM_DISABLE Declaration public event Action EVENT_GOLEM_DISABLE Event Type Type Description Action EVENT_GOLEM_DO_TASK Declaration public event Action<int> EVENT_GOLEM_DO_TASK Event Type Type Description Action < Int32 > EVENT_GOLEM_DRAG Declaration public event Action<GameObject> EVENT_GOLEM_DRAG Event Type Type Description Action < GameObject > EVENT_GOLEM_ENABLE Declaration public event Action EVENT_GOLEM_ENABLE Event Type Type Description Action EVENT_GOLEM_EVOLVE Declaration public event Action<ushort> EVENT_GOLEM_EVOLVE Event Type Type Description Action < UInt16 > EVENT_GOLEM_GRANDMA_MOVE_TO Declaration public event Action<Vector3> EVENT_GOLEM_GRANDMA_MOVE_TO Event Type Type Description Action < Vector3 > EVENT_GOLEM_HAPPINESS_UPDATE Declaration public event Action<ushort, int> EVENT_GOLEM_HAPPINESS_UPDATE Event Type Type Description Action < UInt16 , Int32 > EVENT_GOLEM_RELEASE_SELECTED Declaration public event Action EVENT_GOLEM_RELEASE_SELECTED Event Type Type Description Action EVENT_GOLEM_SPAWN Declaration public event Action<ushort, Vector3> EVENT_GOLEM_SPAWN Event Type Type Description Action < UInt16 , Vector3 > EVENT_INVENTORY_ADD_DECOR Declaration public event Action<ushort> EVENT_INVENTORY_ADD_DECOR Event Type Type Description Action < UInt16 > EVENT_INVENTORY_ADD_MONEY Declaration public event Action<int> EVENT_INVENTORY_ADD_MONEY Event Type Type Description Action < Int32 > EVENT_INVENTORY_ADD_PLANT Declaration public event Action<ushort, Genotype> EVENT_INVENTORY_ADD_PLANT Event Type Type Description Action < UInt16 , Genotype > EVENT_INVENTORY_ADD_SEED Declaration public event Action<ushort, Genotype> EVENT_INVENTORY_ADD_SEED Event Type Type Description Action < UInt16 , Genotype > EVENT_INVENTORY_ADD_TOOL Declaration public event Action<ushort> EVENT_INVENTORY_ADD_TOOL Event Type Type Description Action < UInt16 > EVENT_INVENTORY_CUSTOMIZATION_START Declaration public event Action<IInventoryItem> EVENT_INVENTORY_CUSTOMIZATION_START Event Type Type Description Action < IInventoryItem > EVENT_INVENTORY_GET_MONEY Declaration public event Func<int> EVENT_INVENTORY_GET_MONEY Event Type Type Description Func < Int32 > EVENT_INVENTORY_GET_SEED_COUNT Declaration public event Func<ushort, Genotype, int> EVENT_INVENTORY_GET_SEED_COUNT Event Type Type Description Func < UInt16 , Genotype , Int32 > EVENT_INVENTORY_OPEN Declaration public event Action EVENT_INVENTORY_OPEN Event Type Type Description Action EVENT_INVENTORY_REMOVE_DECOR Declaration public event Action<ushort> EVENT_INVENTORY_REMOVE_DECOR Event Type Type Description Action < UInt16 > EVENT_INVENTORY_REMOVE_MONEY Declaration public event Action<int> EVENT_INVENTORY_REMOVE_MONEY Event Type Type Description Action < Int32 > EVENT_INVENTORY_REMOVE_PLANT Declaration public event Action<ushort, Genotype> EVENT_INVENTORY_REMOVE_PLANT Event Type Type Description Action < UInt16 , Genotype > EVENT_INVENTORY_REMOVE_SEED Declaration public event Action<ushort, Genotype> EVENT_INVENTORY_REMOVE_SEED Event Type Type Description Action < UInt16 , Genotype > EVENT_INVENTORY_REMOVE_TOOL Declaration public event Action<ushort> EVENT_INVENTORY_REMOVE_TOOL Event Type Type Description Action < UInt16 > EVENT_MANUAL_SAVE Declaration public event Action EVENT_MANUAL_SAVE Event Type Type Description Action EVENT_OPEN_HUD Declaration public event Action EVENT_OPEN_HUD Event Type Type Description Action EVENT_OPEN_HUD_ANIMATED Declaration public event Action EVENT_OPEN_HUD_ANIMATED Event Type Type Description Action EVENT_PLANT_UPDATE Declaration public event Action<int, Vector3Int> EVENT_PLANT_UPDATE Event Type Type Description Action < Int32 , Vector3Int > EVENT_SYNC_AUTOSAVE Declaration public event Action EVENT_SYNC_AUTOSAVE Event Type Type Description Action EVENT_TOGGLE_CUSTOMIZATION_MODE Declaration public event Action EVENT_TOGGLE_CUSTOMIZATION_MODE Event Type Type Description Action EVENT_UPDATE_MONEY_DISPLAY Declaration public event Action EVENT_UPDATE_MONEY_DISPLAY Event Type Type Description Action EVENT_UPDATE_PLANT_COLLECTIONS Declaration public event Action<IInventoryItem> EVENT_UPDATE_PLANT_COLLECTIONS Event Type Type Description Action < IInventoryItem > EVENT_WATER_PLANT Declaration public event Action<Vector3Int> EVENT_WATER_PLANT Event Type Type Description Action < Vector3Int >"
  },
  "api/GrandmaGreen.GamePortalTile.html": {
    "href": "api/GrandmaGreen.GamePortalTile.html",
    "title": "Class GamePortalTile",
    "keywords": "Class GamePortalTile Inheritance Object GamePortalTile Implements IGameTile Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class GamePortalTile : Tile, IGameTile Fields exitState Declaration public AreaExitState exitState Field Value Type Description AreaExitState loader Declaration public GrandmaGreenLevelLoader loader Field Value Type Description GrandmaGreenLevelLoader portalDirection Declaration public Direction portalDirection Field Value Type Description Direction toLoad Declaration public SCENES toLoad Field Value Type Description SCENES Methods DoTileAction() Declaration public virtual void DoTileAction() DoTileAction(EntityController) Declaration public virtual void DoTileAction(EntityController entity) Parameters Type Name Description EntityController entity Implements IGameTile"
  },
  "api/GrandmaGreen.GameScenePortal.html": {
    "href": "api/GrandmaGreen.GameScenePortal.html",
    "title": "Class GameScenePortal",
    "keywords": "Class GameScenePortal Inheritance Object GameScenePortal Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class GameScenePortal : MonoBehaviour Fields toLoad Declaration public SCENES toLoad Field Value Type Description SCENES"
  },
  "api/GrandmaGreen.GameSettingsData.html": {
    "href": "api/GrandmaGreen.GameSettingsData.html",
    "title": "Class GameSettingsData",
    "keywords": "Class GameSettingsData Inheritance Object GameSettingsData Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class GameSettingsData : ScriptableObject Fields batterySaverParameter Declaration public static readonly string batterySaverParameter Field Value Type Description String masterVolumeParameter Declaration public static readonly string masterVolumeParameter Field Value Type Description String musicVolumeParameter Declaration public static readonly string musicVolumeParameter Field Value Type Description String sfxVolumeParameter Declaration public static readonly string sfxVolumeParameter Field Value Type Description String Properties Current Declaration public SettingsSet Current { get; } Property Value Type Description SettingsSet muted Declaration public bool muted { get; } Property Value Type Description Boolean Methods DisableBatterySaverMode() Declaration public void DisableBatterySaverMode() EnableBatterySaverMode() Declaration public void EnableBatterySaverMode() LoadSettings() Declaration public void LoadSettings() MuteMasterVolume() Declaration public void MuteMasterVolume() SaveSettings() Declaration public void SaveSettings() SetBatterySaverMode(Boolean) Declaration public void SetBatterySaverMode(bool value) Parameters Type Name Description Boolean value SetMasterVolume(Single) Declaration public void SetMasterVolume(float value) Parameters Type Name Description Single value SetMusicVolume(Single) Declaration public void SetMusicVolume(float value) Parameters Type Name Description Single value SetSFXVolume(Single) Declaration public void SetSFXVolume(float value) Parameters Type Name Description Single value UnmuteMasterVolume() Declaration public void UnmuteMasterVolume()"
  },
  "api/GrandmaGreen.GameSystemDummy.html": {
    "href": "api/GrandmaGreen.GameSystemDummy.html",
    "title": "Class GameSystemDummy",
    "keywords": "Class GameSystemDummy Inheritance Object GameSystemDummy Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class GameSystemDummy : MonoBehaviour Methods AddDecorItem() Declaration public void AddDecorItem() AddSampleSeedToInventory() Declaration public void AddSampleSeedToInventory() AddTrait() Declaration public void AddTrait() RemoveSampleSeedFromInventory() Declaration public void RemoveSampleSeedFromInventory() ResourcesLoadTest() Declaration public void ResourcesLoadTest() SampleTest() Declaration public int SampleTest() Returns Type Description Int32"
  },
  "api/GrandmaGreen.Garden.DecorState.html": {
    "href": "api/GrandmaGreen.Garden.DecorState.html",
    "title": "Struct DecorState",
    "keywords": "Struct DecorState Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : GrandmaGreen.Garden Assembly : cs.temp.dll.dll Syntax [Serializable] public struct DecorState Fields ID Declaration public DecorationId ID Field Value Type Description DecorationId x Declaration public float x Field Value Type Description Single y Declaration public float y Field Value Type Description Single"
  },
  "api/GrandmaGreen.Garden.GardenAreaController.html": {
    "href": "api/GrandmaGreen.Garden.GardenAreaController.html",
    "title": "Class GardenAreaController",
    "keywords": "Class GardenAreaController Responsible for functionality of a single Garden screen Inheritance Object AreaController GardenAreaController Inherited Members AreaController.areaServicer AreaController.tilemap AreaController.pathfinder AreaController.areaBounds AreaController.playerController AreaController.tileStore AreaController.enterencePoints AreaController.areaIndex AreaController.lastSelectedPosition AreaController.lastDraggedPosition AreaController.lastSelectedCell AreaController.lastSelectedTile AreaController.onTilemapSelection AreaController.onActivation AreaController.onDeactivation AreaController.OnValidate() AreaController.Activate() AreaController.Deactivate() AreaController.AreaSelection(Vector3) AreaController.AreaDragged(Vector3) AreaController.ParseTilemap() AreaController.BakeNavGrid() Namespace : GrandmaGreen.Garden Assembly : cs.temp.dll.dll Syntax public class GardenAreaController : AreaController Fields customizationCamera Declaration public Cinemachine.CinemachineVirtualCamera customizationCamera Field Value Type Description Cinemachine.CinemachineVirtualCamera decorList Declaration public List<Collider> decorList Field Value Type Description List < Collider > defaultPlantPrefab Declaration public GameObject defaultPlantPrefab Field Value Type Description GameObject DropRate Declaration public float DropRate Field Value Type Description Single FertilizationBonus Declaration public float FertilizationBonus Field Value Type Description Single gardenCustomizer Declaration public GardenCustomizer gardenCustomizer Field Value Type Description GardenCustomizer gardenManager Declaration public GardenManager gardenManager Field Value Type Description GardenManager gardenVFX Declaration public GardenVFX gardenVFX Field Value Type Description GardenVFX m_inCustomizationMode Declaration public bool m_inCustomizationMode Field Value Type Description Boolean plantListDebug Declaration public List<PlantState> plantListDebug Field Value Type Description List < PlantState > plantPrefabLookup Declaration public Dictionary<Vector3Int, GameObject> plantPrefabLookup Field Value Type Description Dictionary < Vector3Int , GameObject > playerTools Declaration public PlayerToolData playerTools Field Value Type Description PlayerToolData wiltedPlantList Declaration public List<PlantState> wiltedPlantList Field Value Type Description List < PlantState > Methods AddGardenDecorItem(GardenDecorItem) Declaration public void AddGardenDecorItem(GardenDecorItem decorItem) Parameters Type Name Description GardenDecorItem decorItem Awake() Declaration public override void Awake() Overrides AreaController.Awake() ChangeGardenTile(Vector3Int, TileData) Declaration public void ChangeGardenTile(Vector3Int position, TileData newTile) Parameters Type Name Description Vector3Int position TileData newTile ChangeGardenTileToGrass(Vector3Int) Declaration public void ChangeGardenTileToGrass(Vector3Int position) Parameters Type Name Description Vector3Int position ChangeGardenTileToPlot_Empty(Vector3Int) Declaration public void ChangeGardenTileToPlot_Empty(Vector3Int position) Parameters Type Name Description Vector3Int position ChangeGardenTileToPlot_Occupied(Vector3Int) Declaration public void ChangeGardenTileToPlot_Occupied(Vector3Int position) Parameters Type Name Description Vector3Int position ClearPlants() Declaration public void ClearPlants() CompleteDecorCustomization(Boolean) Declaration public void CompleteDecorCustomization(bool successful) Parameters Type Name Description Boolean successful CreatePlant(PlantId, Genotype, Vector3Int, Int32) Declaration public void CreatePlant(PlantId seed, Genotype genotype, Vector3Int cell, int growthStage = 0) Parameters Type Name Description PlantId seed Genotype genotype Vector3Int cell Int32 growthStage CrossBreedTest() Declaration public void CrossBreedTest() DestroyPlant(Vector3Int) Declaration public void DestroyPlant(Vector3Int cell) Parameters Type Name Description Vector3Int cell DestroyPlantPrefab(Vector3Int) Declaration public void DestroyPlantPrefab(Vector3Int cell) Parameters Type Name Description Vector3Int cell EnterCustomizationMode() Declaration public void EnterCustomizationMode() ExitCustomizationMode() Declaration public void ExitCustomizationMode() FertilizePlant(Vector3Int) Declaration public void FertilizePlant(Vector3Int cell) Parameters Type Name Description Vector3Int cell FlowerTest() Declaration public void FlowerTest() FruitTest() Declaration public void FruitTest() GardenTileSelected(Vector3Int) Declaration public void GardenTileSelected(Vector3Int gridPos) Parameters Type Name Description Vector3Int gridPos GenotypeSpriteTest() Declaration public void GenotypeSpriteTest() GetBreedingCandidates(Vector3Int) Declaration public List<PlantState> GetBreedingCandidates(Vector3Int cell) Parameters Type Name Description Vector3Int cell Returns Type Description List < PlantState > GetNeighbors(Vector3Int) Declaration public List<PlantState> GetNeighbors(Vector3Int cell) Parameters Type Name Description Vector3Int cell Returns Type Description List < PlantState > GetPlant(Vector3Int) Declaration public PlantState GetPlant(Vector3Int cell) Parameters Type Name Description Vector3Int cell Returns Type Description PlantState HarvestPlant(Vector3Int) Declaration public bool HarvestPlant(Vector3Int cell) Parameters Type Name Description Vector3Int cell Returns Type Description Boolean IdTypeTest() Declaration public void IdTypeTest() IncrementTimer(Int32) Declaration public void IncrementTimer(int value) Parameters Type Name Description Int32 value InspectPlants() Declaration public void InspectPlants() InstantiatePlantPrefab(Vector3Int, PlantId, Int32) Declaration public void InstantiatePlantPrefab(Vector3Int cell, PlantId id, int growthStage) Parameters Type Name Description Vector3Int cell PlantId id Int32 growthStage PlayParticles() Declaration public void PlayParticles() ProcessAreaInput(InteractionEventData) Declaration public override void ProcessAreaInput(InteractionEventData eventData) Parameters Type Name Description InteractionEventData eventData Overrides AreaController.ProcessAreaInput(InteractionEventData) RemoveDecorItemFromGarden(GardenDecorItem) Declaration public void RemoveDecorItemFromGarden(GardenDecorItem decorItem) Parameters Type Name Description GardenDecorItem decorItem ResetGarden() Declaration public void ResetGarden() StartDecorCustomization(GardenDecorItem) Declaration public void StartDecorCustomization(GardenDecorItem decorItem) Parameters Type Name Description GardenDecorItem decorItem StartDecorCustomization(IInventoryItem) Declaration public void StartDecorCustomization(IInventoryItem item) Parameters Type Name Description IInventoryItem item ToggleCustomizationMode() Declaration public void ToggleCustomizationMode() ToggleGrowthTimer() Declaration public void ToggleGrowthTimer() UpdateGardenDecorItem(GardenDecorItem) Declaration public void UpdateGardenDecorItem(GardenDecorItem decorItem) Parameters Type Name Description GardenDecorItem decorItem UpdateSprite(Vector3Int) Declaration public void UpdateSprite(Vector3Int cell) Parameters Type Name Description Vector3Int cell UpdateTile(Vector3Int) Declaration public void UpdateTile(Vector3Int cell) Parameters Type Name Description Vector3Int cell VegetableTest() Declaration public void VegetableTest() WaterPlant(Vector3Int) Declaration public void WaterPlant(Vector3Int cell) Parameters Type Name Description Vector3Int cell Events onGardenTick Declaration public event Action onGardenTick Event Type Type Description Action"
  },
  "api/GrandmaGreen.Garden.GardenCustomizer.html": {
    "href": "api/GrandmaGreen.Garden.GardenCustomizer.html",
    "title": "Class GardenCustomizer",
    "keywords": "Class GardenCustomizer Inheritance Object GardenCustomizer Namespace : GrandmaGreen.Garden Assembly : cs.temp.dll.dll Syntax public class GardenCustomizer : ScriptableObject Methods CheckValidState(BoxCollider, GardenAreaController) Declaration public bool CheckValidState(BoxCollider decorItem, GardenAreaController decorArea) Parameters Type Name Description BoxCollider decorItem GardenAreaController decorArea Returns Type Description Boolean EnterDecorCustomizationState(GardenAreaController, GardenDecorItem) Declaration public void EnterDecorCustomizationState(GardenAreaController decorArea, GardenDecorItem decorItem) Parameters Type Name Description GardenAreaController decorArea GardenDecorItem decorItem GenerateDecorItem() Declaration public GardenDecorItem GenerateDecorItem() Returns Type Description GardenDecorItem GenerateDecorItem(DecorationId) Declaration public GardenDecorItem GenerateDecorItem(DecorationId decorID) Parameters Type Name Description DecorationId decorID Returns Type Description GardenDecorItem"
  },
  "api/GrandmaGreen.Garden.GardenDecorItem.html": {
    "href": "api/GrandmaGreen.Garden.GardenDecorItem.html",
    "title": "Class GardenDecorItem",
    "keywords": "Class GardenDecorItem Inheritance Object GardenDecorItem Namespace : GrandmaGreen.Garden Assembly : cs.temp.dll.dll Syntax public class GardenDecorItem : MonoBehaviour Fields boundsCollider Declaration public BoxCollider boundsCollider Field Value Type Description BoxCollider decorID Declaration public DecorationId decorID Field Value Type Description DecorationId interactable Declaration public Collider interactable Field Value Type Description Collider onInteraction Declaration public Action<GardenDecorItem> onInteraction Field Value Type Description Action < GardenDecorItem > sprite Declaration public SpriteRenderer sprite Field Value Type Description SpriteRenderer Methods DisableInteraction() Declaration public void DisableInteraction() EnableInteraction() Declaration public void EnableInteraction() SendInteractionAction() Declaration public void SendInteractionAction() ToggleInteraction() Declaration public void ToggleInteraction()"
  },
  "api/GrandmaGreen.Garden.GardenManager.html": {
    "href": "api/GrandmaGreen.Garden.GardenManager.html",
    "title": "Class GardenManager",
    "keywords": "Class GardenManager Inheritance Object GardenManager Namespace : GrandmaGreen.Garden Assembly : cs.temp.dll.dll Syntax public class GardenManager : ScriptableObject Fields DeathTime Declaration public int DeathTime Field Value Type Description Int32 dryTileTintColor Declaration public Color dryTileTintColor Field Value Type Description Color timers Declaration public TimeLayer[] timers Field Value Type Description TimeLayer [] wateredTileTintColor Declaration public Color wateredTileTintColor Field Value Type Description Color WiltTime Declaration public int WiltTime Field Value Type Description Int32 Methods ClearGarden(Int32) Declaration public void ClearGarden(int areaIndex) Parameters Type Name Description Int32 areaIndex CreatePlant(PlantId, Genotype, Int32, Int32, Vector3Int) Declaration public void CreatePlant(PlantId type, Genotype genotype, int growthStage, int areaIndex, Vector3Int cell) Parameters Type Name Description PlantId type Genotype genotype Int32 growthStage Int32 areaIndex Vector3Int cell DestroyPlant(Int32, Vector3Int) Declaration public void DestroyPlant(int areaIndex, Vector3Int cell) Parameters Type Name Description Int32 areaIndex Vector3Int cell GetBreedingCandidates(Int32, Vector3Int) Declaration public List<PlantState> GetBreedingCandidates(int areaIndex, Vector3Int cell) Parameters Type Name Description Int32 areaIndex Vector3Int cell Returns Type Description List < PlantState > GetDecor(Int32) Declaration public List<DecorState> GetDecor(int areaIndex) Parameters Type Name Description Int32 areaIndex Returns Type Description List < DecorState > GetGenotype(Int32, Vector3Int) Declaration public Genotype GetGenotype(int areaIndex, Vector3Int cell) Parameters Type Name Description Int32 areaIndex Vector3Int cell Returns Type Description Genotype GetGrowthStage(Int32, Vector3Int) Declaration public int GetGrowthStage(int areaIndex, Vector3Int cell) Parameters Type Name Description Int32 areaIndex Vector3Int cell Returns Type Description Int32 GetNeighbors(Int32, Vector3Int) Declaration public List<PlantState> GetNeighbors(int areaIndex, Vector3Int cell) Parameters Type Name Description Int32 areaIndex Vector3Int cell Returns Type Description List < PlantState > GetPlant(Int32, Vector3Int) Declaration public PlantState GetPlant(int areaIndex, Vector3Int cell) Parameters Type Name Description Int32 areaIndex Vector3Int cell Returns Type Description PlantState GetPlants(Int32) Declaration public List<PlantState> GetPlants(int areaIndex) Parameters Type Name Description Int32 areaIndex Returns Type Description List < PlantState > GetPlantType(Int32, Vector3Int) Declaration public PlantId GetPlantType(int areaIndex, Vector3Int cell) Parameters Type Name Description Int32 areaIndex Vector3Int cell Returns Type Description PlantId GetTiles(Int32) Declaration public List<TileState> GetTiles(int areaIndex) Parameters Type Name Description Int32 areaIndex Returns Type Description List < TileState > IncrementWaterTimer(Int32, Vector3Int, Int32) Declaration public void IncrementWaterTimer(int areaIndex, Vector3Int cell, int value) Parameters Type Name Description Int32 areaIndex Vector3Int cell Int32 value Initialize() Declaration public void Initialize() IsEmpty(Int32, Vector3Int) Declaration public bool IsEmpty(int areaIndex, Vector3Int cell) Parameters Type Name Description Int32 areaIndex Vector3Int cell Returns Type Description Boolean PlantIsBreedable(Int32, Vector3Int) Declaration public bool PlantIsBreedable(int areaIndex, Vector3Int cell) Parameters Type Name Description Int32 areaIndex Vector3Int cell Returns Type Description Boolean PlantIsDead(Int32, Vector3Int) Declaration public bool PlantIsDead(int areaIndex, Vector3Int cell) Parameters Type Name Description Int32 areaIndex Vector3Int cell Returns Type Description Boolean PlantIsFullyGrown(Int32, Vector3Int) Declaration public bool PlantIsFullyGrown(int areaIndex, Vector3Int cell) Parameters Type Name Description Int32 areaIndex Vector3Int cell Returns Type Description Boolean PlantIsWilted(Int32, Vector3Int) Declaration public bool PlantIsWilted(int areaIndex, Vector3Int cell) Parameters Type Name Description Int32 areaIndex Vector3Int cell Returns Type Description Boolean PlantNeedsWater(Int32, Vector3Int) Declaration public bool PlantNeedsWater(int areaIndex, Vector3Int cell) Parameters Type Name Description Int32 areaIndex Vector3Int cell Returns Type Description Boolean RegisterGarden(Int32) Declaration public void RegisterGarden(int areaIndex) Parameters Type Name Description Int32 areaIndex SetFertilization(Int32, Vector3Int) Declaration public bool SetFertilization(int areaIndex, Vector3Int cell) Parameters Type Name Description Int32 areaIndex Vector3Int cell Returns Type Description Boolean UpdateDecorItem(Int32, DecorationId, Vector3, Nullable<Vector3>) Declaration public void UpdateDecorItem(int areaIndex, DecorationId decorID, Vector3 newPosition, Vector3? oldPosition = null) Parameters Type Name Description Int32 areaIndex DecorationId decorID Vector3 newPosition Nullable < Vector3 > oldPosition UpdateGardenTile(Int32, Vector3Int, Int32) Declaration public void UpdateGardenTile(int areaIndex, Vector3Int cell, int tileIndex) Parameters Type Name Description Int32 areaIndex Vector3Int cell Int32 tileIndex UpdateGrowthStage(Int32, Vector3Int) Declaration public void UpdateGrowthStage(int areaIndex, Vector3Int cell) Parameters Type Name Description Int32 areaIndex Vector3Int cell UpdateWaterStage(Int32, Vector3Int) Declaration public bool UpdateWaterStage(int areaIndex, Vector3Int cell) Parameters Type Name Description Int32 areaIndex Vector3Int cell Returns Type Description Boolean"
  },
  "api/GrandmaGreen.Garden.GardenSaver.html": {
    "href": "api/GrandmaGreen.Garden.GardenSaver.html",
    "title": "Class GardenSaver",
    "keywords": "Class GardenSaver Inheritance Object GardenSaver Namespace : GrandmaGreen.Garden Assembly : cs.temp.dll.dll Syntax public class GardenSaver : ObjectSaver Properties Item[Vector3Int] Declaration public PlantState this[Vector3Int k] { get; set; } Parameters Type Name Description Vector3Int k Property Value Type Description PlantState Methods AddDecorState(DecorState) Declaration public void AddDecorState(DecorState decorState) Parameters Type Name Description DecorState decorState Clear() Declaration public void Clear() ContainsKey(Vector3Int) Declaration public bool ContainsKey(Vector3Int k) Parameters Type Name Description Vector3Int k Returns Type Description Boolean Decor() Declaration public List<DecorState> Decor() Returns Type Description List < DecorState > Initialize() Declaration public void Initialize() Remove(Vector3Int) Declaration public bool Remove(Vector3Int k) Parameters Type Name Description Vector3Int k Returns Type Description Boolean RemoveDecorState(DecorState) Declaration public void RemoveDecorState(DecorState decorState) Parameters Type Name Description DecorState decorState SetTileState(TileState) Declaration public void SetTileState(TileState tileState) Parameters Type Name Description TileState tileState Tiles() Declaration public List<TileState> Tiles() Returns Type Description List < TileState > Values() Declaration public List<PlantState> Values() Returns Type Description List < PlantState >"
  },
  "api/GrandmaGreen.Garden.GardenToolSet.html": {
    "href": "api/GrandmaGreen.Garden.GardenToolSet.html",
    "title": "Class GardenToolSet",
    "keywords": "Class GardenToolSet Inheritance Object GardenToolSet Namespace : GrandmaGreen.Garden Assembly : cs.temp.dll.dll Syntax public class GardenToolSet : ScriptableObject Properties Item[Int32] Declaration public ToolData this[int i] { get; set; } Parameters Type Name Description Int32 i Property Value Type Description ToolData Methods ToolAction(ToolActionData) Declaration public void ToolAction(ToolActionData action) Parameters Type Name Description ToolActionData action Events onHarvest Declaration public event Action onHarvest Event Type Type Description Action onPlant Declaration public event Action onPlant Event Type Type Description Action onTill Declaration public event Action onTill Event Type Type Description Action onWater Declaration public event Action onWater Event Type Type Description Action"
  },
  "api/GrandmaGreen.Garden.GardenVFX.html": {
    "href": "api/GrandmaGreen.Garden.GardenVFX.html",
    "title": "Class GardenVFX",
    "keywords": "Class GardenVFX Inheritance Object GardenVFX Namespace : GrandmaGreen.Garden Assembly : cs.temp.dll.dll Syntax public class GardenVFX : ScriptableObject Fields DryingUpBurst Declaration public ParticleSystem DryingUpBurst Field Value Type Description ParticleSystem FertilizerParticleBurst Declaration public ParticleSystem FertilizerParticleBurst Field Value Type Description ParticleSystem WateringParticleBurst Declaration public ParticleSystem WateringParticleBurst Field Value Type Description ParticleSystem Methods PlayDryParticle(Vector3) Declaration public void PlayDryParticle(Vector3 position) Parameters Type Name Description Vector3 position PlayFertilizerParticle(Vector3) Declaration public void PlayFertilizerParticle(Vector3 position) Parameters Type Name Description Vector3 position PlayWaterParticle(Vector3) Declaration public void PlayWaterParticle(Vector3 position) Parameters Type Name Description Vector3 position"
  },
  "api/GrandmaGreen.Garden.Genotype.Generation.html": {
    "href": "api/GrandmaGreen.Garden.Genotype.Generation.html",
    "title": "Enum Genotype.Generation",
    "keywords": "Enum Genotype.Generation Namespace : GrandmaGreen.Garden Assembly : cs.temp.dll.dll Syntax public enum Generation Fields Name Description F1 F2 P1"
  },
  "api/GrandmaGreen.Garden.Genotype.html": {
    "href": "api/GrandmaGreen.Garden.Genotype.html",
    "title": "Struct Genotype",
    "keywords": "Struct Genotype Inherited Members Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : GrandmaGreen.Garden Assembly : cs.temp.dll.dll Syntax [Serializable] public struct Genotype Constructors Genotype(String, Genotype.Generation) Declaration public Genotype(string genotype, Genotype.Generation gen = Genotype.Generation.P1) Parameters Type Name Description String genotype Genotype.Generation gen Fields generation Declaration public Genotype.Generation generation Field Value Type Description Genotype.Generation size Declaration public Genotype.Size size Field Value Type Description Genotype.Size trait Declaration public Genotype.Trait trait Field Value Type Description Genotype.Trait Methods Cross(Genotype) Declaration public Genotype Cross(Genotype dad) Parameters Type Name Description Genotype dad Returns Type Description Genotype Equals(Object) Declaration public override bool Equals(object obj) Parameters Type Name Description Object obj Returns Type Description Boolean Overrides ValueType.Equals(Object) GetHashCode() Declaration public override int GetHashCode() Returns Type Description Int32 Overrides ValueType.GetHashCode() SpriteSize() Declaration public float SpriteSize() Returns Type Description Single SpriteSuffix(PlantId) Declaration public string SpriteSuffix(PlantId id) Parameters Type Name Description PlantId id Returns Type Description String ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString()"
  },
  "api/GrandmaGreen.Garden.Genotype.Size.html": {
    "href": "api/GrandmaGreen.Garden.Genotype.Size.html",
    "title": "Enum Genotype.Size",
    "keywords": "Enum Genotype.Size Namespace : GrandmaGreen.Garden Assembly : cs.temp.dll.dll Syntax public enum Size Fields Name Description Big Medium Small VeryBig VerySmall"
  },
  "api/GrandmaGreen.Garden.Genotype.Trait.html": {
    "href": "api/GrandmaGreen.Garden.Genotype.Trait.html",
    "title": "Enum Genotype.Trait",
    "keywords": "Enum Genotype.Trait Namespace : GrandmaGreen.Garden Assembly : cs.temp.dll.dll Syntax public enum Trait Fields Name Description Dominant Heterozygous Recessive"
  },
  "api/GrandmaGreen.Garden.GridUI.html": {
    "href": "api/GrandmaGreen.Garden.GridUI.html",
    "title": "Class GridUI",
    "keywords": "Class GridUI Inheritance Object GridUI Namespace : GrandmaGreen.Garden Assembly : cs.temp.dll.dll Syntax public class GridUI : MonoBehaviour Fields customizer Declaration public GardenCustomizer customizer Field Value Type Description GardenCustomizer fadeTime Declaration public float fadeTime Field Value Type Description Single gridMaterial Declaration public Material gridMaterial Field Value Type Description Material maxOpacity Declaration public float maxOpacity Field Value Type Description Single toolData Declaration public PlayerToolData toolData Field Value Type Description PlayerToolData Methods DisableGrid() Declaration public void DisableGrid() EnableGrid() Declaration public void EnableGrid() ToggleGrid() Declaration public void ToggleGrid()"
  },
  "api/GrandmaGreen.Garden.html": {
    "href": "api/GrandmaGreen.Garden.html",
    "title": "Namespace GrandmaGreen.Garden",
    "keywords": "Namespace GrandmaGreen.Garden Classes GardenAreaController Responsible for functionality of a single Garden screen GardenCustomizer GardenDecorItem GardenManager GardenSaver GardenToolSet GardenVFX GridUI MoveToActionUI PlayerToolData SeedUI ToolData ToolEquip Structs DecorState Genotype PlantState TileState ToolActionData Enums Genotype.Generation Genotype.Size Genotype.Trait"
  },
  "api/GrandmaGreen.Garden.MoveToActionUI.html": {
    "href": "api/GrandmaGreen.Garden.MoveToActionUI.html",
    "title": "Class MoveToActionUI",
    "keywords": "Class MoveToActionUI Inheritance Object MoveToActionUI Namespace : GrandmaGreen.Garden Assembly : cs.temp.dll.dll Syntax public class MoveToActionUI : MonoBehaviour Fields actionIcon Declaration public UnityEngine.UI.Image actionIcon Field Value Type Description UnityEngine.UI.Image areaServices Declaration public AreaServices areaServices Field Value Type Description AreaServices iconUIObject Declaration public GameObject iconUIObject Field Value Type Description GameObject parentRect Declaration public RectTransform parentRect Field Value Type Description RectTransform playerController Declaration public PlayerController playerController Field Value Type Description PlayerController tileHighlightUIObject Declaration public GameObject tileHighlightUIObject Field Value Type Description GameObject toolData Declaration public PlayerToolData toolData Field Value Type Description PlayerToolData Methods WorldToScreenSpace(Vector3, Camera, RectTransform) Declaration public static Vector3 WorldToScreenSpace(Vector3 worldPos, Camera cam, RectTransform area) Parameters Type Name Description Vector3 worldPos Camera cam RectTransform area Returns Type Description Vector3"
  },
  "api/GrandmaGreen.Garden.PlantState.html": {
    "href": "api/GrandmaGreen.Garden.PlantState.html",
    "title": "Struct PlantState",
    "keywords": "Struct PlantState Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : GrandmaGreen.Garden Assembly : cs.temp.dll.dll Syntax [Serializable] public struct PlantState Fields cell Declaration public Vector3Int cell Field Value Type Description Vector3Int genotype Declaration public Genotype genotype Field Value Type Description Genotype growthStage Declaration public int growthStage Field Value Type Description Int32 isFertilized Declaration public bool isFertilized Field Value Type Description Boolean timePlanted Declaration public float timePlanted Field Value Type Description Single type Declaration public PlantId type Field Value Type Description PlantId waterStage Declaration public int waterStage Field Value Type Description Int32 waterTimer Declaration public int waterTimer Field Value Type Description Int32"
  },
  "api/GrandmaGreen.Garden.PlayerToolData.html": {
    "href": "api/GrandmaGreen.Garden.PlayerToolData.html",
    "title": "Class PlayerToolData",
    "keywords": "Class PlayerToolData Inheritance Object PlayerToolData Namespace : GrandmaGreen.Garden Assembly : cs.temp.dll.dll Syntax public class PlayerToolData : ScriptableObject Fields currentTool Declaration public ToolData currentTool Field Value Type Description ToolData equippedSeed Declaration public PlantId equippedSeed Field Value Type Description PlantId equippedSeedGenotype Declaration public Genotype equippedSeedGenotype Field Value Type Description Genotype lastToolAction Declaration public ToolActionData lastToolAction Field Value Type Description ToolActionData onRequireSeedEquip Declaration public Action onRequireSeedEquip Field Value Type Description Action playerController Declaration public EntityController playerController Field Value Type Description EntityController toolSelectionActive Declaration public bool toolSelectionActive Field Value Type Description Boolean toolSelectionEndSFX Declaration public ASoundContainer toolSelectionEndSFX Field Value Type Description ASoundContainer toolSelectionStartSFX Declaration public ASoundContainer toolSelectionStartSFX Field Value Type Description ASoundContainer toolSet Declaration public GardenToolSet toolSet Field Value Type Description GardenToolSet Methods DoCurrentToolAction() Declaration public void DoCurrentToolAction() EmptySelection() Declaration public void EmptySelection() EndToolSelection() Declaration public void EndToolSelection() SetEquippedSeed(UInt16, Genotype) Declaration public void SetEquippedSeed(ushort plantIndex, Genotype genotype) Parameters Type Name Description UInt16 plantIndex Genotype genotype SetToolAction(TileData, Vector3Int, GardenAreaController) Declaration public void SetToolAction(TileData tile, Vector3Int cell, GardenAreaController area) Parameters Type Name Description TileData tile Vector3Int cell GardenAreaController area StartToolSelection() Declaration public void StartToolSelection() ToggleToolSelection() Declaration public void ToggleToolSelection() ToolSelection(ToolData) Declaration public void ToolSelection(ToolData tool) Parameters Type Name Description ToolData tool ToolSelection(Int32) Declaration public void ToolSelection(int index) Parameters Type Name Description Int32 index Events onSeedEmpty Declaration public event Action onSeedEmpty Event Type Type Description Action onSeedEquipped Declaration public event Action onSeedEquipped Event Type Type Description Action onToolSelected Declaration public event Action<ToolData> onToolSelected Event Type Type Description Action < ToolData > onToolSelectionEnd Declaration public event Action onToolSelectionEnd Event Type Type Description Action onToolSelectionStart Declaration public event Action onToolSelectionStart Event Type Type Description Action"
  },
  "api/GrandmaGreen.Garden.SeedUI.html": {
    "href": "api/GrandmaGreen.Garden.SeedUI.html",
    "title": "Class SeedUI",
    "keywords": "Class SeedUI Inheritance Object SeedUI Namespace : GrandmaGreen.Garden Assembly : cs.temp.dll.dll Syntax public class SeedUI : MonoBehaviour Fields canvasGroup Declaration public CanvasGroup canvasGroup Field Value Type Description CanvasGroup collections Declaration public CollectionsSO collections Field Value Type Description CollectionsSO playerToolData Declaration public PlayerToolData playerToolData Field Value Type Description PlayerToolData seedButton Declaration public Button seedButton Field Value Type Description Button seedImage Declaration public Image seedImage Field Value Type Description Image Methods ActivateUI() Declaration public void ActivateUI() DeactivateUI() Declaration public void DeactivateUI() OnButtonClicked() Declaration public void OnButtonClicked()"
  },
  "api/GrandmaGreen.Garden.TileState.html": {
    "href": "api/GrandmaGreen.Garden.TileState.html",
    "title": "Struct TileState",
    "keywords": "Struct TileState Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : GrandmaGreen.Garden Assembly : cs.temp.dll.dll Syntax [Serializable] public struct TileState Fields cell Declaration public Vector3Int cell Field Value Type Description Vector3Int tileIndex Declaration public int tileIndex Field Value Type Description Int32"
  },
  "api/GrandmaGreen.Garden.ToolActionData.html": {
    "href": "api/GrandmaGreen.Garden.ToolActionData.html",
    "title": "Struct ToolActionData",
    "keywords": "Struct ToolActionData Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : GrandmaGreen.Garden Assembly : cs.temp.dll.dll Syntax public struct ToolActionData Fields area Declaration public GardenAreaController area Field Value Type Description GardenAreaController gridcell Declaration public Vector3Int gridcell Field Value Type Description Vector3Int seedGenotype Declaration public Genotype seedGenotype Field Value Type Description Genotype seedType Declaration public PlantId seedType Field Value Type Description PlantId tile Declaration public TileData tile Field Value Type Description TileData tool Declaration public ToolData tool Field Value Type Description ToolData"
  },
  "api/GrandmaGreen.Garden.ToolData.html": {
    "href": "api/GrandmaGreen.Garden.ToolData.html",
    "title": "Class ToolData",
    "keywords": "Class ToolData Inheritance Object ToolData Namespace : GrandmaGreen.Garden Assembly : cs.temp.dll.dll Syntax public class ToolData : ScriptableObject Fields icon Declaration public Sprite icon Field Value Type Description Sprite selectedSFX Declaration public ASoundContainer selectedSFX Field Value Type Description ASoundContainer toolIndex Declaration public int toolIndex Field Value Type Description Int32 toolName Declaration public string toolName Field Value Type Description String toolSFX Declaration public ASoundContainer[] toolSFX Field Value Type Description ASoundContainer []"
  },
  "api/GrandmaGreen.Garden.ToolEquip.html": {
    "href": "api/GrandmaGreen.Garden.ToolEquip.html",
    "title": "Class ToolEquip",
    "keywords": "Class ToolEquip Inheritance Object ToolEquip Namespace : GrandmaGreen.Garden Assembly : cs.temp.dll.dll Syntax public class ToolEquip : MonoBehaviour Fields collections Declaration public CollectionsSO collections Field Value Type Description CollectionsSO playerTools Declaration public PlayerToolData playerTools Field Value Type Description PlayerToolData spriteRenderer Declaration public SpriteRenderer spriteRenderer Field Value Type Description SpriteRenderer toolSpriteResolver Declaration public SpriteResolver toolSpriteResolver Field Value Type Description SpriteResolver"
  },
  "api/GrandmaGreen.GardenTutorialController.html": {
    "href": "api/GrandmaGreen.GardenTutorialController.html",
    "title": "Class GardenTutorialController",
    "keywords": "Class GardenTutorialController Inheritance Object GardenTutorialController Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class GardenTutorialController : MonoBehaviour Fields areaController Declaration public GardenAreaController areaController Field Value Type Description GardenAreaController dialogueable Declaration public Dialogueable dialogueable Field Value Type Description Dialogueable golemEvolveDialogue Declaration public DialoguePair golemEvolveDialogue Field Value Type Description DialoguePair golemSpawnDialogue Declaration public DialoguePair golemSpawnDialogue Field Value Type Description DialoguePair hintPositions Declaration public Transform[] hintPositions Field Value Type Description Transform [] HUD Declaration public HUD HUD Field Value Type Description HUD introDialogue Declaration public DialoguePair introDialogue Field Value Type Description DialoguePair leaveDialogue Declaration public DialoguePair leaveDialogue Field Value Type Description DialoguePair mailbox Declaration public GameObject mailbox Field Value Type Description GameObject mailboxColiider Declaration public Collider mailboxColiider Field Value Type Description Collider mailboxDialogue Declaration public DialoguePair mailboxDialogue Field Value Type Description DialoguePair playerCamera Declaration public CinemachineVirtualCamera playerCamera Field Value Type Description CinemachineVirtualCamera playerEntity Declaration public GameEntity playerEntity Field Value Type Description GameEntity playerInteractable Declaration public GameObject playerInteractable Field Value Type Description GameObject seedUI Declaration public SeedUI seedUI Field Value Type Description SeedUI starterPlantGenotype Declaration public Genotype starterPlantGenotype Field Value Type Description Genotype starterPlantID Declaration public PlantId starterPlantID Field Value Type Description PlantId tapHint Declaration public GameObject tapHint Field Value Type Description GameObject toolsMenu Declaration public ToolsMenu toolsMenu Field Value Type Description ToolsMenu toTownSquarePosition Declaration public Transform toTownSquarePosition Field Value Type Description Transform tutorialStateData Declaration public TutorialStateData tutorialStateData Field Value Type Description TutorialStateData tutorialUI Declaration public TutorialUIDisplay tutorialUI Field Value Type Description TutorialUIDisplay Methods OnTutorialDialogueRead() Declaration public void OnTutorialDialogueRead()"
  },
  "api/GrandmaGreen.GeneralExtensions.html": {
    "href": "api/GrandmaGreen.GeneralExtensions.html",
    "title": "Class GeneralExtensions",
    "keywords": "Class GeneralExtensions Inheritance Object GeneralExtensions Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public static class GeneralExtensions Methods WithNewX(Vector2, Single) Returns the current vector with a new X Declaration public static Vector2 WithNewX(this Vector2 vector, float newX) Parameters Type Name Description Vector2 vector Single newX Returns Type Description Vector2"
  },
  "api/GrandmaGreen.GrandmaGreenGameState.html": {
    "href": "api/GrandmaGreen.GrandmaGreenGameState.html",
    "title": "Class GrandmaGreenGameState",
    "keywords": "Class GrandmaGreenGameState Inheritance Object GrandmaGreenGameState Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class GrandmaGreenGameState : MonoBehaviour Fields s_Instance Declaration protected static GrandmaGreenGameState s_Instance Field Value Type Description GrandmaGreenGameState Properties ActiveArea Declaration public static AreaController ActiveArea { get; } Property Value Type Description AreaController CurrentLocation Declaration public static SCENES CurrentLocation { get; } Property Value Type Description SCENES Methods GameSceneTransition(SCENES) Declaration public void GameSceneTransition(SCENES scene) Parameters Type Name Description SCENES scene LoadGardenScreen(Int32) Declaration public void LoadGardenScreen(int gardenIndex) Parameters Type Name Description Int32 gardenIndex"
  },
  "api/GrandmaGreen.GrandmaGreenLevelLoader.html": {
    "href": "api/GrandmaGreen.GrandmaGreenLevelLoader.html",
    "title": "Class GrandmaGreenLevelLoader",
    "keywords": "Class GrandmaGreenLevelLoader Inheritance Object GrandmaGreenLevelLoader Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class GrandmaGreenLevelLoader : ScriptableObject Methods RequestLevelLoad(SCENES) Declaration public void RequestLevelLoad(SCENES scene) Parameters Type Name Description SCENES scene Events asyncLoadReq Declaration public event Action<SCENES> asyncLoadReq Event Type Type Description Action < SCENES >"
  },
  "api/GrandmaGreen.html": {
    "href": "api/GrandmaGreen.html",
    "title": "Namespace GrandmaGreen",
    "keywords": "Namespace GrandmaGreen Classes AreaController AreaExitState AreaServices BulletinBoardUIController BulletinBoardUIDisplay CameraZoom CatchUIInput CommonSFX CultivisionUIDisplay DialoguePair EventManager GamePortalTile GameScenePortal GameSettingsData GameSystemDummy GardenTutorialController GeneralExtensions GrandmaGreenGameState GrandmaGreenLevelLoader MailboxUIDisplay NewItemUI PlantType PlantTypeDictionary PlayAudioOnEnable SellingItemController SellingUIDisplay SettingsUIDisplay ShopkeeperMenu SiblingRuleTile SlideshowData StartScreenUIDisplay Storyline StorylineDataStore StoryRequirement TapHereUI TileType ToolTest2 TownSquareTutorialController TutorialData TutorialStateData TutorialUIDisplay UIDisplayBase Structs Contest Basic contest struct. All it does is store a plant and the assumed prize money. SettingsSet SlideData Interfaces IDraggable IDraggableContainer IGameTile IPathAgent IPathfinderServicer IServicer<T> IServiceUser<U, T> Enums Direction SiblingRuleTile.SibingGroup StoryState"
  },
  "api/GrandmaGreen.IDraggable.html": {
    "href": "api/GrandmaGreen.IDraggable.html",
    "title": "Interface IDraggable",
    "keywords": "Interface IDraggable Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public interface IDraggable Properties button Declaration Button button { get; set; } Property Value Type Description Button startingPosition Declaration Vector3 startingPosition { get; set; } Property Value Type Description Vector3"
  },
  "api/GrandmaGreen.IDraggableContainer.html": {
    "href": "api/GrandmaGreen.IDraggableContainer.html",
    "title": "Interface IDraggableContainer",
    "keywords": "Interface IDraggableContainer Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public interface IDraggableContainer Properties draggable Declaration IDraggable draggable { get; set; } Property Value Type Description IDraggable enabled Declaration bool enabled { get; set; } Property Value Type Description Boolean handled Declaration bool handled { get; set; } Property Value Type Description Boolean pointerStartPosition Declaration Vector3 pointerStartPosition { get; set; } Property Value Type Description Vector3 threshold Declaration VisualElement threshold { get; set; } Property Value Type Description VisualElement Methods PointerDownHandler(PointerDownEvent) Declaration void PointerDownHandler(PointerDownEvent evt) Parameters Type Name Description PointerDownEvent evt"
  },
  "api/GrandmaGreen.IGameTile.html": {
    "href": "api/GrandmaGreen.IGameTile.html",
    "title": "Interface IGameTile",
    "keywords": "Interface IGameTile Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public interface IGameTile Methods DoTileAction() Declaration void DoTileAction() DoTileAction(EntityController) Declaration void DoTileAction(EntityController entity) Parameters Type Name Description EntityController entity"
  },
  "api/GrandmaGreen.IPathAgent.html": {
    "href": "api/GrandmaGreen.IPathAgent.html",
    "title": "Interface IPathAgent",
    "keywords": "Interface IPathAgent Inherited Members IServiceUser<Pathfinder, IPathfinderServicer>.Servicer IServiceUser<Pathfinder, IPathfinderServicer>.SetServicer(IPathfinderServicer) IServiceUser<Pathfinder, IPathfinderServicer>.ClearServicer() Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public interface IPathAgent : IServiceUser<Pathfinder, IPathfinderServicer> Properties isPathing Declaration bool isPathing { get; } Property Value Type Description Boolean Methods CalculatePathable(Int32) Declaration float3[] CalculatePathable(int range) Parameters Type Name Description Int32 range Returns Type Description float3 [] CheckPath(int2) Declaration float3[] CheckPath(int2 destination) Parameters Type Name Description int2 destination Returns Type Description float3 [] CurrentPos() Declaration Vector3 CurrentPos() Returns Type Description Vector3 FollowPath(float3[]) Declaration IEnumerator FollowPath(float3[] path) Parameters Type Name Description float3 [] path Returns Type Description IEnumerator"
  },
  "api/GrandmaGreen.IPathfinderServicer.html": {
    "href": "api/GrandmaGreen.IPathfinderServicer.html",
    "title": "Interface IPathfinderServicer",
    "keywords": "Interface IPathfinderServicer Inherited Members IServicer<Pathfinder>.s_activeServices IServicer<Pathfinder>.RegisterService(Pathfinder) IServicer<Pathfinder>.DeregisterService(Pathfinder) IServicer<Pathfinder>.PrimaryService IServicer<Pathfinder>.Item[Int32] Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public interface IPathfinderServicer : IServicer<Pathfinder>"
  },
  "api/GrandmaGreen.IServicer-1.html": {
    "href": "api/GrandmaGreen.IServicer-1.html",
    "title": "Interface IServicer<T>",
    "keywords": "Interface IServicer<T> Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public interface IServicer<T> Type Parameters Name Description T Properties Item[Int32] Declaration virtual T this[int i] { get; } Parameters Type Name Description Int32 i Property Value Type Description T PrimaryService Declaration virtual T PrimaryService { get; } Property Value Type Description T s_activeServices Declaration static List<T> s_activeServices { get; set; } Property Value Type Description List <T> Methods DeregisterService(T) Declaration void DeregisterService(T service) Parameters Type Name Description T service RegisterService(T) Declaration void RegisterService(T service) Parameters Type Name Description T service"
  },
  "api/GrandmaGreen.IServiceUser-2.html": {
    "href": "api/GrandmaGreen.IServiceUser-2.html",
    "title": "Interface IServiceUser<U, T>",
    "keywords": "Interface IServiceUser<U, T> Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public interface IServiceUser<U, T> where T : IServicer<U> Type Parameters Name Description U T Properties Servicer Declaration static T Servicer { get; } Property Value Type Description T Methods ClearServicer() Declaration static void ClearServicer() SetServicer(T) Declaration static void SetServicer(T servicer) Parameters Type Name Description T servicer"
  },
  "api/GrandmaGreen.Mail.html": {
    "href": "api/GrandmaGreen.Mail.html",
    "title": "Namespace GrandmaGreen.Mail",
    "keywords": "Namespace GrandmaGreen.Mail Classes MailboxController MailboxModel Structs Letter QueuedLetter"
  },
  "api/GrandmaGreen.Mail.Letter.html": {
    "href": "api/GrandmaGreen.Mail.Letter.html",
    "title": "Struct Letter",
    "keywords": "Struct Letter Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : GrandmaGreen.Mail Assembly : cs.temp.dll.dll Syntax public struct Letter Constructors Letter(DateTime, String, String, String, String, UInt16[]) Declaration public Letter(DateTime time, string subject, string heading, string body, string signature, ushort[] attachments) Parameters Type Name Description DateTime time String subject String heading String body String signature UInt16 [] attachments Fields Attachments Declaration public ushort[] Attachments Field Value Type Description UInt16 [] Body Declaration public string Body Field Value Type Description String Heading Declaration public string Heading Field Value Type Description String Signature Declaration public string Signature Field Value Type Description String Subject Declaration public string Subject Field Value Type Description String TimeSent Declaration public long TimeSent Field Value Type Description Int64 Methods ToString() Declaration public override string ToString() Returns Type Description String Overrides ValueType.ToString()"
  },
  "api/GrandmaGreen.Mail.MailboxController.html": {
    "href": "api/GrandmaGreen.Mail.MailboxController.html",
    "title": "Class MailboxController",
    "keywords": "Class MailboxController Inheritance Object MailboxController Namespace : GrandmaGreen.Mail Assembly : cs.temp.dll.dll Syntax public class MailboxController : MonoBehaviour Fields mailbox Declaration public MailboxModel mailbox Field Value Type Description MailboxModel Methods DebugSendLetterIn5s() Declaration public void DebugSendLetterIn5s() DebugSendLetterNow() Declaration public void DebugSendLetterNow() GetLetters() Declaration public void GetLetters() TestOldLettersArrive() Declaration public void TestOldLettersArrive()"
  },
  "api/GrandmaGreen.Mail.MailboxModel.html": {
    "href": "api/GrandmaGreen.Mail.MailboxModel.html",
    "title": "Class MailboxModel",
    "keywords": "Class MailboxModel Inheritance Object MailboxModel Namespace : GrandmaGreen.Mail Assembly : cs.temp.dll.dll Syntax public class MailboxModel : ObjectSaver Methods Empty() Declaration public bool Empty() Returns Type Description Boolean GetLetterByIndex(Int32) Declaration public Letter GetLetterByIndex(int index) Parameters Type Name Description Int32 index Returns Type Description Letter GetLetterQueue() Declaration public List<QueuedLetter> GetLetterQueue() Returns Type Description List < QueuedLetter > GetLetters() Declaration public List<Letter> GetLetters() Returns Type Description List < Letter > MailboxString() Declaration public string MailboxString() Returns Type Description String RemoveLetter(Int32) Declaration public void RemoveLetter(int index) Parameters Type Name Description Int32 index SendLetterAt(DateTime, Letter) Declaration public void SendLetterAt(DateTime time, Letter letter) Parameters Type Name Description DateTime time Letter letter SendLetterAt(DateTime, String, String, String, String, UInt16[]) Declaration public void SendLetterAt(DateTime time, string subject, string heading, string body, string signature, ushort[] attachments = null) Parameters Type Name Description DateTime time String subject String heading String body String signature UInt16 [] attachments SendLetterNow(Letter) Declaration public void SendLetterNow(Letter letter) Parameters Type Name Description Letter letter SendLetterNow(String, String, String, String, UInt16[]) Declaration public void SendLetterNow(string subject, string heading, string body, string signature, ushort[] attachments = null) Parameters Type Name Description String subject String heading String body String signature UInt16 [] attachments Start() Declaration public void Start()"
  },
  "api/GrandmaGreen.Mail.QueuedLetter.html": {
    "href": "api/GrandmaGreen.Mail.QueuedLetter.html",
    "title": "Struct QueuedLetter",
    "keywords": "Struct QueuedLetter Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : GrandmaGreen.Mail Assembly : cs.temp.dll.dll Syntax public struct QueuedLetter Constructors QueuedLetter(DateTime, Letter) Declaration public QueuedLetter(DateTime time, Letter letter) Parameters Type Name Description DateTime time Letter letter QueuedLetter(DateTime, String, String, String, String, UInt16[]) Declaration public QueuedLetter(DateTime time, string subject, string heading, string body, string signature, ushort[] attachments) Parameters Type Name Description DateTime time String subject String heading String body String signature UInt16 [] attachments Fields letter Declaration public Letter letter Field Value Type Description Letter time Declaration public long time Field Value Type Description Int64"
  },
  "api/GrandmaGreen.MailboxUIDisplay.html": {
    "href": "api/GrandmaGreen.MailboxUIDisplay.html",
    "title": "Class MailboxUIDisplay",
    "keywords": "Class MailboxUIDisplay Inheritance Object UIDisplayBase MailboxUIDisplay Inherited Members UIDisplayBase.m_rootVisualElement UIDisplayBase.onPanelOpened UIDisplayBase.onPanelClosed UIDisplayBase.Awake() UIDisplayBase.Unload() UIDisplayBase.CloseUI() UIDisplayBase.RegisterButtonCallback(String, Action) UIDisplayBase.RegisterButtonCallbackWithClose(String, Action) Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class MailboxUIDisplay : UIDisplayBase Methods Load() Declaration public override void Load() Overrides UIDisplayBase.Load() OpenUI() Declaration public override void OpenUI() Overrides UIDisplayBase.OpenUI() SetUpMailbox() Declaration public void SetUpMailbox()"
  },
  "api/GrandmaGreen.NewItemUI.html": {
    "href": "api/GrandmaGreen.NewItemUI.html",
    "title": "Class NewItemUI",
    "keywords": "Class NewItemUI Inheritance Object NewItemUI Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class NewItemUI : MonoBehaviour"
  },
  "api/GrandmaGreen.PlantType.html": {
    "href": "api/GrandmaGreen.PlantType.html",
    "title": "Class PlantType",
    "keywords": "Class PlantType Inheritance Object PlantType Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class PlantType : ScriptableObject Fields growthStagePrefabs Declaration public GameObject[] growthStagePrefabs Field Value Type Description GameObject [] growthStages Declaration public int growthStages Field Value Type Description Int32 growthTimeMins Declaration public int growthTimeMins Field Value Type Description Int32 plantName Declaration public string plantName Field Value Type Description String Methods GetGrowthStage(Single) Declaration public int GetGrowthStage(float timeSecs) Parameters Type Name Description Single timeSecs Returns Type Description Int32 GetPrefab(Single) Get prefab at current growth stage by age in seconds Declaration public GameObject GetPrefab(float timeSecs) Parameters Type Name Description Single timeSecs Returns Type Description GameObject TestCurrentGrowthStage() Declaration public void TestCurrentGrowthStage() TestCurrentGrowthStagePrefab() Declaration public void TestCurrentGrowthStagePrefab()"
  },
  "api/GrandmaGreen.PlantTypeDictionary.html": {
    "href": "api/GrandmaGreen.PlantTypeDictionary.html",
    "title": "Class PlantTypeDictionary",
    "keywords": "Class PlantTypeDictionary Inheritance Object PlantTypeDictionary Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class PlantTypeDictionary : ScriptableObject Fields plantTypes Declaration public PlantType[] plantTypes Field Value Type Description PlantType [] Properties Item[Int32] Declaration public PlantType this[int plantIndex] { get; } Parameters Type Name Description Int32 plantIndex Property Value Type Description PlantType Methods TestPlantTypeLookup() Declaration public void TestPlantTypeLookup()"
  },
  "api/GrandmaGreen.PlayAudioOnEnable.html": {
    "href": "api/GrandmaGreen.PlayAudioOnEnable.html",
    "title": "Class PlayAudioOnEnable",
    "keywords": "Class PlayAudioOnEnable Inheritance Object PlayAudioOnEnable Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class PlayAudioOnEnable : MonoBehaviour Fields container Declaration public ASoundContainer container Field Value Type Description ASoundContainer in3D Declaration public bool in3D Field Value Type Description Boolean"
  },
  "api/GrandmaGreen.SaveSystem.ComponentStore-1.html": {
    "href": "api/GrandmaGreen.SaveSystem.ComponentStore-1.html",
    "title": "Class ComponentStore<T>",
    "keywords": "Class ComponentStore<T> The ComponentStore is a data structure written in pure C#. See IComponentStore. Inheritance Object ComponentStore<T> Implements IComponentStore Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.MemberwiseClone() Namespace : GrandmaGreen.SaveSystem Assembly : cs.temp.dll.dll Syntax public class ComponentStore<T> : IComponentStore where T : struct Type Parameters Name Description T Constructors ComponentStore() Constructor initializes member variables and does nothing else. Declaration public ComponentStore() Fields components The components in question. Declaration public List<T> components Field Value Type Description List <T> Methods AddComponent(Int32, T) Adds a component to its internal storage list. Returns true if successful, false otherwise. Declaration public bool AddComponent(int index, T component) Parameters Type Name Description Int32 index T component Returns Type Description Boolean GetType() Returns the type of components it stores. Declaration public Type GetType() Returns Type Description Type RemoveComponent(Int32, T) Removes a component from its internal storage list. Returns true if successful, false otherwise. Declaration public bool RemoveComponent(int index, T component) Parameters Type Name Description Int32 index T component Returns Type Description Boolean RequestData(Int32, ref T) Receives data requests from its internal storage list based on a provided index and outputs it through a reference. Returns true if successful, false otherwise. Declaration public bool RequestData(int index, ref T component) Parameters Type Name Description Int32 index T component Returns Type Description Boolean UpdateValue(Int32, T) Updates a given value in its internal storage list based on a provided index. Returns true if successful, false otherwise. Declaration public bool UpdateValue(int index, T component) Parameters Type Name Description Int32 index T component Returns Type Description Boolean Implements IComponentStore"
  },
  "api/GrandmaGreen.SaveSystem.html": {
    "href": "api/GrandmaGreen.SaveSystem.html",
    "title": "Namespace GrandmaGreen.SaveSystem",
    "keywords": "Namespace GrandmaGreen.SaveSystem Classes ComponentStore<T> The ComponentStore is a data structure written in pure C#. See IComponentStore. JSONSaveLoader The JSONSaveLoader was designed specifically to serialize and deserialize JSON files ONLY. This is used largely for internal testing and readable save files, but can be converted to BSON as needed. ObjectSaver The ObjectSaver interfaces with game systems directly when new data is added, changed, or removed as player's navigate the game. It is a ScriptableObject that is the core of the save system, and was designed to be editor friendly. They store pure data. SaveController The SaveController is a purely scripted C# class that gets reinstantiated everytime the game is loaded. The SaveController interfaces directly with SaveLoaders of various types as necessary. When the SaveManager calls for an AutoSave, the SaveController pings each SaveLoader to tell it to save the relevant data. SaveManager The SaveManager class is in charge of high level saving. It is the only part of the save system that lives in the game. Upon awakening, it instantiates a new SaveController. It also tracks the auto save intervals, then pings the SaveController at appropriate moments. The SaveManager also stores an internal list of every ObjectSaver relevant to the whole game. Interfaces IComponentStore The IComponentStore is a wrapper interface for ComponentStores. The purpose of the ComponentStore is to store data at the start of a scene—when data gets loaded–and when gameplay changes any sort of persistent data. Requests for the data stored in the IComponentStore object are handled through IObjectSavers. IObjectSaver The IObjectSaver interface is a wrapper for ObjectSaver Scriptable Objects, which holds a list of IComponentSavers. IObjectSavers are instantiated and registered by SaveControllers upon awakening in a scene. Importantly, IObjectSavers handle data requests from game interfaces. Other game interfaces request the information, and IObjectSavers retrieve the data from IObjectStores to pass it along. Similarly, IObjectSavers take in new data from game interfaces and updates the IObjectStore appropriately. ISaveLoader The ISaveLoader interface is a wrapper interface used for all SaveLoaders."
  },
  "api/GrandmaGreen.SaveSystem.IComponentStore.html": {
    "href": "api/GrandmaGreen.SaveSystem.IComponentStore.html",
    "title": "Interface IComponentStore",
    "keywords": "Interface IComponentStore The IComponentStore is a wrapper interface for ComponentStores. The purpose of the ComponentStore is to store data at the start of a scene—when data gets loaded–and when gameplay changes any sort of persistent data. Requests for the data stored in the IComponentStore object are handled through IObjectSavers. Namespace : GrandmaGreen.SaveSystem Assembly : cs.temp.dll.dll Syntax public interface IComponentStore Methods GetType() Returns the type of the ComponentStore. Declaration Type GetType() Returns Type Description Type"
  },
  "api/GrandmaGreen.SaveSystem.IObjectSaver.html": {
    "href": "api/GrandmaGreen.SaveSystem.IObjectSaver.html",
    "title": "Interface IObjectSaver",
    "keywords": "Interface IObjectSaver The IObjectSaver interface is a wrapper for ObjectSaver Scriptable Objects, which holds a list of IComponentSavers. IObjectSavers are instantiated and registered by SaveControllers upon awakening in a scene. Importantly, IObjectSavers handle data requests from game interfaces. Other game interfaces request the information, and IObjectSavers retrieve the data from IObjectStores to pass it along. Similarly, IObjectSavers take in new data from game interfaces and updates the IObjectStore appropriately. Namespace : GrandmaGreen.SaveSystem Assembly : cs.temp.dll.dll Syntax public interface IObjectSaver Properties componentStores The component store in question. Declaration List<IComponentStore> componentStores { get; set; } Property Value Type Description List < IComponentStore >"
  },
  "api/GrandmaGreen.SaveSystem.ISaveLoader.html": {
    "href": "api/GrandmaGreen.SaveSystem.ISaveLoader.html",
    "title": "Interface ISaveLoader",
    "keywords": "Interface ISaveLoader The ISaveLoader interface is a wrapper interface used for all SaveLoaders. Namespace : GrandmaGreen.SaveSystem Assembly : cs.temp.dll.dll Syntax public interface ISaveLoader Methods CreateDefaultSaveFile() Recreates save file given new object savers. Declaration void CreateDefaultSaveFile() DeleteAllData() Call this to delete all currently saved data, ie. delete any files. Declaration void DeleteAllData() LoadAllData(ref List<ObjectSaver>) Call this to load all relevant scene data. Declaration void LoadAllData(ref List<ObjectSaver> objectSavers) Parameters Type Name Description List < ObjectSaver > objectSavers SaveAllData() Call this to save data during auto save or upon game pause. Declaration void SaveAllData()"
  },
  "api/GrandmaGreen.SaveSystem.JSONSaveLoader.html": {
    "href": "api/GrandmaGreen.SaveSystem.JSONSaveLoader.html",
    "title": "Class JSONSaveLoader",
    "keywords": "Class JSONSaveLoader The JSONSaveLoader was designed specifically to serialize and deserialize JSON files ONLY. This is used largely for internal testing and readable save files, but can be converted to BSON as needed. Inheritance Object JSONSaveLoader Implements ISaveLoader Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : GrandmaGreen.SaveSystem Assembly : cs.temp.dll.dll Syntax public class JSONSaveLoader : ISaveLoader Constructors JSONSaveLoader(SaveController) Declaration public JSONSaveLoader(SaveController saveController) Parameters Type Name Description SaveController saveController Methods CreateDefaultSaveFile() Declaration public void CreateDefaultSaveFile() DeleteAllData() Fully deletes current save file. Declaration public void DeleteAllData() LoadAllData(ref List<ObjectSaver>) Declaration public void LoadAllData(ref List<ObjectSaver> objectSavers) Parameters Type Name Description List < ObjectSaver > objectSavers SaveAllData() Declaration public void SaveAllData() Implements ISaveLoader"
  },
  "api/GrandmaGreen.SaveSystem.ObjectSaver.html": {
    "href": "api/GrandmaGreen.SaveSystem.ObjectSaver.html",
    "title": "Class ObjectSaver",
    "keywords": "Class ObjectSaver The ObjectSaver interfaces with game systems directly when new data is added, changed, or removed as player's navigate the game. It is a ScriptableObject that is the core of the save system, and was designed to be editor friendly. They store pure data. Inheritance Object ObjectSaver Implements IObjectSaver Namespace : GrandmaGreen.SaveSystem Assembly : cs.temp.dll.dll Syntax public class ObjectSaver : ScriptableObject, IObjectSaver Fields ID Identifier number used to identify the ObjectSaver during saving and loading operations. As the hash depends on the asset's file name, no two ObjectSavers should be named alike. Declaration public string ID Field Value Type Description String saveController The reference to the game's SaveController, which it communicates with to present internal updates. Declaration public SaveController saveController Field Value Type Description SaveController Properties componentStores The component stores in question. Declaration public List<IComponentStore> componentStores { get; set; } Property Value Type Description List < IComponentStore > Methods AddComponent<T>(Int32, T) Adds a component to the appropriate ComponentStore. Stored internally, marked for update, then saved by the SaveController. Wrapper for the corresponding function in the ComponentStore. This interfaces directly with game systems. Declaration public bool AddComponent<T>(int index, T component) where T : struct Parameters Type Name Description Int32 index Optional index parameter to insert a component at the given index. T component Returns Type Description Boolean Type Parameters Name Description T CreateNewStore(Type) Creates a given ComponentStore for each ObjectSaver ahead of time. This is done through the Unity Editor. Utilizes reflection. The Type must be a C# data type (ie. strings, ints, structs) or it will get rejected. Declaration public void CreateNewStore(Type myType) Parameters Type Name Description Type myType CreateNewStore<T>() Declaration public void CreateNewStore<T>() where T : struct Type Parameters Name Description T GetComponentStore<T>() Returns a component store of a given type, if it exists. Declaration public IComponentStore GetComponentStore<T>() where T : struct Returns Type Description IComponentStore Type Parameters Name Description T OnEnable() Initializes member variables upon enabling. Declaration public void OnEnable() RemoveComponent<T>(Int32, T) Removes a component from the appropriate ComponentStore. Stored internally, then saved by the SaveController. Wrapper for the corresponding function in the ComponentStore. This interfaces directly with game systems. Declaration public bool RemoveComponent<T>(int index, T component) where T : struct Parameters Type Name Description Int32 index Index for moments where the index of the object is known. -1 signifies that it should use an equality based comparison to find the component (no index available). T component Returns Type Description Boolean Type Parameters Name Description T RequestData<T>(Int32, ref T) Declaration public bool RequestData<T>(int index, ref T component) where T : struct Parameters Type Name Description Int32 index T component Returns Type Description Boolean Type Parameters Name Description T Set(SaveController, ObjectSaver) Used to set the data with information loaded from the save file. It also sets the newly instantiated SaveController. Declaration public void Set(SaveController newSaveController, ObjectSaver os) Parameters Type Name Description SaveController newSaveController ObjectSaver os UpdateValue<T>(Int32, T) Updates the value of the given component. Declaration public bool UpdateValue<T>(int index, T component) where T : struct Parameters Type Name Description Int32 index Used to find the index of the component. If -1 is given, it searches for the component based on equality search (no index available). T component The value to update it with. Returns Type Description Boolean Type Parameters Name Description T Implements IObjectSaver"
  },
  "api/GrandmaGreen.SaveSystem.SaveController.html": {
    "href": "api/GrandmaGreen.SaveSystem.SaveController.html",
    "title": "Class SaveController",
    "keywords": "Class SaveController The SaveController is a purely scripted C# class that gets reinstantiated everytime the game is loaded. The SaveController interfaces directly with SaveLoaders of various types as necessary. When the SaveManager calls for an AutoSave, the SaveController pings each SaveLoader to tell it to save the relevant data. Inheritance Object SaveController Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : GrandmaGreen.SaveSystem Assembly : cs.temp.dll.dll Syntax public class SaveController Constructors SaveController() Second initializer, used mainly to support data deletion and usage of the controller that involves no data updating. Declaration public SaveController() SaveController(List<ObjectSaver>) Initializes with a list of object savers, which sets the internal list of object savers. This list changes itself as the scenes load. Declaration public SaveController(List<ObjectSaver> initialObjectSaverList) Parameters Type Name Description List < ObjectSaver > initialObjectSaverList Fields toBeSaved Every time an ObjectSaver gets \"dirtied,\" ie. a change is made to its contents, it adds itself to the toBeSaved list. This queues it up for saving at the next call. Declaration public List<ObjectSaver> toBeSaved Field Value Type Description List < ObjectSaver > Methods AutoSave() Called as necessary, primarily on an interval (determined by the Save Manager) or when the game is paused. Declaration public void AutoSave() CreateNewDefaultSaveFile() Creates new default save file for each save loader. Declaration public void CreateNewDefaultSaveFile() DeleteAllData() Deletes all data in all save loaders. Declaration public void DeleteAllData()"
  },
  "api/GrandmaGreen.SaveSystem.SaveManager.html": {
    "href": "api/GrandmaGreen.SaveSystem.SaveManager.html",
    "title": "Class SaveManager",
    "keywords": "Class SaveManager The SaveManager class is in charge of high level saving. It is the only part of the save system that lives in the game. Upon awakening, it instantiates a new SaveController. It also tracks the auto save intervals, then pings the SaveController at appropriate moments. The SaveManager also stores an internal list of every ObjectSaver relevant to the whole game. Inheritance Object SaveManager Namespace : GrandmaGreen.SaveSystem Assembly : cs.temp.dll.dll Syntax public class SaveManager : MonoBehaviour Methods Awake() Declaration public void Awake() OnDestroy() Declaration public void OnDestroy() TriggerAddNewComponentToDefault(ObjectSaver) Editor only—creates a new default save file out of any developer adjustments. Run from the prefab. Declaration public void TriggerAddNewComponentToDefault(ObjectSaver objectSaver) Parameters Type Name Description ObjectSaver objectSaver TriggerDeleteAllData() Wipe the player's saved data. Declaration public void TriggerDeleteAllData() TriggerSave() Triggers the SaveController AutoSave function. Declaration public void TriggerSave() Update() On Update, the save manager performs a check to see if the game must be saved. The game is auto saved after certain predetermined time intervals. Declaration public void Update()"
  },
  "api/GrandmaGreen.SellingItemController.html": {
    "href": "api/GrandmaGreen.SellingItemController.html",
    "title": "Class SellingItemController",
    "keywords": "Class SellingItemController Inheritance Object SellingItemController Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class SellingItemController Constructors SellingItemController(SellingUIDisplay) Declaration public SellingItemController(SellingUIDisplay owner) Parameters Type Name Description SellingUIDisplay owner Fields currentQuantity Declaration public int currentQuantity Field Value Type Description Int32 item Declaration public IInventoryItem item Field Value Type Description IInventoryItem Methods OnCancelClicked(ClickEvent) Declaration public void OnCancelClicked(ClickEvent ce) Parameters Type Name Description ClickEvent ce SetBadgeSize() Declaration public void SetBadgeSize() SetItemData(VisualElement, IInventoryItem, Sprite, Int32, Int32) Declaration public void SetItemData(VisualElement ve, IInventoryItem newItem, Sprite s, int basePrice, int itemQuantity) Parameters Type Name Description VisualElement ve IInventoryItem newItem Sprite s Int32 basePrice Int32 itemQuantity"
  },
  "api/GrandmaGreen.SellingUIDisplay.html": {
    "href": "api/GrandmaGreen.SellingUIDisplay.html",
    "title": "Class SellingUIDisplay",
    "keywords": "Class SellingUIDisplay Inheritance Object UIDisplayBase SellingUIDisplay Inherited Members UIDisplayBase.m_rootVisualElement UIDisplayBase.onPanelOpened UIDisplayBase.onPanelClosed UIDisplayBase.Awake() UIDisplayBase.Load() UIDisplayBase.Unload() UIDisplayBase.RegisterButtonCallback(String, Action) UIDisplayBase.RegisterButtonCallbackWithClose(String, Action) Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class SellingUIDisplay : UIDisplayBase Fields inventoryUI Declaration public TabbedInventory inventoryUI Field Value Type Description TabbedInventory m_collections Declaration public CollectionsSO m_collections Field Value Type Description CollectionsSO sellingItemTemplate Declaration public VisualTreeAsset sellingItemTemplate Field Value Type Description VisualTreeAsset Methods AddItem(IInventoryItem) Declaration public void AddItem(IInventoryItem item) Parameters Type Name Description IInventoryItem item AdjustItemQuantity(IInventoryItem, Int32) Declaration public void AdjustItemQuantity(IInventoryItem item, int quantity) Parameters Type Name Description IInventoryItem item Int32 quantity AdjustSalesTotal(Boolean, Int32) Declaration public void AdjustSalesTotal(bool isBeingAdded, int price) Parameters Type Name Description Boolean isBeingAdded Int32 price CloseUI() Declaration public override void CloseUI() Overrides UIDisplayBase.CloseUI() IsInBounds(Vector3) Declaration public bool IsInBounds(Vector3 itemPosition) Parameters Type Name Description Vector3 itemPosition Returns Type Description Boolean OpenUI() Declaration public override void OpenUI() Overrides UIDisplayBase.OpenUI() RemoveItem(IInventoryItem) Declaration public void RemoveItem(IInventoryItem item) Parameters Type Name Description IInventoryItem item SellItems() Declaration public void SellItems()"
  },
  "api/GrandmaGreen.SettingsSet.html": {
    "href": "api/GrandmaGreen.SettingsSet.html",
    "title": "Struct SettingsSet",
    "keywords": "Struct SettingsSet Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax [Serializable] public struct SettingsSet Fields batterySaver Declaration public bool batterySaver Field Value Type Description Boolean masterVolume Declaration public float masterVolume Field Value Type Description Single musicVolume Declaration public float musicVolume Field Value Type Description Single sfxVolume Declaration public float sfxVolume Field Value Type Description Single"
  },
  "api/GrandmaGreen.SettingsUIDisplay.html": {
    "href": "api/GrandmaGreen.SettingsUIDisplay.html",
    "title": "Class SettingsUIDisplay",
    "keywords": "Class SettingsUIDisplay Inheritance Object UIDisplayBase SettingsUIDisplay Inherited Members UIDisplayBase.m_rootVisualElement UIDisplayBase.onPanelOpened UIDisplayBase.onPanelClosed UIDisplayBase.Awake() UIDisplayBase.Load() UIDisplayBase.Unload() UIDisplayBase.RegisterButtonCallback(String, Action) UIDisplayBase.RegisterButtonCallbackWithClose(String, Action) Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class SettingsUIDisplay : UIDisplayBase Fields closeSFX Declaration public SpookuleleAudio.ASoundContainer closeSFX Field Value Type Description SpookuleleAudio.ASoundContainer gameSettingsData Declaration public GameSettingsData gameSettingsData Field Value Type Description GameSettingsData openSFX Declaration public SpookuleleAudio.ASoundContainer openSFX Field Value Type Description SpookuleleAudio.ASoundContainer scrollSFX Declaration public SpookuleleAudio.ASoundContainer scrollSFX Field Value Type Description SpookuleleAudio.ASoundContainer selectSFX Declaration public SpookuleleAudio.ASoundContainer selectSFX Field Value Type Description SpookuleleAudio.ASoundContainer Methods CloseUI() Declaration public override void CloseUI() Overrides UIDisplayBase.CloseUI() OpenUI() Declaration public override void OpenUI() Overrides UIDisplayBase.OpenUI() Start() Declaration public void Start()"
  },
  "api/GrandmaGreen.ShopkeeperMenu.html": {
    "href": "api/GrandmaGreen.ShopkeeperMenu.html",
    "title": "Class ShopkeeperMenu",
    "keywords": "Class ShopkeeperMenu Inheritance Object UIDisplayBase ShopkeeperMenu Inherited Members UIDisplayBase.m_rootVisualElement UIDisplayBase.onPanelOpened UIDisplayBase.onPanelClosed UIDisplayBase.Awake() UIDisplayBase.Unload() UIDisplayBase.RegisterButtonCallback(String, Action) UIDisplayBase.RegisterButtonCallbackWithClose(String, Action) Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class ShopkeeperMenu : UIDisplayBase Fields cameraZoom Camera zoom on touch. Declaration public CameraZoom cameraZoom Field Value Type Description CameraZoom dialogueScript Declaration public Dialogueable dialogueScript Field Value Type Description Dialogueable player Declaration public GameObject player Field Value Type Description GameObject sellingUI Declaration public SellingUIDisplay sellingUI Field Value Type Description SellingUIDisplay shopUI Shopping UI. Declaration public ShoppingUI shopUI Field Value Type Description ShoppingUI Methods CloseUI() Declaration public override void CloseUI() Overrides UIDisplayBase.CloseUI() HandleTap() Declaration public void HandleTap() Load() Declaration public override void Load() Overrides UIDisplayBase.Load() OnDialogueTrigger() Declaration public void OnDialogueTrigger() OnSellTrigger() Declaration public void OnSellTrigger() OnShopTrigger() Declaration public void OnShopTrigger() OpenUI() Declaration public override void OpenUI() Overrides UIDisplayBase.OpenUI() ReleaseShopkeeper() Declaration public void ReleaseShopkeeper() SetLocation(Vector3) Declaration public void SetLocation(Vector3 worldPosition) Parameters Type Name Description Vector3 worldPosition SetSpecialDialogue(String) Declaration public void SetSpecialDialogue(string node) Parameters Type Name Description String node ToggleMenu(Boolean) Declaration public void ToggleMenu(bool isOpen) Parameters Type Name Description Boolean isOpen"
  },
  "api/GrandmaGreen.Shopkeeping.DecorShopUIController.html": {
    "href": "api/GrandmaGreen.Shopkeeping.DecorShopUIController.html",
    "title": "Class DecorShopUIController",
    "keywords": "Class DecorShopUIController Creates List of each item that will show up this cycle for the Decor Shop UI to pull from Inheritance Object DecorShopUIController Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : GrandmaGreen.Shopkeeping Assembly : cs.temp.dll.dll Syntax public class DecorShopUIController Constructors DecorShopUIController(CollectionsSO) Pass in the collections SO. List will need to retrieve base costs of each item from the collections Declaration public DecorShopUIController(CollectionsSO collectionsinput) Parameters Type Name Description CollectionsSO collectionsinput Methods GetDecorList() Get List containing all items in the decor shop this cycle Declaration public List<ShopItem> GetDecorList() Returns Type Description List < ShopItem > GetSellingPriceById(IInventoryItem) Get the selling price of an item in player's inventory in the decor shop Declaration public int GetSellingPriceById(IInventoryItem item) Parameters Type Name Description IInventoryItem item Returns Type Description Int32 IsSellable(IInventoryItem) Returns true if item is a decor item, otherwise returns false Declaration public bool IsSellable(IInventoryItem item) Parameters Type Name Description IInventoryItem item Returns Type Description Boolean UnlockGardenExpansion() Call this function whenever the player buys a garden expansion. Updates so that the next cycle will have the next garden expansion, or if all expansions have been unlocked the slot will be replaced by a fixture. Declaration public void UnlockGardenExpansion() UpdateCycle() Each new cycle, call this function to update the decor shopkeeping system's cycle count Declaration public void UpdateCycle() UpgradeDecorShop() Trigger the shop upgrade, which will give player upgraded tools, increase seed stocks from 3 to 5, increase max garden expansion to 4 Declaration public void UpgradeDecorShop()"
  },
  "api/GrandmaGreen.Shopkeeping.GardeningShopUIController.html": {
    "href": "api/GrandmaGreen.Shopkeeping.GardeningShopUIController.html",
    "title": "Class GardeningShopUIController",
    "keywords": "Class GardeningShopUIController Inheritance Object GardeningShopUIController Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : GrandmaGreen.Shopkeeping Assembly : cs.temp.dll.dll Syntax public class GardeningShopUIController Constructors GardeningShopUIController(CollectionsSO) Pass in the collections SO. Declaration public GardeningShopUIController(CollectionsSO collectionsinput) Parameters Type Name Description CollectionsSO collectionsinput Methods GetGardenList() Declaration public List<ShopItem> GetGardenList() Returns Type Description List < ShopItem > GetSellingPriceById(IInventoryItem) Get the selling price of an item in player's inventory in the gardening shop Declaration public int GetSellingPriceById(IInventoryItem item) Parameters Type Name Description IInventoryItem item Returns Type Description Int32 IsSellable(IInventoryItem) Returns if the given item is sellable or not. If seed or plant, returns true. otherwise false. Declaration public bool IsSellable(IInventoryItem item) Parameters Type Name Description IInventoryItem item Returns Type Description Boolean UpdateCycle() Each new cycle, call this function to update the gardening shopkeeping system's cycle count If exceeds Declaration public void UpdateCycle()"
  },
  "api/GrandmaGreen.Shopkeeping.html": {
    "href": "api/GrandmaGreen.Shopkeeping.html",
    "title": "Namespace GrandmaGreen.Shopkeeping",
    "keywords": "Namespace GrandmaGreen.Shopkeeping Classes DecorShopUIController Creates List of each item that will show up this cycle for the Decor Shop UI to pull from GardeningShopUIController Structs ShopItem"
  },
  "api/GrandmaGreen.Shopkeeping.ShopItem.html": {
    "href": "api/GrandmaGreen.Shopkeeping.ShopItem.html",
    "title": "Struct ShopItem",
    "keywords": "Struct ShopItem Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : GrandmaGreen.Shopkeeping Assembly : cs.temp.dll.dll Syntax public struct ShopItem Fields baseCost Declaration public int baseCost Field Value Type Description Int32 myItem Declaration public IInventoryItem myItem Field Value Type Description IInventoryItem name Declaration public string name Field Value Type Description String quantity Declaration public int quantity Field Value Type Description Int32 sprite Declaration public Sprite sprite Field Value Type Description Sprite"
  },
  "api/GrandmaGreen.SiblingRuleTile.html": {
    "href": "api/GrandmaGreen.SiblingRuleTile.html",
    "title": "Class SiblingRuleTile",
    "keywords": "Class SiblingRuleTile Inheritance Object SiblingRuleTile Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class SiblingRuleTile : RuleTile Fields sibingGroup Declaration public SiblingRuleTile.SibingGroup sibingGroup Field Value Type Description SiblingRuleTile.SibingGroup Methods RuleMatch(Int32, TileBase) Declaration public override bool RuleMatch(int neighbor, TileBase other) Parameters Type Name Description Int32 neighbor TileBase other Returns Type Description Boolean"
  },
  "api/GrandmaGreen.SiblingRuleTile.SibingGroup.html": {
    "href": "api/GrandmaGreen.SiblingRuleTile.SibingGroup.html",
    "title": "Enum SiblingRuleTile.SibingGroup",
    "keywords": "Enum SiblingRuleTile.SibingGroup Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public enum SibingGroup Fields Name Description Blend Regular"
  },
  "api/GrandmaGreen.SlideData.html": {
    "href": "api/GrandmaGreen.SlideData.html",
    "title": "Struct SlideData",
    "keywords": "Struct SlideData Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax [Serializable] public struct SlideData Fields caption Declaration public string caption Field Value Type Description String image Declaration public Sprite image Field Value Type Description Sprite"
  },
  "api/GrandmaGreen.SlideshowData.html": {
    "href": "api/GrandmaGreen.SlideshowData.html",
    "title": "Class SlideshowData",
    "keywords": "Class SlideshowData Inheritance Object SlideshowData Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class SlideshowData : ScriptableObject Fields slides Declaration public List<SlideData> slides Field Value Type Description List < SlideData > title Declaration public string title Field Value Type Description String"
  },
  "api/GrandmaGreen.StartScreenUIDisplay.html": {
    "href": "api/GrandmaGreen.StartScreenUIDisplay.html",
    "title": "Class StartScreenUIDisplay",
    "keywords": "Class StartScreenUIDisplay Inheritance Object UIDisplayBase StartScreenUIDisplay Inherited Members UIDisplayBase.m_rootVisualElement UIDisplayBase.onPanelOpened UIDisplayBase.onPanelClosed UIDisplayBase.Awake() UIDisplayBase.Load() UIDisplayBase.Unload() UIDisplayBase.OpenUI() UIDisplayBase.CloseUI() UIDisplayBase.RegisterButtonCallback(String, Action) UIDisplayBase.RegisterButtonCallbackWithClose(String, Action) Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class StartScreenUIDisplay : UIDisplayBase Fields m_settingsUIDisplay Declaration public SettingsUIDisplay m_settingsUIDisplay Field Value Type Description SettingsUIDisplay startSFX Declaration public SpookuleleAudio.ASoundContainer startSFX Field Value Type Description SpookuleleAudio.ASoundContainer Methods Start() Declaration public void Start()"
  },
  "api/GrandmaGreen.Storyline.html": {
    "href": "api/GrandmaGreen.Storyline.html",
    "title": "Class Storyline",
    "keywords": "Class Storyline Inheritance Object Storyline Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class Storyline : ScriptableObject Fields requirements Declaration public StoryRequirement[] requirements Field Value Type Description StoryRequirement [] Properties currentState Declaration public StoryState currentState { get; } Property Value Type Description StoryState progress Declaration public uint progress { get; } Property Value Type Description UInt32 Methods ClearStory() Declaration public void ClearStory() CompleteStory() Declaration public void CompleteStory() ProgressStory() Declaration public void ProgressStory() RegressStory() Declaration public void RegressStory() SetProgress(UInt32, Boolean) Declaration public void SetProgress(uint newProgress, bool retroactive = false) Parameters Type Name Description UInt32 newProgress Boolean retroactive StartStory() Declaration public void StartStory() Events onCompletion Declaration public event Action<Storyline> onCompletion Event Type Type Description Action < Storyline > onProgress Declaration public event Action<Storyline> onProgress Event Type Type Description Action < Storyline > onRegress Declaration public event Action<Storyline> onRegress Event Type Type Description Action < Storyline > onStart Declaration public event Action<Storyline> onStart Event Type Type Description Action < Storyline >"
  },
  "api/GrandmaGreen.StorylineDataStore.html": {
    "href": "api/GrandmaGreen.StorylineDataStore.html",
    "title": "Class StorylineDataStore",
    "keywords": "Class StorylineDataStore Inheritance Object StorylineDataStore Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class StorylineDataStore : ObjectSaver Fields storylineSet Declaration public List<Storyline> storylineSet Field Value Type Description List < Storyline > Methods Initalize() Declaration public void Initalize() LoadStorylineProgress() Declaration public void LoadStorylineProgress() Release() Declaration public void Release() UpdateStorylineProgress(Storyline) Declaration public void UpdateStorylineProgress(Storyline storyline) Parameters Type Name Description Storyline storyline"
  },
  "api/GrandmaGreen.StoryRequirement.html": {
    "href": "api/GrandmaGreen.StoryRequirement.html",
    "title": "Class StoryRequirement",
    "keywords": "Class StoryRequirement Inheritance Object StoryRequirement Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax [Serializable] public class StoryRequirement Fields currentState Declaration public StoryState currentState Field Value Type Description StoryState flag Declaration public GameEventFlag flag Field Value Type Description GameEventFlag Methods ActivateRequirement(Boolean) Declaration public void ActivateRequirement(bool retroactive = false) Parameters Type Name Description Boolean retroactive CompleteRequirement() Declaration public void CompleteRequirement() Events onActivation Declaration public event Action onActivation Event Type Type Description Action onCompletion Declaration public event Action onCompletion Event Type Type Description Action"
  },
  "api/GrandmaGreen.StoryState.html": {
    "href": "api/GrandmaGreen.StoryState.html",
    "title": "Enum StoryState",
    "keywords": "Enum StoryState Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public enum StoryState Fields Name Description ACTIVE COMPLETED INACTIVE"
  },
  "api/GrandmaGreen.TapHereUI.html": {
    "href": "api/GrandmaGreen.TapHereUI.html",
    "title": "Class TapHereUI",
    "keywords": "Class TapHereUI Inheritance Object TapHereUI Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class TapHereUI : MonoBehaviour"
  },
  "api/GrandmaGreen.TileType.html": {
    "href": "api/GrandmaGreen.TileType.html",
    "title": "Class TileType",
    "keywords": "Class TileType Inheritance Object TileType Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class TileType : ScriptableObject Fields isOccupied Declaration public bool isOccupied Field Value Type Description Boolean isPathable Declaration public bool isPathable Field Value Type Description Boolean isPlantable Declaration public bool isPlantable Field Value Type Description Boolean isPlottable Declaration public bool isPlottable Field Value Type Description Boolean tile Declaration public TileBase tile Field Value Type Description TileBase"
  },
  "api/GrandmaGreen.TimeLayer.html": {
    "href": "api/GrandmaGreen.TimeLayer.html",
    "title": "Namespace GrandmaGreen.TimeLayer",
    "keywords": "Namespace GrandmaGreen.TimeLayer Classes TimeLayer TODO: way to animate scale TimeLayerClock Interfaces ITimeLayer"
  },
  "api/GrandmaGreen.TimeLayer.ITimeLayer.html": {
    "href": "api/GrandmaGreen.TimeLayer.ITimeLayer.html",
    "title": "Interface ITimeLayer",
    "keywords": "Interface ITimeLayer Namespace : GrandmaGreen.TimeLayer Assembly : cs.temp.dll.dll Syntax public interface ITimeLayer Properties paused Declaration bool paused { get; } Property Value Type Description Boolean tickSeconds Declaration float tickSeconds { get; } Property Value Type Description Single Methods Pause() Declaration void Pause() Resume(Boolean) Declaration void Resume(bool tickAccumulated) Parameters Type Name Description Boolean tickAccumulated Tick(Double) Declaration void Tick(double deltaTime) Parameters Type Name Description Double deltaTime Events onTick Declaration event Action<int> onTick Event Type Type Description Action < Int32 >"
  },
  "api/GrandmaGreen.TimeLayer.TimeLayer.html": {
    "href": "api/GrandmaGreen.TimeLayer.TimeLayer.html",
    "title": "Class TimeLayer",
    "keywords": "Class TimeLayer TODO: way to animate scale Inheritance Object TimeLayer Implements ITimeLayer Namespace : GrandmaGreen.TimeLayer Assembly : cs.temp.dll.dll Syntax public class TimeLayer : ScriptableObject, ITimeLayer Properties paused Declaration public bool paused { get; } Property Value Type Description Boolean tickSeconds Declaration public float tickSeconds { get; } Property Value Type Description Single Methods Pause() Declaration public void Pause() Resume(Boolean) Declaration public void Resume(bool tickAccumulated = false) Parameters Type Name Description Boolean tickAccumulated Tick(Double) Declaration public void Tick(double deltaTime) Parameters Type Name Description Double deltaTime Events onTick Declaration public event Action<int> onTick Event Type Type Description Action < Int32 > Implements ITimeLayer"
  },
  "api/GrandmaGreen.TimeLayer.TimeLayerClock.html": {
    "href": "api/GrandmaGreen.TimeLayer.TimeLayerClock.html",
    "title": "Class TimeLayerClock",
    "keywords": "Class TimeLayerClock Inheritance Object TimeLayerClock Namespace : GrandmaGreen.TimeLayer Assembly : cs.temp.dll.dll Syntax public class TimeLayerClock : ObjectSaver Methods InternetDateTime() Declaration public static DateTime InternetDateTime() Returns Type Description DateTime LoadPreviousSessionEndTime() Declaration public void LoadPreviousSessionEndTime() SaveCurrentDateTime() Declaration public void SaveCurrentDateTime() SetClock(Boolean) Declaration public void SetClock(bool checkInternetTime = true) Parameters Type Name Description Boolean checkInternetTime TickClock(Double) Declaration public void TickClock(double deltaTime) Parameters Type Name Description Double deltaTime"
  },
  "api/GrandmaGreen.ToolTest2.html": {
    "href": "api/GrandmaGreen.ToolTest2.html",
    "title": "Class ToolTest2",
    "keywords": "Class ToolTest2 Inheritance Object ToolTest2 Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class ToolTest2 : MonoBehaviour Methods SetTools(String) Declaration public void SetTools(string name) Parameters Type Name Description String name"
  },
  "api/GrandmaGreen.TownSquareTutorialController.html": {
    "href": "api/GrandmaGreen.TownSquareTutorialController.html",
    "title": "Class TownSquareTutorialController",
    "keywords": "Class TownSquareTutorialController Inheritance Object TownSquareTutorialController Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class TownSquareTutorialController : MonoBehaviour Fields bulletinBoardTapHere Declaration public TapHereUI bulletinBoardTapHere Field Value Type Description TapHereUI bulletinBoardUI Declaration public BulletinBoardUIDisplay bulletinBoardUI Field Value Type Description BulletinBoardUIDisplay gardenTapHere Declaration public TapHereUI gardenTapHere Field Value Type Description TapHereUI onInteractionCompleteFlag Declaration public Core.Utilities.GameEventFlag onInteractionCompleteFlag Field Value Type Description Core.Utilities.GameEventFlag phoebeCrossbreedingNode Declaration public string phoebeCrossbreedingNode Field Value Type Description String phoebeIntroNode Declaration public string phoebeIntroNode Field Value Type Description String phoebeTapHere Declaration public TapHereUI phoebeTapHere Field Value Type Description TapHereUI shopkeeperMenu Declaration public ShopkeeperMenu shopkeeperMenu Field Value Type Description ShopkeeperMenu shoppingUI Declaration public ShoppingUI shoppingUI Field Value Type Description ShoppingUI tutorialStateData Declaration public TutorialStateData tutorialStateData Field Value Type Description TutorialStateData tutorialUI Declaration public TutorialUIDisplay tutorialUI Field Value Type Description TutorialUIDisplay"
  },
  "api/GrandmaGreen.TutorialData.html": {
    "href": "api/GrandmaGreen.TutorialData.html",
    "title": "Class TutorialData",
    "keywords": "Class TutorialData Inheritance Object TutorialData Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class TutorialData : ScriptableObject Fields slideshowData Declaration public SlideshowData[] slideshowData Field Value Type Description SlideshowData [] storylineData Declaration public Storyline storylineData Field Value Type Description Storyline tutorialName Declaration public string tutorialName Field Value Type Description String Properties isActive Declaration public bool isActive { get; } Property Value Type Description Boolean isComplete Declaration public bool isComplete { get; } Property Value Type Description Boolean length Declaration public int length { get; } Property Value Type Description Int32 progress Declaration public uint progress { get; } Property Value Type Description UInt32 Events onPlaySlideshow Declaration public event Action<SlideshowData> onPlaySlideshow Event Type Type Description Action < SlideshowData >"
  },
  "api/GrandmaGreen.TutorialStateData.html": {
    "href": "api/GrandmaGreen.TutorialStateData.html",
    "title": "Class TutorialStateData",
    "keywords": "Class TutorialStateData Inheritance Object TutorialStateData Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class TutorialStateData : ScriptableObject Fields coreLoopTutorial Declaration public TutorialData coreLoopTutorial Field Value Type Description TutorialData crossBreedingTutorial Declaration public TutorialData crossBreedingTutorial Field Value Type Description TutorialData gardenToolSet Declaration public GardenToolSet gardenToolSet Field Value Type Description GardenToolSet golemTutorial Declaration public TutorialData golemTutorial Field Value Type Description TutorialData onCrossbreedingFlag Declaration public GameEventFlag onCrossbreedingFlag Field Value Type Description GameEventFlag onCultivisionFlag Declaration public GameEventFlag onCultivisionFlag Field Value Type Description GameEventFlag onGardeningFlag Declaration public GameEventFlag onGardeningFlag Field Value Type Description GameEventFlag onGolemEvolvedFlag Declaration public GameEventFlag onGolemEvolvedFlag Field Value Type Description GameEventFlag onGolemSpawnedFlag Declaration public GameEventFlag onGolemSpawnedFlag Field Value Type Description GameEventFlag onGolemTalkedFlag Declaration public GameEventFlag onGolemTalkedFlag Field Value Type Description GameEventFlag onGolemTaskFlag Declaration public GameEventFlag onGolemTaskFlag Field Value Type Description GameEventFlag onHarvestFlag Declaration public GameEventFlag onHarvestFlag Field Value Type Description GameEventFlag onInventoryFlag Declaration public GameEventFlag onInventoryFlag Field Value Type Description GameEventFlag onMoveFlag Declaration public GameEventFlag onMoveFlag Field Value Type Description GameEventFlag onStartFlag Declaration public GameEventFlag onStartFlag Field Value Type Description GameEventFlag onToolMenuFlag Declaration public GameEventFlag onToolMenuFlag Field Value Type Description GameEventFlag playerController Declaration public EntityController playerController Field Value Type Description EntityController playerToolData Declaration public PlayerToolData playerToolData Field Value Type Description PlayerToolData tutorialEnabled Declaration public bool tutorialEnabled Field Value Type Description Boolean Methods AllTutorialsCompleted() Declaration public bool AllTutorialsCompleted() Returns Type Description Boolean Initalize() Declaration public void Initalize() PlaySlideshow(SlideshowData) Declaration public void PlaySlideshow(SlideshowData slideshowData) Parameters Type Name Description SlideshowData slideshowData Release() Declaration public void Release() Events disableLevelTransition Declaration public event Action disableLevelTransition Event Type Type Description Action disableSeedPacket Declaration public event Action disableSeedPacket Event Type Type Description Action disableTools Declaration public event Action disableTools Event Type Type Description Action disableTrowel Declaration public event Action disableTrowel Event Type Type Description Action disableWatering Declaration public event Action disableWatering Event Type Type Description Action enableInventory Declaration public event Action enableInventory Event Type Type Description Action enableLevelTransition Declaration public event Action enableLevelTransition Event Type Type Description Action enableSeedPacket Declaration public event Action enableSeedPacket Event Type Type Description Action enableTools Declaration public event Action enableTools Event Type Type Description Action enableTrowel Declaration public event Action enableTrowel Event Type Type Description Action enableWatering Declaration public event Action enableWatering Event Type Type Description Action explainEvolvedGolem Declaration public event Action explainEvolvedGolem Event Type Type Description Action introduceFirstGolem Declaration public event Action introduceFirstGolem Event Type Type Description Action onPlaySlideshow Declaration public event Action<SlideshowData> onPlaySlideshow Event Type Type Description Action < SlideshowData > tapHereExit Declaration public event Action tapHereExit Event Type Type Description Action tapHereGrandma Declaration public event Action tapHereGrandma Event Type Type Description Action tapHereMailbox Declaration public event Action tapHereMailbox Event Type Type Description Action"
  },
  "api/GrandmaGreen.TutorialUIDisplay.html": {
    "href": "api/GrandmaGreen.TutorialUIDisplay.html",
    "title": "Class TutorialUIDisplay",
    "keywords": "Class TutorialUIDisplay Inheritance Object UIDisplayBase TutorialUIDisplay Inherited Members UIDisplayBase.m_rootVisualElement UIDisplayBase.onPanelOpened UIDisplayBase.onPanelClosed UIDisplayBase.Awake() UIDisplayBase.Unload() UIDisplayBase.RegisterButtonCallback(String, Action) UIDisplayBase.RegisterButtonCallbackWithClose(String, Action) Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class TutorialUIDisplay : UIDisplayBase Methods CloseUI() Declaration public override void CloseUI() Overrides UIDisplayBase.CloseUI() Load() Declaration public override void Load() Overrides UIDisplayBase.Load() OpenUI() Declaration public override void OpenUI() Overrides UIDisplayBase.OpenUI() SetUpSlideshow(SlideshowData) Declaration public void SetUpSlideshow(SlideshowData data) Parameters Type Name Description SlideshowData data"
  },
  "api/GrandmaGreen.UI.BaseUIController.html": {
    "href": "api/GrandmaGreen.UI.BaseUIController.html",
    "title": "Class BaseUIController",
    "keywords": "Class BaseUIController Inheritance Object BaseUIController Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : GrandmaGreen.UI Assembly : cs.temp.dll.dll Syntax [Serializable] public class BaseUIController"
  },
  "api/GrandmaGreen.UI.BaseUIDisplay.html": {
    "href": "api/GrandmaGreen.UI.BaseUIDisplay.html",
    "title": "Class BaseUIDisplay",
    "keywords": "Class BaseUIDisplay Inheritance Object BaseUIDisplay Namespace : GrandmaGreen.UI Assembly : cs.temp.dll.dll Syntax public class BaseUIDisplay : MonoBehaviour Properties Controller Declaration public virtual BaseUIController Controller { get; protected set; } Property Value Type Description BaseUIController DisplayEnabled Declaration public virtual bool DisplayEnabled { get; protected set; } Property Value Type Description Boolean DisplayInteractive Declaration public virtual bool DisplayInteractive { get; protected set; } Property Value Type Description Boolean DisplayOpen Declaration public virtual bool DisplayOpen { get; protected set; } Property Value Type Description Boolean PanelTags Declaration public virtual UITag PanelTags { get; protected set; } Property Value Type Description UITag UIDocument Declaration public virtual UIDocument UIDocument { get; protected set; } Property Value Type Description UIDocument Methods ClosePanel() Declaration public void ClosePanel() DisableInteraction() Declaration public void DisableInteraction() DisablePanel() Declaration public void DisablePanel() EnableInteraction() Declaration public void EnableInteraction() EnablePanel() Declaration public void EnablePanel() InitalizePanel() Declaration public virtual void InitalizePanel() InteractionDisabledLogic() Declaration protected virtual void InteractionDisabledLogic() InteractionEnabledLogic() Declaration protected virtual void InteractionEnabledLogic() OnValidate() Declaration protected virtual void OnValidate() OpenPanel() Declaration public void OpenPanel() PanelCloseLogic() Declaration protected virtual void PanelCloseLogic() PanelOpenLogic() Declaration protected virtual void PanelOpenLogic() Events onPanelClosed Declaration public event Action onPanelClosed Event Type Type Description Action onPanelDisabled Declaration public event Action onPanelDisabled Event Type Type Description Action onPanelEnabled Declaration public event Action onPanelEnabled Event Type Type Description Action onPanelOpened Declaration public event Action onPanelOpened Event Type Type Description Action"
  },
  "api/GrandmaGreen.UI.Collections.CollectionsMode.html": {
    "href": "api/GrandmaGreen.UI.Collections.CollectionsMode.html",
    "title": "Enum CollectionsMode",
    "keywords": "Enum CollectionsMode Namespace : GrandmaGreen.UI.Collections Assembly : cs.temp.dll.dll Syntax public enum CollectionsMode Fields Name Description Awards Friends Plants"
  },
  "api/GrandmaGreen.UI.Collections.CollectionUIDisplay.html": {
    "href": "api/GrandmaGreen.UI.Collections.CollectionUIDisplay.html",
    "title": "Class CollectionUIDisplay",
    "keywords": "Class CollectionUIDisplay Inheritance Object UIDisplayBase CollectionUIDisplay Inherited Members UIDisplayBase.m_rootVisualElement UIDisplayBase.onPanelOpened UIDisplayBase.onPanelClosed UIDisplayBase.Awake() UIDisplayBase.CloseUI() UIDisplayBase.RegisterButtonCallback(String, Action) UIDisplayBase.RegisterButtonCallbackWithClose(String, Action) Namespace : GrandmaGreen.UI.Collections Assembly : cs.temp.dll.dll Syntax public class CollectionUIDisplay : UIDisplayBase Fields collectionSaver Declaration public CollectionsSaver collectionSaver Field Value Type Description CollectionsSaver collectionsMode Declaration public CollectionsMode collectionsMode Field Value Type Description CollectionsMode collectionsSO Declaration public CollectionsSO collectionsSO Field Value Type Description CollectionsSO Methods Load() Declaration public override void Load() Overrides UIDisplayBase.Load() OpenUI() Declaration public override void OpenUI() Overrides UIDisplayBase.OpenUI() Unload() Declaration public override void Unload() Overrides UIDisplayBase.Unload() UpdatePlant(PlantCollectionProperties, Boolean) Declaration public void UpdatePlant(PlantCollectionProperties plant, bool isNewPlant = true) Parameters Type Name Description PlantCollectionProperties plant Boolean isNewPlant UpdatePlantInfo(IInventoryItem) Declaration public void UpdatePlantInfo(IInventoryItem item) Parameters Type Name Description IInventoryItem item"
  },
  "api/GrandmaGreen.UI.Collections.CurrentPage.html": {
    "href": "api/GrandmaGreen.UI.Collections.CurrentPage.html",
    "title": "Struct CurrentPage",
    "keywords": "Struct CurrentPage Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : GrandmaGreen.UI.Collections Assembly : cs.temp.dll.dll Syntax public struct CurrentPage Fields displayPage Declaration public string displayPage Field Value Type Description String scrollPage Declaration public string scrollPage Field Value Type Description String"
  },
  "api/GrandmaGreen.UI.Collections.html": {
    "href": "api/GrandmaGreen.UI.Collections.html",
    "title": "Namespace GrandmaGreen.UI.Collections",
    "keywords": "Namespace GrandmaGreen.UI.Collections Classes CollectionUIDisplay TabbedInventory TabbedInventoryController TabbedInventoryItemController Structs CurrentPage Enums CollectionsMode InventoryMode"
  },
  "api/GrandmaGreen.UI.Collections.InventoryMode.html": {
    "href": "api/GrandmaGreen.UI.Collections.InventoryMode.html",
    "title": "Enum InventoryMode",
    "keywords": "Enum InventoryMode Namespace : GrandmaGreen.UI.Collections Assembly : cs.temp.dll.dll Syntax public enum InventoryMode Fields Name Description Customization Default Gifting Selling"
  },
  "api/GrandmaGreen.UI.Collections.TabbedInventory.html": {
    "href": "api/GrandmaGreen.UI.Collections.TabbedInventory.html",
    "title": "Class TabbedInventory",
    "keywords": "Class TabbedInventory Inheritance Object UIDisplayBase TabbedInventory Implements IDraggableContainer Inherited Members UIDisplayBase.m_rootVisualElement UIDisplayBase.onPanelOpened UIDisplayBase.onPanelClosed UIDisplayBase.Awake() UIDisplayBase.RegisterButtonCallback(String, Action) UIDisplayBase.RegisterButtonCallbackWithClose(String, Action) Namespace : GrandmaGreen.UI.Collections Assembly : cs.temp.dll.dll Syntax public class TabbedInventory : UIDisplayBase, IDraggableContainer Fields collectionsSO Declaration public CollectionsSO collectionsSO Field Value Type Description CollectionsSO contentContainerNameSuffix Declaration public const string contentContainerNameSuffix = \"ContentContainer\" Field Value Type Description String contentNameSuffix Declaration public const string contentNameSuffix = \"Content\" Field Value Type Description String currentMode Declaration public InventoryMode currentMode Field Value Type Description InventoryMode inventoryData Declaration public ObjectSaver inventoryData Field Value Type Description ObjectSaver listEntryTemplate Declaration public VisualTreeAsset listEntryTemplate Field Value Type Description VisualTreeAsset playerToolData Declaration public PlayerToolData playerToolData Field Value Type Description PlayerToolData sellingUI Declaration public SellingUIDisplay sellingUI Field Value Type Description SellingUIDisplay soundContainers Declaration public ASoundContainer[] soundContainers Field Value Type Description ASoundContainer [] Properties draggable Declaration public IDraggable draggable { get; set; } Property Value Type Description IDraggable handled Declaration public bool handled { get; set; } Property Value Type Description Boolean pointerStartPosition Declaration public Vector3 pointerStartPosition { get; set; } Property Value Type Description Vector3 threshold Declaration public VisualElement threshold { get; set; } Property Value Type Description VisualElement Methods CloseUI() Declaration public override void CloseUI() Overrides UIDisplayBase.CloseUI() FinishPointer(Int32) Declaration public void FinishPointer(int pointerId) Parameters Type Name Description Int32 pointerId Load() Declaration public override void Load() Overrides UIDisplayBase.Load() OnItemCreated(TabbedInventoryItemController) Declaration public void OnItemCreated(TabbedInventoryItemController itemController) Parameters Type Name Description TabbedInventoryItemController itemController OnSeedEntryClicked(TabbedInventoryItemController) Declaration public void OnSeedEntryClicked(TabbedInventoryItemController itemController) Parameters Type Name Description TabbedInventoryItemController itemController OpenUI() Declaration public override void OpenUI() Overrides UIDisplayBase.OpenUI() PointerDownHandler(PointerDownEvent) Declaration public void PointerDownHandler(PointerDownEvent evt) Parameters Type Name Description PointerDownEvent evt PointerMoveHandler(PointerMoveEvent) Declaration public void PointerMoveHandler(PointerMoveEvent evt) Parameters Type Name Description PointerMoveEvent evt PointerUpHandler(PointerUpEvent) Declaration public void PointerUpHandler(PointerUpEvent evt) Parameters Type Name Description PointerUpEvent evt RebuildAllJars() Declaration public void RebuildAllJars() RebuildJar(IInventoryItem) Declaration public void RebuildJar(IInventoryItem item) Parameters Type Name Description IInventoryItem item Unload() Declaration public override void Unload() Overrides UIDisplayBase.Unload() Implements IDraggableContainer"
  },
  "api/GrandmaGreen.UI.Collections.TabbedInventoryController.html": {
    "href": "api/GrandmaGreen.UI.Collections.TabbedInventoryController.html",
    "title": "Class TabbedInventoryController",
    "keywords": "Class TabbedInventoryController Inheritance Object TabbedInventoryController Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : GrandmaGreen.UI.Collections Assembly : cs.temp.dll.dll Syntax public class TabbedInventoryController Constructors TabbedInventoryController(TabbedInventory, ObjectSaver, CollectionsSO) The TabbedInventoryController is attached to the TabbedInventory UI. It registers and controlls tab switching, as well as loading old and new items into the inventory. Declaration public TabbedInventoryController(TabbedInventory parent, ObjectSaver inventoryData, CollectionsSO collectionsSo) Parameters Type Name Description TabbedInventory parent ObjectSaver inventoryData CollectionsSO collectionsSo Methods InventoryAddDecor(UInt16) Declaration public void InventoryAddDecor(ushort id) Parameters Type Name Description UInt16 id InventoryAddMoney(Int32) Declaration public void InventoryAddMoney(int money) Parameters Type Name Description Int32 money InventoryAddPlant(UInt16, Genotype) Declaration public void InventoryAddPlant(ushort id, Genotype genotype) Parameters Type Name Description UInt16 id Genotype genotype InventoryAddSeed(UInt16, Genotype) Declaration public void InventoryAddSeed(ushort id, Genotype genotype) Parameters Type Name Description UInt16 id Genotype genotype InventoryAddTool(UInt16) Declaration public void InventoryAddTool(ushort id) Parameters Type Name Description UInt16 id InventoryGetMoney() Declaration public int InventoryGetMoney() Returns Type Description Int32 InventoryGetSeedCount(UInt16, Genotype) Declaration public int InventoryGetSeedCount(ushort id, Genotype genotype) Parameters Type Name Description UInt16 id Genotype genotype Returns Type Description Int32 InventoryRemoveDecor(UInt16) Declaration public void InventoryRemoveDecor(ushort id) Parameters Type Name Description UInt16 id InventoryRemoveMoney(Int32) Declaration public void InventoryRemoveMoney(int money) Parameters Type Name Description Int32 money InventoryRemovePlant(UInt16, Genotype) Declaration public void InventoryRemovePlant(ushort id, Genotype genotype) Parameters Type Name Description UInt16 id Genotype genotype InventoryRemoveSeed(UInt16, Genotype) Declaration public void InventoryRemoveSeed(ushort id, Genotype genotype) Parameters Type Name Description UInt16 id Genotype genotype InventoryRemoveTool(UInt16) Declaration public void InventoryRemoveTool(ushort id) Parameters Type Name Description UInt16 id"
  },
  "api/GrandmaGreen.UI.Collections.TabbedInventoryItemController.html": {
    "href": "api/GrandmaGreen.UI.Collections.TabbedInventoryItemController.html",
    "title": "Class TabbedInventoryItemController",
    "keywords": "Class TabbedInventoryItemController Inheritance Object TabbedInventoryItemController Implements IDraggable Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : GrandmaGreen.UI.Collections Assembly : cs.temp.dll.dll Syntax public class TabbedInventoryItemController : IDraggable Constructors TabbedInventoryItemController(Button) Declaration public TabbedInventoryItemController(Button _button) Parameters Type Name Description Button _button Fields inventoryItemData Declaration public IInventoryItem inventoryItemData Field Value Type Description IInventoryItem sprite Declaration public Sprite sprite Field Value Type Description Sprite Properties button Declaration public Button button { get; set; } Property Value Type Description Button startingPosition Declaration public Vector3 startingPosition { get; set; } Property Value Type Description Vector3 Methods SetButtonCallback(Action<TabbedInventoryItemController>) Declaration public void SetButtonCallback(Action<TabbedInventoryItemController> buttonClickCallback) Parameters Type Name Description Action < TabbedInventoryItemController > buttonClickCallback SetInventoryData(IInventoryItem, Sprite) Declaration public void SetInventoryData(IInventoryItem inventoryItem, Sprite _sprite) Parameters Type Name Description IInventoryItem inventoryItem Sprite _sprite SetSizeBadge(Genotype) Declaration public void SetSizeBadge(Genotype genotype) Parameters Type Name Description Genotype genotype Implements IDraggable"
  },
  "api/GrandmaGreen.UI.Golems.GolemMenu.html": {
    "href": "api/GrandmaGreen.UI.Golems.GolemMenu.html",
    "title": "Class GolemMenu",
    "keywords": "Class GolemMenu Inheritance Object UIDisplayBase GolemMenu Inherited Members UIDisplayBase.m_rootVisualElement UIDisplayBase.onPanelOpened UIDisplayBase.onPanelClosed UIDisplayBase.Awake() UIDisplayBase.Load() UIDisplayBase.Unload() UIDisplayBase.OpenUI() UIDisplayBase.CloseUI() UIDisplayBase.RegisterButtonCallback(String, Action) UIDisplayBase.RegisterButtonCallbackWithClose(String, Action) Namespace : GrandmaGreen.UI.Golems Assembly : cs.temp.dll.dll Syntax public class GolemMenu : UIDisplayBase Fields cameraZoom Camera zoom for golems on touch. Declaration public CameraZoom cameraZoom Field Value Type Description CameraZoom golemMenu Golem menu UI. Declaration public UIDocument golemMenu Field Value Type Description UIDocument Methods GolemMenuClose() Declaration public void GolemMenuClose() GolemMenuOpen() Declaration public void GolemMenuOpen() SetLocation(Vector3) Declaration public void SetLocation(Vector3 worldPosition) Parameters Type Name Description Vector3 worldPosition ToggleMenu(Boolean) Declaration public void ToggleMenu(bool isOpen) Parameters Type Name Description Boolean isOpen"
  },
  "api/GrandmaGreen.UI.Golems.html": {
    "href": "api/GrandmaGreen.UI.Golems.html",
    "title": "Namespace GrandmaGreen.UI.Golems",
    "keywords": "Namespace GrandmaGreen.UI.Golems Classes GolemMenu"
  },
  "api/GrandmaGreen.UI.html": {
    "href": "api/GrandmaGreen.UI.html",
    "title": "Namespace GrandmaGreen.UI",
    "keywords": "Namespace GrandmaGreen.UI Classes BaseUIController BaseUIDisplay UIDisplayTracker Structs UIDisplayRule Enums UITag"
  },
  "api/GrandmaGreen.UI.HUD.html": {
    "href": "api/GrandmaGreen.UI.HUD.html",
    "title": "Namespace GrandmaGreen.UI.HUD",
    "keywords": "Namespace GrandmaGreen.UI.HUD Classes HUD HUDController"
  },
  "api/GrandmaGreen.UI.HUD.HUD.html": {
    "href": "api/GrandmaGreen.UI.HUD.HUD.html",
    "title": "Class HUD",
    "keywords": "Class HUD Inheritance Object UIDisplayBase HUD Inherited Members UIDisplayBase.m_rootVisualElement UIDisplayBase.onPanelOpened UIDisplayBase.onPanelClosed UIDisplayBase.Awake() UIDisplayBase.OpenUI() UIDisplayBase.CloseUI() UIDisplayBase.RegisterButtonCallback(String, Action) UIDisplayBase.RegisterButtonCallbackWithClose(String, Action) Namespace : GrandmaGreen.UI.HUD Assembly : cs.temp.dll.dll Syntax public class HUD : UIDisplayBase Fields collectionUIDisplay Declaration public CollectionUIDisplay collectionUIDisplay Field Value Type Description CollectionUIDisplay cultivisionUIDisplay Declaration public CultivisionUIDisplay cultivisionUIDisplay Field Value Type Description CultivisionUIDisplay inventoryUIDisplay Declaration public TabbedInventory inventoryUIDisplay Field Value Type Description TabbedInventory settingsUIDisplay Declaration public SettingsUIDisplay settingsUIDisplay Field Value Type Description SettingsUIDisplay Methods CloseHUD() Declaration public void CloseHUD() CloseHUDAnimated() Declaration public void CloseHUDAnimated() DisableButton(String) Declaration public void DisableButton(string button) Parameters Type Name Description String button EnableButton(String) Declaration public void EnableButton(string button) Parameters Type Name Description String button Init() Declaration public void Init() Load() Declaration public override void Load() Overrides UIDisplayBase.Load() OpenHUD() Declaration public void OpenHUD() OpenHUDAnimated() Declaration public void OpenHUDAnimated() Start() Declaration public void Start() Unload() Declaration public override void Unload() Overrides UIDisplayBase.Unload()"
  },
  "api/GrandmaGreen.UI.HUD.HUDController.html": {
    "href": "api/GrandmaGreen.UI.HUD.HUDController.html",
    "title": "Class HUDController",
    "keywords": "Class HUDController Inheritance Object HUDController Inherited Members Object.ToString() Object.Equals(Object) Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetHashCode() Object.GetType() Object.MemberwiseClone() Namespace : GrandmaGreen.UI.HUD Assembly : cs.temp.dll.dll Syntax public class HUDController Constructors HUDController(VisualElement) Declaration public HUDController(VisualElement root) Parameters Type Name Description VisualElement root Methods ButtonOnClick(ClickEvent) Declaration public void ButtonOnClick(ClickEvent evt) Parameters Type Name Description ClickEvent evt CloseHUD() Declaration public void CloseHUD() CloseHUDAnimated() Declaration public void CloseHUDAnimated() InventoryOnClick(ClickEvent) Declaration public void InventoryOnClick(ClickEvent evt) Parameters Type Name Description ClickEvent evt OnScaleDown(TransitionEndEvent) Declaration public void OnScaleDown(TransitionEndEvent evt) Parameters Type Name Description TransitionEndEvent evt OnScaleUp(TransitionEndEvent) Declaration public void OnScaleUp(TransitionEndEvent evt) Parameters Type Name Description TransitionEndEvent evt OpenHUD() Declaration public void OpenHUD() OpenHUDAnimated() Declaration public void OpenHUDAnimated() RegisterButtonCallbacks() Declaration public void RegisterButtonCallbacks()"
  },
  "api/GrandmaGreen.UI.Shopping.html": {
    "href": "api/GrandmaGreen.UI.Shopping.html",
    "title": "Namespace GrandmaGreen.UI.Shopping",
    "keywords": "Namespace GrandmaGreen.UI.Shopping Classes ShoppingItemController ShoppingUI"
  },
  "api/GrandmaGreen.UI.Shopping.ShoppingItemController.html": {
    "href": "api/GrandmaGreen.UI.Shopping.ShoppingItemController.html",
    "title": "Class ShoppingItemController",
    "keywords": "Class ShoppingItemController Inheritance Object ShoppingItemController Namespace : GrandmaGreen.UI.Shopping Assembly : cs.temp.dll.dll Syntax public class ShoppingItemController : MonoBehaviour Constructors ShoppingItemController(VisualElement, Button, Action<ShopItem>) Declaration public ShoppingItemController(VisualElement root, Button button, Action<ShopItem> clickCallback) Parameters Type Name Description VisualElement root Button button Action < ShopItem > clickCallback Methods SetData(ShopItem) Declaration public void SetData(ShopItem shopItem) Parameters Type Name Description ShopItem shopItem SetSizeBadge() Declaration public void SetSizeBadge()"
  },
  "api/GrandmaGreen.UI.Shopping.ShoppingUI.html": {
    "href": "api/GrandmaGreen.UI.Shopping.ShoppingUI.html",
    "title": "Class ShoppingUI",
    "keywords": "Class ShoppingUI Inheritance Object UIDisplayBase ShoppingUI Inherited Members UIDisplayBase.m_rootVisualElement UIDisplayBase.onPanelOpened UIDisplayBase.onPanelClosed UIDisplayBase.Awake() UIDisplayBase.Load() UIDisplayBase.Unload() UIDisplayBase.RegisterButtonCallback(String, Action) UIDisplayBase.RegisterButtonCallbackWithClose(String, Action) Namespace : GrandmaGreen.UI.Shopping Assembly : cs.temp.dll.dll Syntax public class ShoppingUI : UIDisplayBase Fields availableItems Declaration public List<ShopItem> availableItems Field Value Type Description List < ShopItem > cancelSFX Declaration public SpookuleleAudio.ASoundContainer cancelSFX Field Value Type Description SpookuleleAudio.ASoundContainer closeSFX Declaration public SpookuleleAudio.ASoundContainer closeSFX Field Value Type Description SpookuleleAudio.ASoundContainer counterSFX Declaration public SpookuleleAudio.ASoundContainer counterSFX Field Value Type Description SpookuleleAudio.ASoundContainer m_currentAmount Declaration public int m_currentAmount Field Value Type Description Int32 openSFX Declaration public SpookuleleAudio.ASoundContainer openSFX Field Value Type Description SpookuleleAudio.ASoundContainer purchaseSFX Declaration public SpookuleleAudio.ASoundContainer purchaseSFX Field Value Type Description SpookuleleAudio.ASoundContainer selectedSFX Declaration public SpookuleleAudio.ASoundContainer selectedSFX Field Value Type Description SpookuleleAudio.ASoundContainer Methods CloseUI() Declaration public override void CloseUI() Overrides UIDisplayBase.CloseUI() OpenUI() Declaration public override void OpenUI() Overrides UIDisplayBase.OpenUI()"
  },
  "api/GrandmaGreen.UI.UIDisplayRule.html": {
    "href": "api/GrandmaGreen.UI.UIDisplayRule.html",
    "title": "Struct UIDisplayRule",
    "keywords": "Struct UIDisplayRule Inherited Members ValueType.Equals(Object) ValueType.GetHashCode() ValueType.ToString() Object.Equals(Object, Object) Object.ReferenceEquals(Object, Object) Object.GetType() Namespace : GrandmaGreen.UI Assembly : cs.temp.dll.dll Syntax [Serializable] public struct UIDisplayRule Fields closeWhenKeyClosed Declaration public UITag closeWhenKeyClosed Field Value Type Description UITag closeWhenKeyOpened Declaration public UITag closeWhenKeyOpened Field Value Type Description UITag openWhenKeyClosed Declaration public UITag openWhenKeyClosed Field Value Type Description UITag openWhenKeyOpened Declaration public UITag openWhenKeyOpened Field Value Type Description UITag"
  },
  "api/GrandmaGreen.UI.UIDisplayTracker.html": {
    "href": "api/GrandmaGreen.UI.UIDisplayTracker.html",
    "title": "Class UIDisplayTracker",
    "keywords": "Class UIDisplayTracker Inheritance Object UIDisplayTracker Namespace : GrandmaGreen.UI Assembly : cs.temp.dll.dll Syntax public class UIDisplayTracker : SerializedScriptableObject Fields displayRules Declaration public Dictionary<UITag, UIDisplayRule> displayRules Field Value Type Description Dictionary < UITag , UIDisplayRule > Methods AddPanel(BaseUIDisplay) Declaration public static void AddPanel(BaseUIDisplay uiDisplay) Parameters Type Name Description BaseUIDisplay uiDisplay Initalize() Declaration public void Initalize() Release() Declaration public void Release() RemovePanel(BaseUIDisplay) Declaration public static void RemovePanel(BaseUIDisplay uiDisplay) Parameters Type Name Description BaseUIDisplay uiDisplay"
  },
  "api/GrandmaGreen.UI.UITag.html": {
    "href": "api/GrandmaGreen.UI.UITag.html",
    "title": "Enum UITag",
    "keywords": "Enum UITag Namespace : GrandmaGreen.UI Assembly : cs.temp.dll.dll Syntax [Flags] public enum UITag Fields Name Description ALL HUD INVENTORY None SHOPPING TOOLS"
  },
  "api/GrandmaGreen.UIDisplayBase.html": {
    "href": "api/GrandmaGreen.UIDisplayBase.html",
    "title": "Class UIDisplayBase",
    "keywords": "Class UIDisplayBase Inheritance Object UIDisplayBase BulletinBoardUIDisplay CultivisionUIDisplay MailboxUIDisplay SellingUIDisplay SettingsUIDisplay ShopkeeperMenu StartScreenUIDisplay TutorialUIDisplay CollectionUIDisplay TabbedInventory GolemMenu HUD ShoppingUI Namespace : GrandmaGreen Assembly : cs.temp.dll.dll Syntax public class UIDisplayBase : MonoBehaviour Fields m_rootVisualElement Declaration public VisualElement m_rootVisualElement Field Value Type Description VisualElement Methods Awake() Declaration protected virtual void Awake() CloseUI() Declaration public virtual void CloseUI() Load() Declaration public virtual void Load() OpenUI() Declaration public virtual void OpenUI() RegisterButtonCallback(String, Action) Declaration public void RegisterButtonCallback(string buttonName, Action callbackFunction) Parameters Type Name Description String buttonName Action callbackFunction RegisterButtonCallbackWithClose(String, Action) Declaration public void RegisterButtonCallbackWithClose(string buttonName, Action callbackFunction) Parameters Type Name Description String buttonName Action callbackFunction Unload() Declaration public virtual void Unload() Events onPanelClosed Declaration public event Action onPanelClosed Event Type Type Description Action onPanelOpened Declaration public event Action onPanelOpened Event Type Type Description Action"
  },
  "guide/coding.html": {
    "href": "guide/coding.html",
    "title": "Coding Style Guide",
    "keywords": "Coding Style Guide Naming Conventions Names of classes, enumerations, structs, methods, and namespaces: PascalCase . public class MyClass { ... } public void MyFunction() { ... } namespace GrandmaGreen.ExampleNamespace { ... } enum MyEnum { StateOne, StateTwo } Names of properties and all variables, including local and member variables: camelCase . Private member variables should also append an m_ prefix ahead of the variable name. Similarly, static variables should append an s_ prefix ahead of the variable name. public int myInt; private string m_myString; static float s_myFloat; public void MyFunction(int myLocalVariable) { ... } Good Practice For readability, please consider the following: One statement per line. Keep opening and closing braces on their own lines. Avoid: if (condition) { DoSomething(); DoSomethingElse(); } Instead, do: if (condition) { DoSomething(); DoSomethingElse(); } We also encourage using the sealed keyword when possible. This is done to help prevent accidental derivative classes. Similarly, use structs over classes when possible. Structs are sealed and self contained. We utilize structs frequently when multi-threading, but they are good for general optimization. Our team prioritizes and values modularity and reusability . Please keep systems and classes as decoupled as possible to minimize risk of the whole game crashing when one feature bugs out. That being said, please always reach out to any of the leads or other team members if you are stuck on the best way to implement something! Remember that everything is done best with another pair of eyes. 🌻 Files and Organization Anything that needs to go on this website should go in the Assets/_GrandmaGreen/Scripts folder. The script picks up anything in this folder that has a .cs ending. File names and directory names should be in PascalCase , ie. MyFile.cs . Where possible, the name of the file should be the same as the name of the main class in the file, ie. MyClass.cs . Try to keep to one core class per file."
  },
  "guide/commenting.html": {
    "href": "guide/commenting.html",
    "title": "Commenting Code",
    "keywords": "Commenting Code Comments in code should conform to XML documentation markup standards , as this is what DocFX utilizes to transform code into readable webpages."
  },
  "index.html": {
    "href": "index.html",
    "title": "Grandma Green Documentation 🌱",
    "keywords": "Grandma Green Documentation 🌱 Welcome to Grandma Green's documentation! This page was built for old and new dev team members alike to help keep track of changes to the system. This repository has been configured to sync with changes to the Perforce depot every day at midnight PST. Any updates will then be pushed and published to the website immediately afterwards. Collaborators may also manually sync the repository and/or rebuild the website. Please contact Jamie Leodones at leodones@usc.edu for any troubles regarding this repository and its documentation, or to be added as a collaborator. 💚"
  }
}